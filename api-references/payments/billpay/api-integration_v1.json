{
  "openapi": "3.0.1",
  "info": {
    "title": "Setu BBPS BillPay",
    "description": "Enable easy BBPS bill payments in your App",
    "version": "0.1.0-alpha"
  },
  "servers": [
    {
      "url": "https://sandbox-coudc.setu.co/api/v1",
      "description": "Sandbox"
    },
    {
      "url": "https://coudc.setu.co/api/v1",
      "description": "Production"
    }
  ],
  "paths": {
    "/bbps/billers": {
      "get": {
        "tags": [
          "Take bulk actions"
        ],
        "summary": "List billers for category",
        "operationId": "getBillers",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Category of the biller",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Billers to search",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "default": 250
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Billers are sorted via the Biller ID. Providing a biller Id fetches billers right after this biller in a paginated way.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches the provided text over Biller name and Biller Alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pincode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coverage",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "IND-TEL-Hyderabad",
            "description": "Fetches billers in the provided coverage area"
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "IND",
            "description": "Fetches billers in the provided country"
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "TEL",
            "description": "Fetches billers in the provided state"
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "Hyderabad",
            "description": "Fetches billers in the provided city"
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentChannel",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INT",
                  "INTB",
                  "MOB",
                  "BNKBRNCH",
                  "BSC",
                  "AGT",
                  "KIOSK",
                  "ATM",
                  "MOBB",
                  "POS",
                  "MPOS"
                ]
              }
            }
          },
          {
            "name": "paymentMode",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Internet Banking",
                  "Debit Card",
                  "Credit Card",
                  "Prepaid Card",
                  "IMPS",
                  "Cash",
                  "UPI",
                  "Wallet",
                  "NEFT",
                  "AEPS",
                  "Account Transfer",
                  "Bharat QR",
                  "USSD"
                ]
              }
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-12-12T13:12:00+05:30",
            "description": "Fetches billers updated on or after the provided timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "List of billers",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/billerListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/bbps/bills/complaint/request": {
      "post": {
        "tags": [
          "Manage Dispute"
        ],
        "summary": "Raise dispute",
        "operationId": "DisputeRequest",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/couAgentDisputeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericRefIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentDisputeRequest"
      }
    },
    "/bbps/bills/complaint/response": {
      "post": {
        "tags": [
          "Manage Dispute"
        ],
        "summary": "Check dispute status",
        "operationId": "DisputeResponse",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refIdBasedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/couAgentDisputeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/bbps/bills/fetch/request": {
      "post": {
        "tags": [
          "Fetch bill"
        ],
        "summary": "Fetch bill",
        "operationId": "FetchRequest",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/couAgentBillFetchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericRefIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentBillFetchRequest"
      }
    },
    "/bbps/bills/fetch/response": {
      "post": {
        "tags": [
          "Fetch bill"
        ],
        "summary": "Get fetched bill",
        "operationId": "FetchResponse",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refIdBasedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/couAgentBillFetchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/bbps/bills/payment/request": {
      "post": {
        "tags": [
          "Pay bill"
        ],
        "summary": "Post payment details",
        "operationId": "PaymentRequest",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/couAgentBillPaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericRefIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentBillPaymentRequest"
      }
    },
    "/bbps/bills/payment/response": {
      "post": {
        "tags": [
          "Pay bill"
        ],
        "summary": "Check payment status",
        "operationId": "PaymentResponse",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refIdBasedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/couAgentBillPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/bbps/categories": {
      "get": {
        "tags": [
          "Take bulk actions"
        ],
        "summary": "List all categories",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoriesListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/bbps/disputes": {
      "get": {
        "tags": [
          "Take bulk actions"
        ],
        "summary": "List disputes",
        "operationId": "getDisputes",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "ASSIGNED",
                  "RE_ASSIGNED",
                  "ASSIGNED_TO_BOU",
                  "ASSIGNED_TO_COU",
                  "ASSIGNED_TO_OU",
                  "ESCALATED",
                  "RESOLVED",
                  "UNRESOLVED"
                ]
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "default": 250
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "description": "Mobile number with 6, 10 and 20 digits are valid.",
            "schema": {
              "maxLength": 20,
              "minLength": 6,
              "pattern": "^\\d{6}(\\d{4}(\\d{10})?)?$",
              "type": "string"
            }
          },
          {
            "name": "transactionIds",
            "in": "query",
            "description": "Transaction IDs",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "partnerRefIds",
            "in": "query",
            "description": "Partner provided transaction Ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "billerIds",
            "in": "query",
            "description": "The biller ID on BBPS",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "customerMobileNumber",
            "in": "query",
            "description": "Mobile number with 6, 10 and 20 digits are valid.",
            "schema": {
              "maxLength": 20,
              "minLength": 6,
              "pattern": "^\\d{6}(\\d{4}(\\d{10})?)?$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of disputes",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disputeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/bbps/transactions": {
      "get": {
        "tags": [
          "Take bulk actions"
        ],
        "summary": "List paid bills",
        "operationId": "getTxns",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "start date of the timestamp provided by the partner while making the request. Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-07-19"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-07-19"
          },
          {
            "name": "billerId",
            "in": "query",
            "description": "Transaction BillerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Transaction Reference Ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Transaction Status",
            "schema": {
              "type": "string",
              "enum": [
                "Processing",
                "Success",
                "Error",
                "Refunded"
              ]
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "description": "Mobile number with 6, 10 and 20 digits are valid.",
            "schema": {
              "maxLength": 20,
              "minLength": 6,
              "pattern": "^\\d{6}(\\d{4}(\\d{10})?)?$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Txns",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genericErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bbps": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Check health",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/healthResponseParam"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "additionalInfoLineItem": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Line item 1"
          },
          "value": {
            "type": "string",
            "example": "Value 1"
          }
        }
      },
      "agentDetails": {
        "required": [
          "channel",
          "id"
        ],
        "type": "object",
        "properties": {
          "app": {
            "type": "string",
            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
            "example": "SmartPay"
          },
          "channel": {
            "$ref": "#/components/schemas/paymentChannel"
          },
          "geocode": {
            "type": "string",
            "description": "Mandatory if channel is `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
            "example": "19.0139,72.8254"
          },
          "id": {
            "type": "string",
            "description": "The ID of the agent initiating the BBPS transaction.",
            "example": "AX01AI06512391457204"
          },
          "ifsc": {
            "type": "string",
            "description": "Mandatory if channel is `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
            "example": "ICIC0000152"
          },
          "imei": {
            "type": "string",
            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
            "example": "123456789012345"
          },
          "ip": {
            "type": "string",
            "description": "Mandatory if channel is `INT`, `INTB`. Not required for others.",
            "format": "ipv4",
            "example": "124.170.23.24"
          },
          "mac": {
            "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
            "type": "string",
            "description": "Mandatory if channel is `INT`, `INTB`. Not required for others.",
            "example": "48-4D-7E-CB-DB-6F"
          },
          "mobile": {
            "$ref": "#/components/schemas/mobile"
          },
          "os": {
            "type": "string",
            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
            "example": "iOS",
            "enum": [
              "iOS",
              "Android"
            ]
          },
          "postalCode": {
            "pattern": "^[1-9][0-9]{5}$",
            "type": "string",
            "description": "Mandatory if channel is  `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
            "example": "600001"
          },
          "terminalId": {
            "type": "string",
            "description": "Mandatory if channel is `ATM`, `AGT`, `KIOSK` and `BSC` . Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
            "example": "6000011234"
          }
        }
      },
      "bbpsFailureReason": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "BBPS Error code",
            "example": "ERR004"
          },
          "message": {
            "type": "string",
            "description": "BBPS Failure message",
            "example": "customer not found"
          },
          "type": {
            "type": "string",
            "enum": [
              "FUND_TRANSFER",
              "BBPS",
              "APP"
            ]
          }
        }
      },
      "billAdditionalInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/additionalInfoLineItem"
        },
        "x-go-name": "BillAdditionalInfo"
      },
      "billData": {
        "required": [
          "amount",
          "billDate",
          "billNumber",
          "billPeriod",
          "customerName",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "example": 120000
          },
          "billDate": {
            "type": "string",
            "format": "date",
            "example": "2021-01-02"
          },
          "billNumber": {
            "type": "string",
            "example": "1232332"
          },
          "billPeriod": {
            "type": "string",
            "enum": [
              "Onetime",
              "Daily",
              "Weekly",
              "BiMontly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "AsPresented"
            ]
          },
          "customerName": {
            "type": "string",
            "example": "Manoj Chekuri"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "example": "2021-09-24"
          }
        },
        "x-go-name": "BillData"
      },
      "billFetchResponseData": {
        "required": [
          "refId",
          "status"
        ],
        "type": "object",
        "properties": {
          "additionalInfo": {
            "$ref": "#/components/schemas/billAdditionalInfo"
          },
          "bill": {
            "$ref": "#/components/schemas/billData"
          },
          "billerRefId": {
            "type": "string",
            "example": "7f16a032e514"
          },
          "exactness": {
            "type": "string",
            "example": "EXACT/EXACT_UP/EXACT_DOWN/ADHOC"
          },
          "failureReason": {
            "$ref": "#/components/schemas/bbpsFailureReason"
          },
          "paymentLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentModeSpec"
            },
            "x-omitempty": true
          },
          "refId": {
            "type": "string",
            "description": "BBPS Reference ID",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          }
        }
      },
      "billParameterItem": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the parameter. This has to match what is sent in fields.",
            "example": "Loan Number"
          },
          "value": {
            "type": "string",
            "description": "The value of the customer parameter",
            "example": "1895159"
          }
        }
      },
      "billParameters": {
        "type": "array",
        "description": "The bill params for fetching the bill",
        "items": {
          "$ref": "#/components/schemas/billParameterItem"
        }
      },
      "billPaymentResponseData": {
        "required": [
          "refId",
          "status"
        ],
        "type": "object",
        "properties": {
          "billerId": {
            "type": "string",
            "description": "The biller ID on BBPS",
            "example": "MAHI00000NATIC"
          },
          "billerRefId": {
            "type": "string",
            "example": "ZA6291A177"
          },
          "failureReason": {
            "$ref": "#/components/schemas/bbpsFailureReason"
          },
          "paymentDetails": {
            "$ref": "#/components/schemas/paymentDetails"
          },
          "refId": {
            "type": "string",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          },
          "refundDetails": {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/errorMessage"
              },
              "status": {
                "$ref": "#/components/schemas/status"
              },
              "transactionId": {
                "type": "string",
                "example": "AX30910192192192192"
              }
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "transactionId": {
            "type": "string",
            "example": "AX30910192192192192"
          }
        }
      },
      "billerDetails": {
        "required": [
          "categoryName",
          "customerParams",
          "exactness",
          "fetchApiType",
          "id",
          "name",
          "payWithoutFetchAllowed",
          "paymentChannels",
          "paymentModes",
          "supportsPendingStatus"
        ],
        "type": "object",
        "properties": {
          "bbpsUpdateTimestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-12T13:12:00+05:30",
            "description": "The timestamp when the biller was last updated accurate to the nearest day"
          },
          "categoryName": {
            "type": "string",
            "example": "loan-repayment"
          },
          "city": {
            "type": "string",
            "example": "Hyderabad"
          },
          "country": {
            "type": "string",
            "example": "IND"
          },
          "coverage": {
            "type": "string",
            "example": "IND-TEL-Hyderabad"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2020-12-12T13:12:00+05:30",
            "x-omitempty": false
          },
          "customerParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/customerParamSpec"
            }
          },
          "customerParamsGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/customerParamsGroupItem"
            }
          },
          "enforcesSameDayFetchPay": {
            "type": "boolean",
            "example": true,
            "description": "Denotes whether the biller requires biller payment to be made on the same calendar day as the bill fetch."
          },
          "exactness": {
            "type": "string",
            "enum": [
              "Exact",
              "Exact and above",
              "Exact and below"
            ]
          },
          "fetchApiType": {
            "type": "string",
            "description": "Denotes whether the biller accepts Fetch, Validate or Direct payment.",
            "enum": [
              "BILL_FETCH",
              "BILL_VALIDATE",
              "BILL_DIRECT"
            ]
          },
          "id": {
            "type": "string",
            "example": "ADIT00000NAT0T"
          },
          "logo": {
            "type": "string",
            "example": "logo"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2020-12-12T13:12:00+05:30",
            "x-omitempty": false
          },
          "name": {
            "type": "string",
            "example": "Aditya Birla Sun Life Insurance"
          },
          "payWithoutFetchAllowed": {
            "type": "boolean",
            "example": true
          },
          "paymentChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentChannelSpec"
            }
          },
          "paymentModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentModeSpec"
            }
          },
          "pincode": {
            "type": "string",
            "example": "pincode"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/planItem"
            }
          },
          "state": {
            "type": "string",
            "example": "TEL"
          },
          "supportsPendingStatus": {
            "type": "boolean",
            "example": false
          },
          "tags": {
            "type": "string",
            "example": "tags"
          }
        },
        "x-go-name": "CouBillerDetails"
      },
      "billerListResponse": {
        "required": [
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "required": [
              "billers"
            ],
            "type": "object",
            "properties": {
              "billers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/billerDetails"
                }
              },
              "nextPage": {
                "type": "string",
                "example": "/api/bbps/billers?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
              },
              "total": {
                "type": "integer",
                "example": 3000
              }
            }
          },
          "error": {
            "$ref": "#/components/schemas/errorMessage"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        }
      },
      "categoriesListResponse": {
        "required": [
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "required": [
              "categories"
            ],
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/categoryListItem"
                }
              }
            }
          },
          "error": {
            "$ref": "#/components/schemas/errorMessage"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        }
      },
      "categoryListItem": {
        "type": "object",
        "properties": {
          "billerCount": {
            "type": "integer",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Loan Repayment"
          }
        }
      },
      "autofetchSubscriptionBiller": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The biller ID on BBPS",
            "example": "MAHI00000NATIC"
          }
        },
        "x-go-gen-location": "models",
        "x-go-name": "BillerDetails"
      },
      "autofetchBillerCustomerParamsBiller": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The biller ID on BBPS",
            "example": "MAHI00000NATIC"
          }
        },
        "x-go-gen-location": "models",
        "x-go-name": "BillerDetails"
      },
      "complaintStatus": {
        "type": "string",
        "description": "BBPS Complaint status",
        "example": "ASSIGNED",
        "enum": [
          "INITIALIZED",
          "ASSIGNED",
          "RE_ASSIGNED",
          "ASSIGNED_TO_BOU",
          "ASSIGNED_TO_COU",
          "ASSIGNED_TO_OU",
          "ESCALATED",
          "RESOLVED",
          "UNRESOLVED"
        ]
      },
      "couAgentBillFetchRequest": {
        "required": [
          "agent",
          "biller",
          "customer"
        ],
        "type": "object",
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/agentDetails"
          },
          "biller": {
            "$ref": "#/components/schemas/autofetchSubscriptionBiller"
          },
          "customer": {
            "$ref": "#/components/schemas/customerDetails"
          }
        },
        "x-go-name": "CouAgentBillFetchRequest",
        "x-omitempty": true
      },
      "couAgentBillFetchResponse": {
        "required": [
          "data",
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/billFetchResponseData"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        },
        "x-go-name": "CouAgentBillFetchResponse"
      },
      "couAgentBillPaymentRequest": {
        "required": [
          "paymentDetails"
        ],
        "type": "object",
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/agentDetails"
          },
          "biller": {
            "$ref": "#/components/schemas/autofetchSubscriptionBiller"
          },
          "customer": {
            "$ref": "#/components/schemas/customerDetails"
          },
          "paymentDetails": {
            "$ref": "#/components/schemas/paymentDetails"
          },
          "refId": {
            "type": "string",
            "description": "BBPS Reference ID",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          }
        },
        "x-go-name": "CouAgentBillPaymentRequest",
        "x-omitempty": true
      },
      "couAgentBillPaymentResponse": {
        "required": [
          "data",
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/billPaymentResponseData"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        },
        "x-go-name": "CouAgentBillPaymentResponse",
        "x-omitempty": true
      },
      "couAgentDisputeRequest": {
        "required": [
          "description",
          "disputeType",
          "txnReferenceId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Amount deducted multiple times."
          },
          "disputeType": {
            "type": "string",
            "enum": [
              "account-not-updated",
              "double-payment",
              "paid-to-wrong-account",
              "others",
              "amount-deducted-biller-credited-no-transaction-id",
              "amount-deducted-biller-not-credited-no-transaction-id",
              "amount-deducted-multiple-times"
            ]
          },
          "txnReferenceId": {
            "type": "string",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          }
        },
        "x-go-name": "CouAgentDisputeRequest",
        "x-omitempty": true
      },
      "couAgentDisputeResponse": {
        "required": [
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/disputeResponseData"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        },
        "x-go-name": "CouAgentDisputeResponse",
        "x-omitempty": true
      },
      "customerDetails": {
        "required": [
          "billParameters",
          "mobile"
        ],
        "type": "object",
        "properties": {
          "billParameters": {
            "$ref": "#/components/schemas/billParameters"
          },
          "mobile": {
            "$ref": "#/components/schemas/mobile"
          }
        }
      },
      "customerParamSpec": {
        "required": [
          "dataType",
          "maxLength",
          "minLength",
          "optional",
          "paramName",
          "regex",
          "values",
          "visibility"
        ],
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "example": "ALPHANUMERIC"
          },
          "maxLength": {
            "type": "integer",
            "example": 15
          },
          "minLength": {
            "type": "integer",
            "example": 7
          },
          "optional": {
            "type": "boolean",
            "example": false
          },
          "paramName": {
            "type": "string",
            "example": "Loan Account Number"
          },
          "regex": {
            "type": "string",
            "example": "^[a-zA-Z0-9]{7,15}"
          },
          "values": {
            "type": "string"
          },
          "visibility": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "customerParamsGroupItem": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "Param 1"
        }
      },
      "disputeListItem": {
        "type": "object",
        "properties": {
          "assigned": {
            "type": "string",
            "description": "BBPOU to which the complaint is assigned",
            "example": "OU Four"
          },
          "billerId": {
            "type": "string",
            "description": "The biller ID on BBPS",
            "example": "MAHI00000NATIC"
          },
          "complaintId": {
            "type": "string",
            "description": "Complaint ID",
            "example": "OP0121046567755"
          },
          "complaintStatus": {
            "$ref": "#/components/schemas/complaintStatus"
          },
          "customerMobileNumber": {
            "$ref": "#/components/schemas/mobile"
          },
          "partnerRefId": {
            "type": "string",
            "example": "AX30910192192192192"
          },
          "refId": {
            "type": "string",
            "description": "Reference ID",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
          },
          "remarks": {
            "type": "string",
            "description": "BBPS Complaint remarks",
            "example": "Payment Pending"
          },
          "responseCode": {
            "type": "string",
            "description": "Carries the response code indicating success or failure of the transaction",
            "example": "0"
          },
          "responseReason": {
            "type": "string",
            "example": "SUCCESS"
          },
          "transactionId": {
            "type": "string",
            "description": "Setu BillPay Transaction ID.",
            "example": "AX30910192192192192"
          }
        }
      },
      "disputeListResponse": {
        "required": [
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "required": [
              "disputes"
            ],
            "type": "object",
            "properties": {
              "disputes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/disputeListItem"
                }
              },
              "nextPage": {
                "type": "string",
                "example": "/api/bbps/billers?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
              },
              "total": {
                "type": "integer",
                "example": 3000
              }
            }
          },
          "error": {
            "$ref": "#/components/schemas/errorMessage"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        }
      },
      "disputeResponseData": {
        "required": [
          "assignedTo",
          "disputeId",
          "refId",
          "remarks",
          "status"
        ],
        "type": "object",
        "properties": {
          "assignedTo": {
            "type": "string",
            "example": "ICICI BOU"
          },
          "disputeId": {
            "type": "string",
            "example": "OP0121046567755"
          },
          "refId": {
            "type": "string",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          },
          "remarks": {
            "type": "string",
            "example": "Resolved in favour of Biller"
          },
          "status": {
            "$ref": "#/components/schemas/complaintStatus"
          }
        },
        "x-go-name": "DisputeResponseData"
      },
      "errorMessage": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "validation-error"
          },
          "message": {
            "type": "string",
            "example": "Input is invalid"
          }
        }
      },
      "genericErrorResponse": {
        "required": [
          "error",
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/errorMessage"
          },
          "success": {
            "type": "boolean",
            "example": false
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        }
      },
      "genericRefIdResponse": {
        "required": [
          "data",
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/wrappedRefId"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
          }
        }
      },
      "healthResponseParam": {
        "required": [
          "environment",
          "server",
          "version"
        ],
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "example": "PROD"
          },
          "server": {
            "type": "string",
            "example": "mistborn"
          },
          "version": {
            "type": "string",
            "example": "db42717a829da9d3061e4f409f3c0ee9935b72a5"
          }
        },
        "x-go-name": "HealthResponseParam",
        "x-omitempty": true
      },
      "mobile": {
        "maxLength": 20,
        "minLength": 6,
        "pattern": "^\\d{6}(\\d{4}(\\d{10})?)?$",
        "type": "string",
        "description": "Mobile number with 6, 10 and 20 digits are valid.",
        "example": "9481773053"
      },
      "paymentChannel": {
        "type": "string",
        "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
        "example": "INT",
        "enum": [
          "INT",
          "INTB",
          "MOB",
          "BNKBRNCH",
          "BSC",
          "AGT",
          "KIOSK",
          "ATM",
          "MOBB",
          "POS",
          "MPOS"
        ]
      },
      "paymentChannelSpec": {
        "required": [
          "maxLimit",
          "minLimit",
          "paymentChannel",
          "supportsPendingStatus"
        ],
        "type": "object",
        "properties": {
          "maxLimit": {
            "type": "integer",
            "example": 500000000
          },
          "minLimit": {
            "type": "integer",
            "example": 10100
          },
          "paymentChannel": {
            "$ref": "#/components/schemas/paymentChannel"
          },
          "supportsPendingStatus": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "paymentDetails": {
        "required": [
          "amount",
          "mode",
          "paymentRefId",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 1,
            "type": "integer",
            "description": "Amount in Paise",
            "example": 10000
          },
          "mode": {
            "$ref": "#/components/schemas/paymentMode"
          },
          "paymentParams": {
            "$ref": "#/components/schemas/paymentParameters"
          },
          "paymentRefId": {
            "maxLength": 35,
            "minLength": 6,
            "type": "string",
            "example": "BD019181220291"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-12T13:12:00+05:30"
          }
        }
      },
      "paymentMode": {
        "type": "string",
        "example": "Internet Banking",
        "enum": [
          "Internet Banking",
          "Debit Card",
          "Credit Card",
          "Prepaid Card",
          "IMPS",
          "Cash",
          "UPI",
          "Wallet",
          "NEFT",
          "AEPS",
          "Account Transfer",
          "Bharat QR",
          "USSD"
        ]
      },
      "paymentModeSpec": {
        "required": [
          "maxLimit",
          "minLimit",
          "paymentMode",
          "supportsPendingStatus"
        ],
        "type": "object",
        "properties": {
          "maxLimit": {
            "type": "integer",
            "example": 500000000
          },
          "minLimit": {
            "type": "integer",
            "example": 10100
          },
          "paymentMode": {
            "$ref": "#/components/schemas/paymentMode"
          },
          "supportsPendingStatus": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "paymentParameterItem": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the parameter. This has to match what is sent in fields.",
            "example": "Early Payment Amount"
          },
          "value": {
            "type": "string",
            "description": "The value of the payment parameter",
            "example": "100"
          }
        }
      },
      "paymentParameters": {
        "type": "array",
        "description": "Additional Payment Parameters",
        "items": {
          "$ref": "#/components/schemas/paymentParameterItem"
        }
      },
      "planItem": {
        "required": [
          "amount",
          "categoryType",
          "description",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "additionalInfo": {
            "minItems": 1,
            "type": "array",
            "description": "Plan Additional information details provided by the Biller.",
            "example": [
              {
                "paramName": "Mobile Number",
                "paramValue": "Text"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "paramName": {
                  "type": "string",
                  "example": "Plan Additional information parameter name."
                },
                "paramValue": {
                  "type": "string",
                  "example": "Plan Additional information parameter value."
                }
              },
              "example": {
                "paramName": "Mobile Number",
                "paramValue": "Text"
              },
              "x-go-name": "PlanAdditionalInfoItem"
            },
            "x-omitempty": true
          },
          "amount": {
            "type": "string",
            "example": "22"
          },
          "categorySubType": {
            "type": "object",
            "properties": {},
            "description": "Plan sub category as defined by the Biller.",
            "example": {
              "subType": "1 Month"
            },
            "x-omitempty": true
          },
          "categoryType": {
            "type": "string",
            "description": "Plan category as defined by the Biller.",
            "example": "VIP"
          },
          "description": {
            "type": "string",
            "description": "Plan description as defined by the Biller.",
            "example": "Unlimited Live Sports"
          },
          "effectiveFrom": {
            "type": "string",
            "description": "Effective from date of corresponding Plan.",
            "format": "date",
            "nullable": true,
            "example": "2017-07-21",
            "x-omitempty": false
          },
          "effectiveTo": {
            "type": "string",
            "description": "Effective to date of corresponding Plan.",
            "format": "date",
            "nullable": true,
            "example": "2020-08-21",
            "x-omitempty": false
          },
          "id": {
            "type": "string",
            "description": "Plan ID",
            "example": "1"
          },
          "status": {
            "type": "string",
            "description": "Effective to date of corresponding Plan.",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "DEACTIVATED"
            ]
          }
        }
      },
      "refIdBasedRequest": {
        "required": [
          "refId"
        ],
        "type": "object",
        "properties": {
          "refId": {
            "type": "string",
            "example": "LNMSQQR4RKT7X1UGPY7JGUV454PL9T2C689"
          }
        },
        "x-go-name": "RefIdBasedRequest",
        "x-omitempty": true
      },
      "status": {
        "type": "string",
        "example": "Success",
        "enum": [
          "Processing",
          "Success",
          "Failure"
        ]
      },
      "successAndTracerDetails": {
        "required": [
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        }
      },
      "transactionsResponse": {
        "required": [
          "data",
          "success",
          "traceId"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/txnResponseData"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "traceId": {
            "type": "string",
            "example": "C3SFG0O6N88R6UI7EQ"
          }
        },
        "x-go-name": "TransactionsResponse",
        "x-omitempty": true
      },
      "txnLineItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "example": 120000
          },
          "billerId": {
            "type": "string",
            "description": "The biller ID on BBPS",
            "example": "MAHI00000NATIC"
          },
          "customerMobileNumber": {
            "$ref": "#/components/schemas/mobile"
          },
          "partnerRefId": {
            "type": "string",
            "example": "AX30910192192192192"
          },
          "refId": {
            "type": "string",
            "description": "BBPS Reference ID",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          },
          "status": {
            "$ref": "#/components/schemas/txnStatus"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp provided by partner while making payment request.",
            "format": "date-time",
            "example": "2020-12-12T13:12:00+05:30"
          },
          "transactionId": {
            "type": "string",
            "description": "Setu BillPay Transaction ID.",
            "example": "AX30910192192192192"
          }
        }
      },
      "txnResponseData": {
        "type": "object",
        "properties": {
          "nextPage": {
            "type": "string",
            "example": "/api/bbps/billers?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/txnLineItem"
            }
          }
        }
      },
      "txnStatus": {
        "type": "string",
        "example": "Success",
        "enum": [
          "Processing",
          "Success",
          "Error",
          "Refunded"
        ]
      },
      "wrappedRefId": {
        "required": [
          "refId"
        ],
        "type": "object",
        "properties": {
          "refId": {
            "type": "string",
            "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
          }
        }
      }
    },
    "securitySchemes": {
      "bbps": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sandbox-kabini-coudc.setu.co/api/v1/auth/token",
            "scopes": {
              "bbps:partner": "Grant access to agent APIs"
            }
          }
        }
      }
    }
  }
}
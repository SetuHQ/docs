{
  "openapi": "3.0.1",
  "info": {
    "title": "Setu BBPS BillPay",
    "version": "v2",
    "description": "Enable easy BBPS bill payments in your App"
  },
  "servers": [
    {
      "url": "https://sandbox-coudc.setu.co",
      "description": "Sandbox server"
    },
    {
      "url": "https://qa-coudc.setu.co",
      "description": "QA server"
    },
    {
      "url": "https://coudc.setu.co",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/v2/auth/token": {
      "post": {
        "tags": [
          "Token API"
        ],
        "description": "Fetch token to be used to authorize all Setu APIs",
        "operationId": "fetchToken",
        "requestBody": {
          "description": "The API key pair",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string",
                    "description": "clientID from the API key pair"
                  },
                  "secret": {
                    "type": "string",
                    "description": "secret from the API key pair"
                  }
                },
                "description": "Fetch Token API payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Auth token response",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "expiresIn",
                        "token"
                      ],
                      "type": "object",
                      "properties": {
                        "expiresIn": {
                          "type": "integer",
                          "description": "Token expiry duration in seconds"
                        },
                        "token": {
                          "type": "string",
                          "description": "Token to be used in subsequent requests"
                        }
                      }
                    },
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "fetchTokenPayload"
      }
    },
    "/api/v2/bbps/bills/fetch/request": {
      "post": {
        "tags": [
          "Fetch"
        ],
        "description": "Bill fetch request API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "agent",
                      "biller"
                    ],
                    "type": "object",
                    "properties": {
                      "remitter": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "pan": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "aadhaar": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "agent": {
                        "required": [
                          "channel",
                          "id"
                        ],
                        "type": "object",
                        "properties": {
                          "mac": {
                            "type": "string",
                            "description": "Mandatory if channel is `INT`, `INTB`. Not required for others.",
                            "format": "mac",
                            "example": "48-4D-7E-CB-DB-6F"
                          },
                          "postalCode": {
                            "pattern": "^[1-9][0-9]{5}$",
                            "type": "string",
                            "description": "Mandatory if channel is  `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "600001"
                          },
                          "terminalId": {
                            "type": "string",
                            "description": "Mandatory if channel is `ATM`, `AGT`, `KIOSK` and `BSC` . Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "6000011234"
                          },
                          "app": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "SmartPay"
                          },
                          "geocode": {
                            "type": "string",
                            "description": "Mandatory if channel is `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "19.0139,72.8254"
                          },
                          "ip": {
                            "type": "string",
                            "description": "Mandatory if channel is `INT`, `INTB`, `MOB`, `MOBB`. Not required for others.",
                            "format": "ipv4",
                            "example": "124.170.23.24"
                          },
                          "mobile": {
                            "maxLength": 22,
                            "minLength": 6,
                            "pattern": "^\\d{6,22}$",
                            "type": "string",
                            "description": "Mobile number with 6 to 22 digits are valid."
                          },
                          "os": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "iOS",
                            "enum": [
                              "iOS",
                              "Android"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                            "example": "INT",
                            "enum": [
                              "INT",
                              "INTB",
                              "MOB",
                              "BNKBRNCH",
                              "BSC",
                              "AGT",
                              "KIOSK",
                              "ATM",
                              "MOBB",
                              "POS",
                              "MPOS"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the agent initiating the BBPS transaction.",
                            "example": "AX01AI06512391457204"
                          },
                          "ifsc": {
                            "type": "string",
                            "description": "Mandatory if channel is `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "ICIC0000152"
                          },
                          "imei": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "123456789012345"
                          }
                        }
                      },
                      "biller": {
                        "required": [
                          "id"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The biller ID on BBPS",
                            "example": "MAHI00000NATIC"
                          }
                        },
                        "x-go-gen-location": "models",
                        "x-go-name": "BillerDetails"
                      }
                    },
                    "x-omitempty": true
                  },
                  {
                    "required": [
                      "customer"
                    ],
                    "type": "object",
                    "properties": {
                      "customer": {
                        "allOf": [
                          {
                            "required": [
                              "mobile"
                            ],
                            "type": "object",
                            "properties": {
                              "mobile": {
                                "maxLength": 22,
                                "minLength": 6,
                                "pattern": "^\\d{6,22}$",
                                "type": "string",
                                "description": "Mobile number with 6 to 22 digits are valid."
                              },
                              "customerId": {
                                "type": "string",
                                "description": "Customer Identifier"
                              }
                            }
                          },
                          {
                            "required": [
                              "customerParams"
                            ],
                            "type": "object",
                            "properties": {
                              "customerParams": {
                                "type": "array",
                                "description": "The bill params for fetching the bill",
                                "items": {
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the customer parameter",
                                      "example": "1895159"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The display name of the parameter. This has to match what is sent in fields.",
                                      "example": "Loan Number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "mandate": {
                        "type": "object",
                        "properties": {
                          "billPeriod": {
                            "type": "string",
                            "description": "Mandatory for Validation & Pay billers. Allowed values: DAILY, WEEKLY, BIMONTHLY, MONTHLY, QUARTERLY, HALFYEARLY, YEARLY\nOptional for Fetch & Pay billers. Allowed values: ASPRESENTED\n",
                            "nullable": true,
                            "example": "MONTHLY",
                            "x-omitempty": true
                          },
                          "billerParams": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Captures the name of the biller parameter to be sent as part of UPMS registration.",
                                  "example": "Low Balance Threshold"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the biller parameter to be sent as part of UPMS registration.",
                                  "example": "500"
                                }
                              },
                              "description": "Optional. Only some billers require this. Details of the biller parameter to be sent as part of UPMS registration."
                            },
                            "x-omitempty": true
                          },
                          "debitInfo": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "description": "The fixed or maximum amount set for auto-debit (value must be provided in paise).",
                                "example": 10000
                              },
                              "currency": {
                                "type": "integer",
                                "description": "The currency code. Use `356` for `INR`.",
                                "example": 356
                              },
                              "debitDate": {
                                "type": "string",
                                "description": "The preferred date format (`DD-MMM`) for attempting the auto-debit each cycle.",
                                "example": "10-Feb"
                              },
                              "paymentMode": {
                                "type": "string",
                                "description": "The payment method intended for auto-debit, allowed values:\n - Internet Banking\n - Debit Card\n - Credit Card\n - Prepaid Card\n - IMPS\n - UPI\n - Wallet\n - NEFT\n - AEPS\n - Account Transfer\n - Bharat QR",
                                "example": "UPI"
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the debit rule. Can be `FIXED_AMOUNT` (pay the exact bill amount) or `MAX_AMOUNT` (pay up to this limit).",
                                "example": "FIXED_AMOUNT"
                              }
                            },
                            "description": "Details for debit information (mandatory when registrationType is AUTO_PAY)"
                          },
                          "registrationType": {
                            "type": "string",
                            "description": "The type of registration (AUTO_PAY or VIEW_N_PAY)",
                            "example": "AUTO_PAY"
                          },
                          "toDate": {
                            "type": "string",
                            "description": "The UPMS registration is invalid after this date. Date format is YYYY-MM-DD",
                            "nullable": true,
                            "example": "2027-01-01",
                            "x-omitempty": true
                          }
                        }
                      }
                    }
                  }
                ],
                "x-go-name": "CouAgentBillFetchRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - Normal bill fetch response",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "200-duplicate-mandate": {
            "description": "Success - Bill fetch response with duplicate mandate",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        },
                        "upmsRegistration": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Mandate registration failed due to duplicate mandate",
                              "example": "FAILED",
                              "enum": [
                                "FAILED"
                              ]
                            },
                            "duplicate": {
                              "required": [
                                "code",
                                "message"
                              ],
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "duplicate-ref-id"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "refId": {
                                  "type": "string",
                                  "description": "The generated Reference ID for the request."
                                }
                              }
                            }
                          },
                          "description": "Present only when upmsRegistration was requested"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "200-failed-mandate": {
            "description": "Success - Bill fetch response with failed mandate",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        },
                        "upmsRegistration": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Mandate registration has failed",
                              "example": "FAILED",
                              "enum": [
                                "FAILED"
                              ]
                            },
                            "error": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "invalid-mandate"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "The mandate configuration is invalid"
                                }
                              },
                              "description": "Present only when acknowledgement status for the registration is FAILED"
                            }
                          },
                          "description": "Present only when upmsRegistration was requested"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "200-pending-mandate": {
            "description": "Success - Bill fetch response with processing mandate",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        },
                        "upmsRegistration": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Mandate registration is being processed",
                              "example": "PENDING",
                              "enum": [
                                "PENDING"
                              ]
                            },
                            "refId": {
                              "type": "string",
                              "description": "The reference ID for the UPMS registration",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            }
                          },
                          "description": "Present only when upmsRegistration was requested"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentBillFetchRequest"
      }
    },
    "/api/v2/bbps/bills/fetch/response": {
      "post": {
        "tags": [
          "Fetch"
        ],
        "description": "Bill fetch response API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "refId"
                ],
                "type": "object",
                "properties": {
                  "refId": {
                    "type": "string",
                    "description": "The generated Reference ID for the request."
                  }
                },
                "x-go-name": "RefIdBasedRequest",
                "x-omitempty": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - Standard successful fetch for a single bill biller",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "bills": {
                              "type": "array",
                              "description": "Multiple bills in case of response from B2B biller",
                              "items": {
                                "required": [
                                  "billDate",
                                  "billNumber",
                                  "billPeriod",
                                  "customerName",
                                  "dueDate"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billNumber": {
                                    "type": "string",
                                    "example": "1232332"
                                  },
                                  "billPeriod": {
                                    "type": "string",
                                    "example": "ONETIME|DAILY|WEEKLY|BIMONTHLY|MONTHLY|QUARTERLY|HALFYEARLY|YEARLY|ASPRESENTED"
                                  },
                                  "dueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-09-24"
                                  },
                                  "label": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Advance EMI",
                                    "x-omitempty": true
                                  },
                                  "minAmount": {
                                    "type": "integer",
                                    "description": "Minimum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "paymentOptions": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "maxAmount": {
                                          "type": "integer",
                                          "description": "The maximum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "minAmount": {
                                          "type": "integer",
                                          "description": "The minimum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The display name of the option.",
                                          "example": "2 Months EMI Amount"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "The amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "amountMultiple": {
                                          "type": "integer",
                                          "description": "The payment amount should be a multiple of this value in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        }
                                      },
                                      "x-go-name": "PaymentOption"
                                    },
                                    "x-omitempty": true
                                  },
                                  "amountMultiple": {
                                    "type": "integer",
                                    "description": "Bill payment amount should be multiple of this value in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-01-02"
                                  },
                                  "customerName": {
                                    "type": "string",
                                    "example": "Manoj Chekuri"
                                  },
                                  "maxAmount": {
                                    "type": "integer",
                                    "description": "Maximum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  }
                                },
                                "x-go-name": "BillData"
                              },
                              "x-omitempty": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "additionalInfo": {
                              "type": "array",
                              "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Line item 1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "Value 1"
                                  }
                                }
                              },
                              "x-go-name": "BillAdditionalInfo",
                              "x-omitempty": false
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-failed-fetch": {
            "description": "Success - Bill fetch failed due to customer not found or biller error",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "failureReason": {
                              "required": [
                                "code",
                                "message"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "FUND_TRANSFER",
                                    "BBPS",
                                    "APP"
                                  ]
                                },
                                "code": {
                                  "type": "string",
                                  "example": "ERR004"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "customer not found"
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-flexible-amount-bill": {
            "description": "Success - Bill with payment options and amount ranges",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "bills": {
                              "type": "array",
                              "description": "Multiple bills in case of response from B2B biller",
                              "items": {
                                "required": [
                                  "billDate",
                                  "billNumber",
                                  "billPeriod",
                                  "customerName",
                                  "dueDate"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billNumber": {
                                    "type": "string",
                                    "example": "1232332"
                                  },
                                  "billPeriod": {
                                    "type": "string",
                                    "example": "ONETIME|DAILY|WEEKLY|BIMONTHLY|MONTHLY|QUARTERLY|HALFYEARLY|YEARLY|ASPRESENTED"
                                  },
                                  "dueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-09-24"
                                  },
                                  "label": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Advance EMI",
                                    "x-omitempty": true
                                  },
                                  "minAmount": {
                                    "type": "integer",
                                    "description": "Minimum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "paymentOptions": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "maxAmount": {
                                          "type": "integer",
                                          "description": "The maximum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "minAmount": {
                                          "type": "integer",
                                          "description": "The minimum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The display name of the option.",
                                          "example": "2 Months EMI Amount"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "The amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "amountMultiple": {
                                          "type": "integer",
                                          "description": "The payment amount should be a multiple of this value in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        }
                                      },
                                      "x-go-name": "PaymentOption"
                                    },
                                    "x-omitempty": true
                                  },
                                  "amountMultiple": {
                                    "type": "integer",
                                    "description": "Bill payment amount should be multiple of this value in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-01-02"
                                  },
                                  "customerName": {
                                    "type": "string",
                                    "example": "Manoj Chekuri"
                                  },
                                  "maxAmount": {
                                    "type": "integer",
                                    "description": "Maximum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  }
                                },
                                "x-go-name": "BillData"
                              },
                              "x-omitempty": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "additionalInfo": {
                              "type": "array",
                              "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Line item 1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "Value 1"
                                  }
                                }
                              },
                              "x-go-name": "BillAdditionalInfo",
                              "x-omitempty": false
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-multiple-bills-list": {
            "description": "Success - Biller returns multiple bills with selection type",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "bills": {
                              "type": "array",
                              "description": "Multiple bills in case of response from B2B biller",
                              "items": {
                                "required": [
                                  "billDate",
                                  "billNumber",
                                  "billPeriod",
                                  "customerName",
                                  "dueDate"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billNumber": {
                                    "type": "string",
                                    "example": "1232332"
                                  },
                                  "billPeriod": {
                                    "type": "string",
                                    "example": "ONETIME|DAILY|WEEKLY|BIMONTHLY|MONTHLY|QUARTERLY|HALFYEARLY|YEARLY|ASPRESENTED"
                                  },
                                  "dueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-09-24"
                                  },
                                  "label": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Advance EMI",
                                    "x-omitempty": true
                                  },
                                  "minAmount": {
                                    "type": "integer",
                                    "description": "Minimum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "paymentOptions": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "maxAmount": {
                                          "type": "integer",
                                          "description": "The maximum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "minAmount": {
                                          "type": "integer",
                                          "description": "The minimum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The display name of the option.",
                                          "example": "2 Months EMI Amount"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "The amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "amountMultiple": {
                                          "type": "integer",
                                          "description": "The payment amount should be a multiple of this value in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        }
                                      },
                                      "x-go-name": "PaymentOption"
                                    },
                                    "x-omitempty": true
                                  },
                                  "amountMultiple": {
                                    "type": "integer",
                                    "description": "Bill payment amount should be multiple of this value in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-01-02"
                                  },
                                  "customerName": {
                                    "type": "string",
                                    "example": "Manoj Chekuri"
                                  },
                                  "maxAmount": {
                                    "type": "integer",
                                    "description": "Maximum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  }
                                },
                                "x-go-name": "BillData"
                              },
                              "x-omitempty": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "additionalInfo": {
                              "type": "array",
                              "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Line item 1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "Value 1"
                                  }
                                }
                              },
                              "x-go-name": "BillAdditionalInfo",
                              "x-omitempty": false
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-prepaid-with-plans": {
            "description": "Success - Biller returns plan information for prepaid recharge",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "bills": {
                              "type": "array",
                              "description": "Multiple bills in case of response from B2B biller",
                              "items": {
                                "required": [
                                  "billDate",
                                  "billNumber",
                                  "billPeriod",
                                  "customerName",
                                  "dueDate"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billNumber": {
                                    "type": "string",
                                    "example": "1232332"
                                  },
                                  "billPeriod": {
                                    "type": "string",
                                    "example": "ONETIME|DAILY|WEEKLY|BIMONTHLY|MONTHLY|QUARTERLY|HALFYEARLY|YEARLY|ASPRESENTED"
                                  },
                                  "dueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-09-24"
                                  },
                                  "label": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Advance EMI",
                                    "x-omitempty": true
                                  },
                                  "minAmount": {
                                    "type": "integer",
                                    "description": "Minimum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "paymentOptions": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "maxAmount": {
                                          "type": "integer",
                                          "description": "The maximum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "minAmount": {
                                          "type": "integer",
                                          "description": "The minimum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The display name of the option.",
                                          "example": "2 Months EMI Amount"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "The amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "amountMultiple": {
                                          "type": "integer",
                                          "description": "The payment amount should be a multiple of this value in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        }
                                      },
                                      "x-go-name": "PaymentOption"
                                    },
                                    "x-omitempty": true
                                  },
                                  "amountMultiple": {
                                    "type": "integer",
                                    "description": "Bill payment amount should be multiple of this value in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-01-02"
                                  },
                                  "customerName": {
                                    "type": "string",
                                    "example": "Manoj Chekuri"
                                  },
                                  "maxAmount": {
                                    "type": "integer",
                                    "description": "Maximum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  }
                                },
                                "x-go-name": "BillData"
                              },
                              "x-omitempty": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerPlanResponse": {
                              "type": "object",
                              "properties": {
                                "planInfo": {
                                  "type": "array",
                                  "description": "Array of plan information as defined in BBPS schema",
                                  "items": {
                                    "required": [
                                      "details",
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "details": {
                                        "type": "array",
                                        "description": "Array of plan details",
                                        "items": {
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the plan parameter",
                                              "example": "Plan_ID"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the plan parameter",
                                              "example": "599"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type of the plan as defined in BBPS schema",
                                        "enum": [
                                          "NEW",
                                          "EXISTING",
                                          "RECOMMENDED",
                                          "CURATED",
                                          "ACTIVATED"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "description": "Plan details returned by the biller during validation (used for prepaid recharge)",
                              "nullable": true,
                              "x-omitempty": true
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "additionalInfo": {
                              "type": "array",
                              "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Line item 1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "Value 1"
                                  }
                                }
                              },
                              "x-go-name": "BillAdditionalInfo",
                              "x-omitempty": false
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-processing-status": {
            "description": "Success - Fetch request is still being processed",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "200-upms-registration": {
            "description": "Success - Bill fetch with mandate registration",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "refId",
                            "status"
                          ],
                          "type": "object",
                          "properties": {
                            "billerSelectionType": {
                              "type": "string",
                              "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "MULTIPLE",
                                "ALL"
                              ],
                              "x-omitempty": false,
                              "x-nullable": true
                            },
                            "bills": {
                              "type": "array",
                              "description": "Multiple bills in case of response from B2B biller",
                              "items": {
                                "required": [
                                  "billDate",
                                  "billNumber",
                                  "billPeriod",
                                  "customerName",
                                  "dueDate"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billNumber": {
                                    "type": "string",
                                    "example": "1232332"
                                  },
                                  "billPeriod": {
                                    "type": "string",
                                    "example": "ONETIME|DAILY|WEEKLY|BIMONTHLY|MONTHLY|QUARTERLY|HALFYEARLY|YEARLY|ASPRESENTED"
                                  },
                                  "dueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-09-24"
                                  },
                                  "label": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Advance EMI",
                                    "x-omitempty": true
                                  },
                                  "minAmount": {
                                    "type": "integer",
                                    "description": "Minimum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "paymentOptions": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "maxAmount": {
                                          "type": "integer",
                                          "description": "The maximum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "minAmount": {
                                          "type": "integer",
                                          "description": "The minimum amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The display name of the option.",
                                          "example": "2 Months EMI Amount"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "The amount that can be paid for this option in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        },
                                        "amountMultiple": {
                                          "type": "integer",
                                          "description": "The payment amount should be a multiple of this value in paise.",
                                          "nullable": true,
                                          "x-omitempty": true
                                        }
                                      },
                                      "x-go-name": "PaymentOption"
                                    },
                                    "x-omitempty": true
                                  },
                                  "amountMultiple": {
                                    "type": "integer",
                                    "description": "Bill payment amount should be multiple of this value in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  },
                                  "billDate": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-01-02"
                                  },
                                  "customerName": {
                                    "type": "string",
                                    "example": "Manoj Chekuri"
                                  },
                                  "maxAmount": {
                                    "type": "integer",
                                    "description": "Maximum amount that can be paid for this bill in paise",
                                    "nullable": true,
                                    "x-omitempty": true
                                  }
                                },
                                "x-go-name": "BillData"
                              },
                              "x-omitempty": true
                            },
                            "refId": {
                              "type": "string",
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                            },
                            "billerResponseType": {
                              "type": "string",
                              "nullable": true,
                              "example": "SINGLE",
                              "enum": [
                                "SINGLE",
                                "LIST",
                                "SELECTIVE"
                              ],
                              "x-nullable": true,
                              "x-omitempty": false
                            },
                            "exactness": {
                              "type": "string",
                              "example": "Exact",
                              "enum": [
                                "Exact",
                                "Exact and above",
                                "Exact and below",
                                "Any",
                                "RANGE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "example": "Success",
                              "enum": [
                                "Processing",
                                "Success",
                                "Failure",
                                "Credit_Adjustment"
                              ]
                            },
                            "upmsRegistrationRefId": {
                              "type": "string",
                              "nullable": true,
                              "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202",
                              "x-omitempty": true
                            },
                            "additionalInfo": {
                              "type": "array",
                              "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Line item 1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "Value 1"
                                  }
                                }
                              },
                              "x-go-name": "BillAdditionalInfo",
                              "x-omitempty": false
                            },
                            "billerRefId": {
                              "type": "string",
                              "example": "7f16a032e514"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "x-go-name": "CouAgentBillFetchResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/api/v2/bbps/bills/payment/request": {
      "post": {
        "tags": [
          "Pay"
        ],
        "description": "Bill payment request API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "paymentDetails"
                    ],
                    "type": "object",
                    "properties": {
                      "bills": {
                        "uniqueItems": true,
                        "type": "array",
                        "nullable": true,
                        "example": "Selection on bills in case of list billers",
                        "items": {
                          "required": [
                            "amount",
                            "billNumber"
                          ],
                          "type": "object",
                          "properties": {
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "billNumber": {
                              "type": "string",
                              "example": "B1234567"
                            }
                          },
                          "x-omitempty": true
                        },
                        "x-omitempty": true
                      },
                      "remitter": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "pan": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "aadhaar": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "agent": {
                        "required": [
                          "channel",
                          "id"
                        ],
                        "type": "object",
                        "properties": {
                          "mac": {
                            "type": "string",
                            "description": "Mandatory if channel is `INT`, `INTB`. Not required for others.",
                            "format": "mac",
                            "example": "48-4D-7E-CB-DB-6F"
                          },
                          "postalCode": {
                            "pattern": "^[1-9][0-9]{5}$",
                            "type": "string",
                            "description": "Mandatory if channel is  `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "600001"
                          },
                          "terminalId": {
                            "type": "string",
                            "description": "Mandatory if channel is `ATM`, `AGT`, `KIOSK` and `BSC` . Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "6000011234"
                          },
                          "app": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "SmartPay"
                          },
                          "geocode": {
                            "type": "string",
                            "description": "Mandatory if channel is `AGT`, `BSC` and `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "19.0139,72.8254"
                          },
                          "ip": {
                            "type": "string",
                            "description": "Mandatory if channel is `INT`, `INTB`, `MOB`, `MOBB`. Not required for others.",
                            "format": "ipv4",
                            "example": "124.170.23.24"
                          },
                          "mobile": {
                            "maxLength": 22,
                            "minLength": 6,
                            "pattern": "^\\d{6,22}$",
                            "type": "string",
                            "description": "Mobile number with 6 to 22 digits are valid."
                          },
                          "os": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "iOS",
                            "enum": [
                              "iOS",
                              "Android"
                            ]
                          },
                          "channel": {
                            "type": "string",
                            "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                            "example": "INT",
                            "enum": [
                              "INT",
                              "INTB",
                              "MOB",
                              "BNKBRNCH",
                              "BSC",
                              "AGT",
                              "KIOSK",
                              "ATM",
                              "MOBB",
                              "POS",
                              "MPOS"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the agent initiating the BBPS transaction.",
                            "example": "AX01AI06512391457204"
                          },
                          "ifsc": {
                            "type": "string",
                            "description": "Mandatory if channel is `BNKBRNCH`. Not required for others. This has to match the data submitted to NPCI for this agent ID\n",
                            "example": "ICIC0000152"
                          },
                          "imei": {
                            "type": "string",
                            "description": "Mandatory if channel is `MOB`, `MOBB`. Not required for others.",
                            "example": "123456789012345"
                          }
                        }
                      },
                      "biller": {
                        "required": [
                          "id"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The biller ID on BBPS",
                            "example": "MAHI00000NATIC"
                          }
                        },
                        "x-go-gen-location": "models",
                        "x-go-name": "BillerDetails"
                      },
                      "paymentDetails": {
                        "required": [
                          "amount",
                          "mode",
                          "paymentRefId",
                          "timestamp"
                        ],
                        "type": "object",
                        "properties": {
                          "Id": {
                            "type": "string",
                            "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                            "example": "1"
                          },
                          "accountInfo": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                          },
                          "amount": {
                            "minimum": 1,
                            "type": "integer",
                            "description": "Amount in Paise"
                          },
                          "currency": {
                            "type": "integer",
                            "nullable": true
                          },
                          "mode": {
                            "type": "string",
                            "example": "Internet Banking",
                            "enum": [
                              "Internet Banking",
                              "Debit Card",
                              "Credit Card",
                              "Prepaid Card",
                              "IMPS",
                              "Cash",
                              "UPI",
                              "Wallet",
                              "NEFT",
                              "AEPS",
                              "Account Transfer",
                              "Bharat QR",
                              "USSD",
                              "BHIM Aadhaar Pay"
                            ]
                          },
                          "selectedPaymentOptions": {
                            "type": "array",
                            "description": "List of selected payment options",
                            "nullable": true,
                            "items": {
                              "required": [
                                "amount",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "The amount to be paid for the selected payment option."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the payment option as returned in bill fetch response.",
                                  "example": "Early Payment Amount"
                                }
                              }
                            },
                            "x-nullable": true,
                            "x-omitempty": true
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-12-12T13:12:00+05:30"
                          },
                          "COUcustConvFee": {
                            "type": "integer",
                            "nullable": true
                          },
                          "custConvFee": {
                            "type": "integer",
                            "nullable": true
                          },
                          "paymentRefId": {
                            "maxLength": 35,
                            "minLength": 6,
                            "type": "string",
                            "example": "BD019181220291"
                          }
                        }
                      },
                      "refId": {
                        "type": "string",
                        "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                      }
                    },
                    "x-omitempty": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "customer": {
                        "allOf": [
                          {
                            "required": [
                              "mobile"
                            ],
                            "type": "object",
                            "properties": {
                              "mobile": {
                                "maxLength": 22,
                                "minLength": 6,
                                "pattern": "^\\d{6,22}$",
                                "type": "string",
                                "description": "Mobile number with 6 to 22 digits are valid."
                              },
                              "customerId": {
                                "type": "string",
                                "description": "Customer Identifier"
                              }
                            }
                          },
                          {
                            "required": [
                              "customerParams"
                            ],
                            "type": "object",
                            "properties": {
                              "customerParams": {
                                "type": "array",
                                "description": "The bill params for fetching the bill",
                                "items": {
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the customer parameter",
                                      "example": "1895159"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The display name of the parameter. This has to match what is sent in fields.",
                                      "example": "Loan Number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "x-go-name": "CouAgentBillPaymentRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate request",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "duplicate": {
                          "required": [
                            "code",
                            "message"
                          ],
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "duplicate-ref-id"
                            },
                            "message": {
                              "type": "string"
                            },
                            "refId": {
                              "type": "string",
                              "description": "The generated Reference ID for the request."
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentBillPaymentRequestV2"
      }
    },
    "/api/v2/bbps/bills/payment/response": {
      "post": {
        "tags": [
          "Pay"
        ],
        "description": "Bill payment response API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "refId"
                ],
                "type": "object",
                "properties": {
                  "refId": {
                    "type": "string",
                    "description": "The generated Reference ID for the request."
                  }
                },
                "x-go-name": "RefIdBasedRequest",
                "x-omitempty": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - Standard successful payment for a single bill",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "lastPaidDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2020-12-12T13:12:00+05:30"
                        },
                        "status": {
                          "type": "string",
                          "example": "Success",
                          "enum": [
                            "Success"
                          ]
                        },
                        "transactionId": {
                          "type": "string",
                          "example": "AX30910192192192192"
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "billerRefId": {
                          "type": "string",
                          "example": "ZA6291A177"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        },
                        "additionalInfo": {
                          "type": "array",
                          "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Line item 1"
                              },
                              "value": {
                                "type": "string",
                                "example": "Value 1"
                              }
                            }
                          },
                          "x-go-name": "BillAdditionalInfo",
                          "x-omitempty": false
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-failed-payment": {
            "description": "Success - Payment failed due to insufficient funds",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "failureReason": {
                          "required": [
                            "code",
                            "message"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "BBPS",
                                "APP",
                                "FUND_TRANSFER"
                              ],
                              "example": "FUND_TRANSFER"
                            },
                            "code": {
                              "type": "string",
                              "example": "ERR001"
                            },
                            "message": {
                              "type": "string",
                              "example": "Insufficient funds"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Failure",
                          "enum": [
                            "Failure"
                          ]
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-multiple-bills-payment": {
            "description": "Success - Payment for multiple bills from LIST type biller",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "lastPaidDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2020-12-12T13:12:00+05:30"
                        },
                        "status": {
                          "type": "string",
                          "example": "Success",
                          "enum": [
                            "Success"
                          ]
                        },
                        "transactionId": {
                          "type": "string",
                          "example": "AX30910192192192192"
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "billerRefId": {
                          "type": "string",
                          "example": "ZA6291A177"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        },
                        "additionalInfo": {
                          "type": "array",
                          "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Line item 1"
                              },
                              "value": {
                                "type": "string",
                                "example": "Value 1"
                              }
                            }
                          },
                          "x-go-name": "BillAdditionalInfo",
                          "x-omitempty": false
                        },
                        "bills": {
                          "uniqueItems": true,
                          "type": "array",
                          "nullable": true,
                          "example": "The bills paid in case of list billers",
                          "items": {
                            "required": [
                              "amount",
                              "billNumber"
                            ],
                            "type": "object",
                            "properties": {
                              "amount": {
                                "minimum": 1,
                                "type": "integer",
                                "description": "Amount in Paise"
                              },
                              "billNumber": {
                                "type": "string",
                                "example": "B1234567"
                              }
                            },
                            "x-omitempty": true
                          },
                          "x-omitempty": true
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-payment-with-ccf": {
            "description": "Success - Payment with customer convenience fees applied",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "lastPaidDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2020-12-12T13:12:00+05:30"
                        },
                        "status": {
                          "type": "string",
                          "example": "Success",
                          "enum": [
                            "Success"
                          ]
                        },
                        "transactionId": {
                          "type": "string",
                          "example": "AX30910192192192192"
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "billerRefId": {
                          "type": "string",
                          "example": "ZA6291A177"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "COUcustConvFee": {
                              "type": "integer",
                              "nullable": true,
                              "example": 10
                            },
                            "custConvFee": {
                              "type": "integer",
                              "nullable": true,
                              "example": 59
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        },
                        "additionalInfo": {
                          "type": "array",
                          "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Line item 1"
                              },
                              "value": {
                                "type": "string",
                                "example": "Value 1"
                              }
                            }
                          },
                          "x-go-name": "BillAdditionalInfo",
                          "x-omitempty": false
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-payment-with-selected-options": {
            "description": "Success - Flexible payment with selected payment options",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "lastPaidDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2020-12-12T13:12:00+05:30"
                        },
                        "status": {
                          "type": "string",
                          "example": "Success",
                          "enum": [
                            "Success"
                          ]
                        },
                        "transactionId": {
                          "type": "string",
                          "example": "AX30910192192192192"
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "billerRefId": {
                          "type": "string",
                          "example": "ZA6291A177"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        },
                        "additionalInfo": {
                          "type": "array",
                          "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Line item 1"
                              },
                              "value": {
                                "type": "string",
                                "example": "Value 1"
                              }
                            }
                          },
                          "x-go-name": "BillAdditionalInfo",
                          "x-omitempty": false
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-prepaid-plan-payment": {
            "description": "Success - Prepaid recharge payment with selected plan",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "lastPaidDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2020-12-12T13:12:00+05:30"
                        },
                        "status": {
                          "type": "string",
                          "example": "Success",
                          "enum": [
                            "Success"
                          ]
                        },
                        "transactionId": {
                          "type": "string",
                          "example": "AX30910192192192192"
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "billerRefId": {
                          "type": "string",
                          "example": "ZA6291A177"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "599"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        },
                        "additionalInfo": {
                          "type": "array",
                          "description": "This tag captures the additional information provided by the Biller as part of response for a successful transaction.",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Line item 1"
                              },
                              "value": {
                                "type": "string",
                                "example": "Value 1"
                              }
                            }
                          },
                          "x-go-name": "BillAdditionalInfo",
                          "x-omitempty": false
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "200-processing-payment": {
            "description": "Success - Payment is still being processed",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "Processing",
                          "enum": [
                            "Processing"
                          ]
                        },
                        "billerId": {
                          "type": "string",
                          "description": "The biller ID on BBPS",
                          "example": "MAHI00000NATIC"
                        },
                        "paymentDetails": {
                          "required": [
                            "amount",
                            "mode",
                            "paymentRefId",
                            "timestamp"
                          ],
                          "type": "object",
                          "properties": {
                            "Id": {
                              "type": "string",
                              "description": "Pass here the ID of the selected payment plan in payment request. If a plan was selected in payment request, its Id will be a part of the paymentDetails block in payment response.",
                              "example": "1"
                            },
                            "accountInfo": {
                              "maxLength": 50,
                              "minLength": 1,
                              "type": "string"
                            },
                            "amount": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Amount in Paise"
                            },
                            "currency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "mode": {
                              "type": "string",
                              "example": "Internet Banking",
                              "enum": [
                                "Internet Banking",
                                "Debit Card",
                                "Credit Card",
                                "Prepaid Card",
                                "IMPS",
                                "Cash",
                                "UPI",
                                "Wallet",
                                "NEFT",
                                "AEPS",
                                "Account Transfer",
                                "Bharat QR",
                                "USSD",
                                "BHIM Aadhaar Pay"
                              ]
                            },
                            "selectedPaymentOptions": {
                              "type": "array",
                              "description": "List of selected payment options",
                              "nullable": true,
                              "items": {
                                "required": [
                                  "amount",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The amount to be paid for the selected payment option."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the payment option as returned in bill fetch response.",
                                    "example": "Early Payment Amount"
                                  }
                                }
                              },
                              "x-nullable": true,
                              "x-omitempty": true
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-12-12T13:12:00+05:30"
                            },
                            "paymentRefId": {
                              "maxLength": 35,
                              "minLength": 6,
                              "type": "string",
                              "example": "BD019181220291"
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                        }
                      }
                    }
                  },
                  "x-omitempty": true,
                  "x-go-name": "CouAgentBillPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/api/v2/bbps/bills/complaint/request": {
      "post": {
        "tags": [
          "Dispute"
        ],
        "description": "Raise dispute request API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "description",
                      "disputeType"
                    ],
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "Test Transaction Based Complaint"
                      },
                      "disputeType": {
                        "type": "string",
                        "description": "The type of NPCI dispute",
                        "enum": [
                          "account-not-updated",
                          "double-payment",
                          "paid-to-wrong-account",
                          "others",
                          "amount-deducted-biller-credited-no-transaction-id",
                          "amount-deducted-biller-not-credited-no-transaction-id",
                          "amount-deducted-multiple-times",
                          "service-not-received",
                          "service-disconnected",
                          "late-payment-surcharge",
                          "wrong-amount",
                          "payment-info-delay"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "transactionId"
                    ],
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string",
                        "example": "HENSVVR4QOS7X1UGPY7JGUV444P10102202"
                      }
                    }
                  }
                ],
                "x-go-name": "CouAgentDisputeRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "refId"
                      ],
                      "type": "object",
                      "properties": {
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "HENSVVR4QOS7X1UGPY7JGUV444P10461713"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentDisputeRequest"
      }
    },
    "/api/v2/bbps/bills/complaint/response": {
      "post": {
        "tags": [
          "Dispute"
        ],
        "description": "Raise dispute response API",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "refId"
                ],
                "type": "object",
                "properties": {
                  "refId": {
                    "type": "string",
                    "description": "The generated Reference ID for the request."
                  }
                },
                "x-go-name": "RefIdBasedRequest",
                "x-omitempty": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - Dispute assigned to appropriate resolver for investigation",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Dispute assigned to appropriate resolver for investigation"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-20"
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D11"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Dispute assigned to appropriate resolver for investigation"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "ASSIGNED",
                          "enum": [
                            "ASSIGNED",
                            "RESOLVED",
                            "REJECTED",
                            "DEFAULT_RESOLVED",
                            "REFUNDED",
                            "PENDING_REFUND"
                          ]
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "200-dispute-default-resolved": {
            "description": "Success - Dispute automatically resolved due to timeout or default process in favour of customer",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Dispute automatically resolved due to timeout or default process in favour of customer"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Automatic resolution due to timeout"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "DEFAULT_RESOLVED",
                          "enum": [
                            "DEFAULT_RESOLVED"
                          ]
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-20"
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D11"
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "200-dispute-pending-refund": {
            "description": "Success - Refund approved and currently being processed",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Refund approved and currently being processed"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Refund processing in progress"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-20"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "PENDING_REFUND",
                          "enum": [
                            "PENDING_REFUND"
                          ]
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D11"
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "200-dispute-refunded": {
            "description": "Success - Refund successfully processed and completed",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Refund successfully processed and completed"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Refund initiated as per resolution"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "REFUNDED",
                          "enum": [
                            "REFUNDED"
                          ]
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-20"
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D11"
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "200-dispute-rejected": {
            "description": "Success - Dispute rejected due to insufficient evidence or invalid claims at biller's end",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Dispute rejected due to insufficient evidence or invalid claims at biller's end"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Invalid complaint type or missing documentation"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-20"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "REJECTED",
                          "enum": [
                            "REJECTED"
                          ]
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D32"
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "200-dispute-resolved": {
            "description": "Success - Dispute successfully resolved through investigation in favour of customer",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "assignedTo",
                        "disputeId",
                        "refId",
                        "remarks",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "remarks": {
                          "type": "string",
                          "example": "Dispute successfully resolved through investigation in favour of customer"
                        },
                        "responseReason": {
                          "type": "string",
                          "example": "Customer complaint validated"
                        },
                        "ticketType": {
                          "type": "string",
                          "enum": [
                            "DISPUTE",
                            "COMPLAINT"
                          ],
                          "example": "DISPUTE"
                        },
                        "assignedTo": {
                          "type": "string",
                          "example": "ICICI BOU"
                        },
                        "status": {
                          "type": "string",
                          "description": "BBPS Complaint status",
                          "example": "RESOLVED",
                          "enum": [
                            "RESOLVED"
                          ]
                        },
                        "ticketTAT": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "example": "2024-01-15"
                        },
                        "disposition": {
                          "type": "string",
                          "enum": [
                            "D11",
                            "D12",
                            "D13",
                            "D21",
                            "D22",
                            "D23",
                            "D31",
                            "D32"
                          ],
                          "example": "D11"
                        },
                        "disputeId": {
                          "type": "string",
                          "example": "OP0121046567755"
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        }
                      },
                      "x-go-name": "DisputeResponseData"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  },
                  "x-go-name": "CouAgentDisputeResponse",
                  "x-omitempty": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentAsyncRequest"
      }
    },
    "/api/v2/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Health check",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "environment",
                    "server",
                    "version"
                  ],
                  "type": "object",
                  "properties": {
                    "environment": {
                      "type": "string",
                      "example": "PROD"
                    },
                    "server": {
                      "type": "string",
                      "example": "mistborn"
                    },
                    "version": {
                      "type": "string",
                      "example": "db42717a829da9d3061e4f409f3c0ee9935b72a5"
                    }
                  },
                  "x-go-name": "HealthResponseParam",
                  "x-omitempty": true
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/upms/simulate/{upmsRegistrationRefId}/callbacks/bill": {
      "post": {
        "tags": [
          "UPMS"
        ],
        "description": "Simulate bill notification",
        "operationId": "SimulateBillNotification",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "upmsRegistrationRefId",
            "in": "path",
            "description": "Reference ID of the UPMS registration",
            "required": true,
            "schema": {
              "maxLength": 35,
              "minLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Request accepted and queued for processing",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the success of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "CV4PE82LTNJE9O014OE0"
                    }
                  },
                  "x-go-name": "SimulateCallbackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden in current environment",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registration not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/bbps/disputes": {
      "get": {
        "tags": [
          "List"
        ],
        "description": "Returns the list of disputes.",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "ASSIGNED",
                  "RE_ASSIGNED",
                  "ASSIGNED_TO_BOU",
                  "ASSIGNED_TO_COU",
                  "ASSIGNED_TO_OU",
                  "ESCALATED",
                  "RESOLVED",
                  "UNRESOLVED"
                ]
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Biller Category",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "months",
            "in": "query",
            "description": "Month ranges. A full-date notation as defined by 'RFC 3339, section 5.6' has to be provided but only month and year will be considered.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "description": "Mobile number with 6 to 22 digits are valid.",
            "schema": {
              "maxLength": 22,
              "minLength": 6,
              "pattern": "^\\d{6,22}$",
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionIds",
            "in": "query",
            "description": "Transaction IDs",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paymentRefIds",
            "in": "query",
            "description": "Partner provided transaction Ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 35,
                "minLength": 6,
                "type": "string"
              }
            }
          },
          {
            "name": "billerIds",
            "in": "query",
            "description": "The biller ID on BBPS",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BILLER",
                  "TRANSACTION"
                ]
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "List of disputes",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "required": [
                            "disputes"
                          ],
                          "type": "object",
                          "properties": {
                            "disputes": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "remarks": {
                                        "type": "string",
                                        "example": "ADIT00000NATRA"
                                      },
                                      "responseReason": {
                                        "type": "string",
                                        "example": "ADIT00000NATRA"
                                      },
                                      "transactionId": {
                                        "type": "string",
                                        "description": "Setu BillPay Transaction ID.",
                                        "example": "AS01910192192192192"
                                      },
                                      "complaintId": {
                                        "type": "string",
                                        "example": "Loan Repayment"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "description": "Dispute's creation timestamp",
                                        "format": "date-time",
                                        "example": "2020-12-12T13:12:00+05:30"
                                      },
                                      "customerId": {
                                        "type": "string",
                                        "description": "Customer Identifier"
                                      },
                                      "refId": {
                                        "type": "string",
                                        "description": "The generated Reference ID for the request."
                                      },
                                      "billerId": {
                                        "type": "string",
                                        "description": "The biller ID on BBPS",
                                        "example": "MAHI00000NATIC"
                                      },
                                      "complaintStatus": {
                                        "type": "string",
                                        "description": "BBPS Complaint status",
                                        "example": "ASSIGNED",
                                        "enum": [
                                          "INITIALIZED",
                                          "ASSIGNED",
                                          "RE_ASSIGNED",
                                          "ASSIGNED_TO_BOU",
                                          "ASSIGNED_TO_COU",
                                          "ASSIGNED_TO_OU",
                                          "ESCALATED",
                                          "RESOLVED",
                                          "UNRESOLVED",
                                          "REJECTED",
                                          "DEFAULT_RESOLVED",
                                          "REFUNDED",
                                          "PENDING_REFUND"
                                        ]
                                      },
                                      "ticketType": {
                                        "type": "string",
                                        "enum": [
                                          "DISPUTE",
                                          "COMPLAINT"
                                        ]
                                      },
                                      "assigned": {
                                        "type": "string",
                                        "example": "ADIT00000NATRA"
                                      },
                                      "biller": {
                                        "required": [
                                          "categoryName",
                                          "customerParams",
                                          "exactness",
                                          "fetchApiType",
                                          "id",
                                          "name",
                                          "payWithoutFetchAllowed",
                                          "paymentChannels",
                                          "paymentModes",
                                          "supportsPendingStatus"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "upmsEnabled": {
                                            "type": "boolean",
                                            "description": "This field denotes whether a biller supports registering customers for automated bill presentments via UPMS",
                                            "nullable": true,
                                            "example": true,
                                            "x-omitempty": true
                                          },
                                          "customerParams": {
                                            "type": "array",
                                            "items": {
                                              "required": [
                                                "dataType",
                                                "maxLength",
                                                "minLength",
                                                "optional",
                                                "paramName",
                                                "regex",
                                                "values",
                                                "visibility"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "regex": {
                                                  "type": "string",
                                                  "example": "^[a-zA-Z0-9]{7,15}"
                                                },
                                                "values": {
                                                  "type": "string",
                                                  "example": "CHOICE1,CHOICE2,CHOICE3"
                                                },
                                                "visibility": {
                                                  "type": "boolean",
                                                  "example": true
                                                },
                                                "dataType": {
                                                  "type": "string",
                                                  "example": "ALPHANUMERIC"
                                                },
                                                "maxLength": {
                                                  "type": "integer"
                                                },
                                                "minLength": {
                                                  "type": "integer"
                                                },
                                                "optional": {
                                                  "type": "boolean",
                                                  "example": false
                                                },
                                                "paramName": {
                                                  "type": "string",
                                                  "example": "Loan Account Number"
                                                }
                                              }
                                            }
                                          },
                                          "paymentModes": {
                                            "type": "array",
                                            "items": {
                                              "required": [
                                                "maxLimit",
                                                "minLimit",
                                                "paymentMode",
                                                "supportsPendingStatus"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "maxLimit": {
                                                  "type": "integer"
                                                },
                                                "minLimit": {
                                                  "type": "integer"
                                                },
                                                "paymentMode": {
                                                  "type": "string",
                                                  "example": "Internet Banking",
                                                  "enum": [
                                                    "Internet Banking",
                                                    "Debit Card",
                                                    "Credit Card",
                                                    "Prepaid Card",
                                                    "IMPS",
                                                    "Cash",
                                                    "UPI",
                                                    "Wallet",
                                                    "NEFT",
                                                    "AEPS",
                                                    "Account Transfer",
                                                    "Bharat QR",
                                                    "USSD",
                                                    "BHIM Aadhaar Pay"
                                                  ]
                                                },
                                                "supportsPendingStatus": {
                                                  "type": "boolean",
                                                  "example": false
                                                }
                                              }
                                            }
                                          },
                                          "responseType": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "SINGLE",
                                            "enum": [
                                              "SINGLE",
                                              "LIST",
                                              "SELECTIVE"
                                            ],
                                            "x-nullable": true,
                                            "x-omitempty": false
                                          },
                                          "subCategoryName": {
                                            "type": "string",
                                            "example": "DAIRY"
                                          },
                                          "tags": {
                                            "type": "string",
                                            "example": "tags"
                                          },
                                          "valAddFlag": {
                                            "type": "boolean",
                                            "description": "Flag indicating if value added services are enabled for the biller.",
                                            "example": true,
                                            "x-omitempty": true
                                          },
                                          "country": {
                                            "type": "string",
                                            "example": "IND"
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "Identifier of the biller in BBPS.",
                                            "example": "ADIT00000NAT0T"
                                          },
                                          "interchangeFee": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "feeDesc": {
                                                  "type": "string",
                                                  "example": "Customer Convenience Fee"
                                                },
                                                "feeDirection": {
                                                  "type": "string",
                                                  "example": "C2B"
                                                },
                                                "interchangeFeeDetails": {
                                                  "required": [
                                                    "effctvFrom",
                                                    "effctvTo",
                                                    "flatFee",
                                                    "percentFee",
                                                    "tranAmtRangeMax",
                                                    "tranAmtRangeMin"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "tranAmtRangeMax": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    },
                                                    "tranAmtRangeMin": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    },
                                                    "effctvFrom": {
                                                      "type": "string",
                                                      "example": "2024-01-01"
                                                    },
                                                    "effctvTo": {
                                                      "type": "string",
                                                      "example": "2024-12-31"
                                                    },
                                                    "flatFee": {
                                                      "type": "number",
                                                      "format": "decimal",
                                                      "example": 0.0
                                                    },
                                                    "percentFee": {
                                                      "type": "number",
                                                      "format": "decimal",
                                                      "example": 1.0
                                                    }
                                                  }
                                                },
                                                "feeCode": {
                                                  "type": "string",
                                                  "example": "CCF1"
                                                }
                                              }
                                            }
                                          },
                                          "pincode": {
                                            "type": "string",
                                            "example": "pincode"
                                          },
                                          "billerAdditionalInfo": {
                                            "type": "array",
                                            "items": {
                                              "required": [
                                                "dataType",
                                                "optional",
                                                "paramName"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "dataType": {
                                                  "type": "string",
                                                  "example": "ALPHANUMERIC",
                                                  "enum": [
                                                    "ALPHANUMERIC",
                                                    "NUMERIC"
                                                  ]
                                                },
                                                "optional": {
                                                  "type": "boolean",
                                                  "example": false
                                                },
                                                "paramName": {
                                                  "type": "string",
                                                  "example": "Package Duration"
                                                }
                                              }
                                            }
                                          },
                                          "city": {
                                            "type": "string",
                                            "example": "Hyderabad"
                                          },
                                          "coverage": {
                                            "type": "string",
                                            "example": "IND-TEL-Hyderabad"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2021-11-12T13:37:04.572+05:30",
                                            "x-omitempty": false
                                          },
                                          "modifiedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2021-11-12T13:37:04.572+05:30",
                                            "x-omitempty": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the biller.",
                                            "example": "Umbrella Corporation"
                                          },
                                          "selectionType": {
                                            "type": "string",
                                            "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                                            "nullable": true,
                                            "example": "SINGLE",
                                            "enum": [
                                              "SINGLE",
                                              "MULTIPLE",
                                              "ALL"
                                            ],
                                            "x-omitempty": false,
                                            "x-nullable": true
                                          },
                                          "categoryName": {
                                            "type": "string",
                                            "description": "Biller Category",
                                            "example": "loan-repayment"
                                          },
                                          "customerParamsGroups": {
                                            "type": "array",
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "example": "Param 1"
                                              }
                                            }
                                          },
                                          "exactness": {
                                            "type": "string",
                                            "example": "Exact",
                                            "enum": [
                                              "Exact",
                                              "Exact and above",
                                              "Exact and below",
                                              "Any",
                                              "RANGE"
                                            ]
                                          },
                                          "supportCallback": {
                                            "type": "boolean",
                                            "description": "Flag indicating if the biller supports callbacks.",
                                            "example": true,
                                            "x-omitempty": true
                                          },
                                          "billerAdditionalInfoPayment": {
                                            "type": "array",
                                            "items": {
                                              "required": [
                                                "dataType",
                                                "optional",
                                                "paramName"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "dataType": {
                                                  "type": "string",
                                                  "example": "ALPHANUMERIC",
                                                  "enum": [
                                                    "ALPHANUMERIC",
                                                    "NUMERIC"
                                                  ]
                                                },
                                                "optional": {
                                                  "type": "boolean",
                                                  "example": false
                                                },
                                                "paramName": {
                                                  "type": "string",
                                                  "example": "Package Duration"
                                                }
                                              }
                                            }
                                          },
                                          "paymentChannels": {
                                            "type": "array",
                                            "items": {
                                              "required": [
                                                "maxLimit",
                                                "minLimit",
                                                "paymentChannel",
                                                "supportsPendingStatus"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "maxLimit": {
                                                  "type": "integer"
                                                },
                                                "minLimit": {
                                                  "type": "integer"
                                                },
                                                "paymentChannel": {
                                                  "type": "string",
                                                  "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                                                  "example": "INT",
                                                  "enum": [
                                                    "INT",
                                                    "INTB",
                                                    "MOB",
                                                    "BNKBRNCH",
                                                    "BSC",
                                                    "AGT",
                                                    "KIOSK",
                                                    "ATM",
                                                    "MOBB",
                                                    "POS",
                                                    "MPOS"
                                                  ]
                                                },
                                                "supportsPendingStatus": {
                                                  "type": "boolean",
                                                  "example": false
                                                }
                                              }
                                            }
                                          },
                                          "planRequirement": {
                                            "type": "string",
                                            "description": "Indicates if plan selection is required for bill payments",
                                            "example": "MANDATORY",
                                            "enum": [
                                              "MANDATORY",
                                              "OPTIONAL",
                                              "CONDITIONAL"
                                            ],
                                            "x-omitempty": true
                                          },
                                          "supportsPendingStatus": {
                                            "type": "boolean",
                                            "description": "Flag indicating whether pending status is applicable for the biller or not",
                                            "example": false
                                          },
                                          "pseudoBiller": {
                                            "type": "boolean",
                                            "description": "Flag indicating if the biller is a pseudo biller.",
                                            "example": false,
                                            "x-omitempty": true
                                          },
                                          "valAddCustParams": {
                                            "type": "array",
                                            "description": "Customer parameters for value added services.",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "requestType": {
                                                  "type": "string",
                                                  "description": "Type of value added service request.",
                                                  "example": "GetCustomerId",
                                                  "enum": [
                                                    "GetCustomerId",
                                                    "GenerateOTP",
                                                    "ValidateOTP",
                                                    "GetBankMarkup",
                                                    "FetchBestPrice"
                                                  ]
                                                },
                                                "customerParams": {
                                                  "type": "array",
                                                  "items": {
                                                    "required": [
                                                      "dataType",
                                                      "maxLength",
                                                      "minLength",
                                                      "optional",
                                                      "paramName",
                                                      "regex",
                                                      "values",
                                                      "visibility"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                      "regex": {
                                                        "type": "string",
                                                        "example": "^[a-zA-Z0-9]{7,15}"
                                                      },
                                                      "values": {
                                                        "type": "string",
                                                        "example": "CHOICE1,CHOICE2,CHOICE3"
                                                      },
                                                      "visibility": {
                                                        "type": "boolean",
                                                        "example": true
                                                      },
                                                      "dataType": {
                                                        "type": "string",
                                                        "example": "ALPHANUMERIC"
                                                      },
                                                      "maxLength": {
                                                        "type": "integer"
                                                      },
                                                      "minLength": {
                                                        "type": "integer"
                                                      },
                                                      "optional": {
                                                        "type": "boolean",
                                                        "example": false
                                                      },
                                                      "paramName": {
                                                        "type": "string",
                                                        "example": "Loan Account Number"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "x-omitempty": true
                                          },
                                          "bbpsUpdateTimestamp": {
                                            "type": "string",
                                            "description": "Last updated date-time of the Biller accurate to the nearest day.",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2021-11-12T13:37:04.572+05:30",
                                            "x-omitempty": true
                                          },
                                          "fetchApiType": {
                                            "type": "string",
                                            "enum": [
                                              "BILL_FETCH",
                                              "BILL_VALIDATE",
                                              "BILL_DIRECT",
                                              "BILL_MANDATE"
                                            ]
                                          },
                                          "mandateRequirement": {
                                            "type": "string",
                                            "description": "Mandate requirement for the biller.",
                                            "example": "MANDATORY",
                                            "x-omitempty": true
                                          },
                                          "upmsBillerParams": {
                                            "type": "array",
                                            "description": "The list of parameters that a biller requires to be passed in the `mandate.billerParams` while registering a new customer",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "required": [
                                                    "dataType",
                                                    "maxLength",
                                                    "minLength",
                                                    "optional",
                                                    "paramName",
                                                    "regex",
                                                    "values",
                                                    "visibility"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "regex": {
                                                      "type": "string",
                                                      "example": "^[a-zA-Z0-9]{7,15}"
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "example": "CHOICE1,CHOICE2,CHOICE3"
                                                    },
                                                    "visibility": {
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "dataType": {
                                                      "type": "string",
                                                      "example": "ALPHANUMERIC"
                                                    },
                                                    "maxLength": {
                                                      "type": "integer"
                                                    },
                                                    "minLength": {
                                                      "type": "integer"
                                                    },
                                                    "optional": {
                                                      "type": "boolean",
                                                      "example": false
                                                    },
                                                    "paramName": {
                                                      "type": "string",
                                                      "example": "Loan Account Number"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object"
                                                }
                                              ]
                                            },
                                            "x-omitempty": true
                                          },
                                          "state": {
                                            "type": "string",
                                            "example": "TEL"
                                          },
                                          "enforcesSameDayFetchPay": {
                                            "type": "boolean",
                                            "example": true,
                                            "x-omitempty": false
                                          },
                                          "logo": {
                                            "type": "string",
                                            "example": "logo"
                                          },
                                          "payWithoutFetchAllowed": {
                                            "type": "boolean",
                                            "description": "Flag indicating if the Biller accepts adhoc payment",
                                            "example": true
                                          }
                                        },
                                        "x-go-name": "CouBillerDetails"
                                      },
                                      "lastModifiedAt": {
                                        "type": "string",
                                        "description": "Dispute's last modified timestamp",
                                        "format": "date-time",
                                        "example": "2020-12-12T13:12:00+05:30"
                                      },
                                      "responseCode": {
                                        "type": "string",
                                        "example": "ADIT00000NATRA"
                                      },
                                      "ticketTAT": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                      },
                                      "disposition": {
                                        "type": "string",
                                        "enum": [
                                          "D11",
                                          "D12",
                                          "D13",
                                          "D21",
                                          "D22",
                                          "D23",
                                          "D31",
                                          "D32"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "mobile": {
                                        "maxLength": 22,
                                        "minLength": 6,
                                        "pattern": "^\\d{6,22}$",
                                        "type": "string",
                                        "description": "Mobile number with 6 to 22 digits are valid."
                                      },
                                      "paymentRefID": {
                                        "maxLength": 35,
                                        "minLength": 6,
                                        "type": "string",
                                        "description": "Unique identifier provided by Partner for the payment request.",
                                        "example": "BD019181220291"
                                      },
                                      "transaction": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "string",
                                                "example": "Success",
                                                "enum": [
                                                  "Processing",
                                                  "Success",
                                                  "Error",
                                                  "Credit_Adjustment"
                                                ]
                                              },
                                              "biller": {
                                                "required": [
                                                  "categoryName",
                                                  "customerParams",
                                                  "exactness",
                                                  "fetchApiType",
                                                  "id",
                                                  "name",
                                                  "payWithoutFetchAllowed",
                                                  "paymentChannels",
                                                  "paymentModes",
                                                  "supportsPendingStatus"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                  "upmsEnabled": {
                                                    "type": "boolean",
                                                    "description": "This field denotes whether a biller supports registering customers for automated bill presentments via UPMS",
                                                    "nullable": true,
                                                    "example": true,
                                                    "x-omitempty": true
                                                  },
                                                  "customerParams": {
                                                    "type": "array",
                                                    "items": {
                                                      "required": [
                                                        "dataType",
                                                        "maxLength",
                                                        "minLength",
                                                        "optional",
                                                        "paramName",
                                                        "regex",
                                                        "values",
                                                        "visibility"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "regex": {
                                                          "type": "string",
                                                          "example": "^[a-zA-Z0-9]{7,15}"
                                                        },
                                                        "values": {
                                                          "type": "string",
                                                          "example": "CHOICE1,CHOICE2,CHOICE3"
                                                        },
                                                        "visibility": {
                                                          "type": "boolean",
                                                          "example": true
                                                        },
                                                        "dataType": {
                                                          "type": "string",
                                                          "example": "ALPHANUMERIC"
                                                        },
                                                        "maxLength": {
                                                          "type": "integer"
                                                        },
                                                        "minLength": {
                                                          "type": "integer"
                                                        },
                                                        "optional": {
                                                          "type": "boolean",
                                                          "example": false
                                                        },
                                                        "paramName": {
                                                          "type": "string",
                                                          "example": "Loan Account Number"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "paymentModes": {
                                                    "type": "array",
                                                    "items": {
                                                      "required": [
                                                        "maxLimit",
                                                        "minLimit",
                                                        "paymentMode",
                                                        "supportsPendingStatus"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "maxLimit": {
                                                          "type": "integer"
                                                        },
                                                        "minLimit": {
                                                          "type": "integer"
                                                        },
                                                        "paymentMode": {
                                                          "type": "string",
                                                          "example": "Internet Banking",
                                                          "enum": [
                                                            "Internet Banking",
                                                            "Debit Card",
                                                            "Credit Card",
                                                            "Prepaid Card",
                                                            "IMPS",
                                                            "Cash",
                                                            "UPI",
                                                            "Wallet",
                                                            "NEFT",
                                                            "AEPS",
                                                            "Account Transfer",
                                                            "Bharat QR",
                                                            "USSD",
                                                            "BHIM Aadhaar Pay"
                                                          ]
                                                        },
                                                        "supportsPendingStatus": {
                                                          "type": "boolean",
                                                          "example": false
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "responseType": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "SINGLE",
                                                    "enum": [
                                                      "SINGLE",
                                                      "LIST",
                                                      "SELECTIVE"
                                                    ],
                                                    "x-nullable": true,
                                                    "x-omitempty": false
                                                  },
                                                  "subCategoryName": {
                                                    "type": "string",
                                                    "example": "DAIRY"
                                                  },
                                                  "tags": {
                                                    "type": "string",
                                                    "example": "tags"
                                                  },
                                                  "valAddFlag": {
                                                    "type": "boolean",
                                                    "description": "Flag indicating if value added services are enabled for the biller.",
                                                    "example": true,
                                                    "x-omitempty": true
                                                  },
                                                  "country": {
                                                    "type": "string",
                                                    "example": "IND"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "Identifier of the biller in BBPS.",
                                                    "example": "ADIT00000NAT0T"
                                                  },
                                                  "interchangeFee": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "feeDesc": {
                                                          "type": "string",
                                                          "example": "Customer Convenience Fee"
                                                        },
                                                        "feeDirection": {
                                                          "type": "string",
                                                          "example": "C2B"
                                                        },
                                                        "interchangeFeeDetails": {
                                                          "required": [
                                                            "effctvFrom",
                                                            "effctvTo",
                                                            "flatFee",
                                                            "percentFee",
                                                            "tranAmtRangeMax",
                                                            "tranAmtRangeMin"
                                                          ],
                                                          "type": "object",
                                                          "properties": {
                                                            "tranAmtRangeMax": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            },
                                                            "tranAmtRangeMin": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            },
                                                            "effctvFrom": {
                                                              "type": "string",
                                                              "example": "2024-01-01"
                                                            },
                                                            "effctvTo": {
                                                              "type": "string",
                                                              "example": "2024-12-31"
                                                            },
                                                            "flatFee": {
                                                              "type": "number",
                                                              "format": "decimal",
                                                              "example": 0.0
                                                            },
                                                            "percentFee": {
                                                              "type": "number",
                                                              "format": "decimal",
                                                              "example": 1.0
                                                            }
                                                          }
                                                        },
                                                        "feeCode": {
                                                          "type": "string",
                                                          "example": "CCF1"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "pincode": {
                                                    "type": "string",
                                                    "example": "pincode"
                                                  },
                                                  "billerAdditionalInfo": {
                                                    "type": "array",
                                                    "items": {
                                                      "required": [
                                                        "dataType",
                                                        "optional",
                                                        "paramName"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "dataType": {
                                                          "type": "string",
                                                          "example": "ALPHANUMERIC",
                                                          "enum": [
                                                            "ALPHANUMERIC",
                                                            "NUMERIC"
                                                          ]
                                                        },
                                                        "optional": {
                                                          "type": "boolean",
                                                          "example": false
                                                        },
                                                        "paramName": {
                                                          "type": "string",
                                                          "example": "Package Duration"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "city": {
                                                    "type": "string",
                                                    "example": "Hyderabad"
                                                  },
                                                  "coverage": {
                                                    "type": "string",
                                                    "example": "IND-TEL-Hyderabad"
                                                  },
                                                  "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true,
                                                    "example": "2021-11-12T13:37:04.572+05:30",
                                                    "x-omitempty": false
                                                  },
                                                  "modifiedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true,
                                                    "example": "2021-11-12T13:37:04.572+05:30",
                                                    "x-omitempty": false
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the biller.",
                                                    "example": "Umbrella Corporation"
                                                  },
                                                  "selectionType": {
                                                    "type": "string",
                                                    "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                                                    "nullable": true,
                                                    "example": "SINGLE",
                                                    "enum": [
                                                      "SINGLE",
                                                      "MULTIPLE",
                                                      "ALL"
                                                    ],
                                                    "x-omitempty": false,
                                                    "x-nullable": true
                                                  },
                                                  "categoryName": {
                                                    "type": "string",
                                                    "description": "Biller Category",
                                                    "example": "loan-repayment"
                                                  },
                                                  "customerParamsGroups": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string",
                                                        "example": "Param 1"
                                                      }
                                                    }
                                                  },
                                                  "exactness": {
                                                    "type": "string",
                                                    "example": "Exact",
                                                    "enum": [
                                                      "Exact",
                                                      "Exact and above",
                                                      "Exact and below",
                                                      "Any",
                                                      "RANGE"
                                                    ]
                                                  },
                                                  "supportCallback": {
                                                    "type": "boolean",
                                                    "description": "Flag indicating if the biller supports callbacks.",
                                                    "example": true,
                                                    "x-omitempty": true
                                                  },
                                                  "billerAdditionalInfoPayment": {
                                                    "type": "array",
                                                    "items": {
                                                      "required": [
                                                        "dataType",
                                                        "optional",
                                                        "paramName"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "dataType": {
                                                          "type": "string",
                                                          "example": "ALPHANUMERIC",
                                                          "enum": [
                                                            "ALPHANUMERIC",
                                                            "NUMERIC"
                                                          ]
                                                        },
                                                        "optional": {
                                                          "type": "boolean",
                                                          "example": false
                                                        },
                                                        "paramName": {
                                                          "type": "string",
                                                          "example": "Package Duration"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "paymentChannels": {
                                                    "type": "array",
                                                    "items": {
                                                      "required": [
                                                        "maxLimit",
                                                        "minLimit",
                                                        "paymentChannel",
                                                        "supportsPendingStatus"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "maxLimit": {
                                                          "type": "integer"
                                                        },
                                                        "minLimit": {
                                                          "type": "integer"
                                                        },
                                                        "paymentChannel": {
                                                          "type": "string",
                                                          "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                                                          "example": "INT",
                                                          "enum": [
                                                            "INT",
                                                            "INTB",
                                                            "MOB",
                                                            "BNKBRNCH",
                                                            "BSC",
                                                            "AGT",
                                                            "KIOSK",
                                                            "ATM",
                                                            "MOBB",
                                                            "POS",
                                                            "MPOS"
                                                          ]
                                                        },
                                                        "supportsPendingStatus": {
                                                          "type": "boolean",
                                                          "example": false
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "planRequirement": {
                                                    "type": "string",
                                                    "description": "Indicates if plan selection is required for bill payments",
                                                    "example": "MANDATORY",
                                                    "enum": [
                                                      "MANDATORY",
                                                      "OPTIONAL",
                                                      "CONDITIONAL"
                                                    ],
                                                    "x-omitempty": true
                                                  },
                                                  "supportsPendingStatus": {
                                                    "type": "boolean",
                                                    "description": "Flag indicating whether pending status is applicable for the biller or not",
                                                    "example": false
                                                  },
                                                  "pseudoBiller": {
                                                    "type": "boolean",
                                                    "description": "Flag indicating if the biller is a pseudo biller.",
                                                    "example": false,
                                                    "x-omitempty": true
                                                  },
                                                  "valAddCustParams": {
                                                    "type": "array",
                                                    "description": "Customer parameters for value added services.",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "requestType": {
                                                          "type": "string",
                                                          "description": "Type of value added service request.",
                                                          "example": "GetCustomerId",
                                                          "enum": [
                                                            "GetCustomerId",
                                                            "GenerateOTP",
                                                            "ValidateOTP",
                                                            "GetBankMarkup",
                                                            "FetchBestPrice"
                                                          ]
                                                        },
                                                        "customerParams": {
                                                          "type": "array",
                                                          "items": {
                                                            "required": [
                                                              "dataType",
                                                              "maxLength",
                                                              "minLength",
                                                              "optional",
                                                              "paramName",
                                                              "regex",
                                                              "values",
                                                              "visibility"
                                                            ],
                                                            "type": "object",
                                                            "properties": {
                                                              "regex": {
                                                                "type": "string",
                                                                "example": "^[a-zA-Z0-9]{7,15}"
                                                              },
                                                              "values": {
                                                                "type": "string",
                                                                "example": "CHOICE1,CHOICE2,CHOICE3"
                                                              },
                                                              "visibility": {
                                                                "type": "boolean",
                                                                "example": true
                                                              },
                                                              "dataType": {
                                                                "type": "string",
                                                                "example": "ALPHANUMERIC"
                                                              },
                                                              "maxLength": {
                                                                "type": "integer"
                                                              },
                                                              "minLength": {
                                                                "type": "integer"
                                                              },
                                                              "optional": {
                                                                "type": "boolean",
                                                                "example": false
                                                              },
                                                              "paramName": {
                                                                "type": "string",
                                                                "example": "Loan Account Number"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "x-omitempty": true
                                                  },
                                                  "bbpsUpdateTimestamp": {
                                                    "type": "string",
                                                    "description": "Last updated date-time of the Biller accurate to the nearest day.",
                                                    "format": "date-time",
                                                    "nullable": true,
                                                    "example": "2021-11-12T13:37:04.572+05:30",
                                                    "x-omitempty": true
                                                  },
                                                  "fetchApiType": {
                                                    "type": "string",
                                                    "enum": [
                                                      "BILL_FETCH",
                                                      "BILL_VALIDATE",
                                                      "BILL_DIRECT",
                                                      "BILL_MANDATE"
                                                    ]
                                                  },
                                                  "mandateRequirement": {
                                                    "type": "string",
                                                    "description": "Mandate requirement for the biller.",
                                                    "example": "MANDATORY",
                                                    "x-omitempty": true
                                                  },
                                                  "upmsBillerParams": {
                                                    "type": "array",
                                                    "description": "The list of parameters that a biller requires to be passed in the `mandate.billerParams` while registering a new customer",
                                                    "items": {
                                                      "allOf": [
                                                        {
                                                          "required": [
                                                            "dataType",
                                                            "maxLength",
                                                            "minLength",
                                                            "optional",
                                                            "paramName",
                                                            "regex",
                                                            "values",
                                                            "visibility"
                                                          ],
                                                          "type": "object",
                                                          "properties": {
                                                            "regex": {
                                                              "type": "string",
                                                              "example": "^[a-zA-Z0-9]{7,15}"
                                                            },
                                                            "values": {
                                                              "type": "string",
                                                              "example": "CHOICE1,CHOICE2,CHOICE3"
                                                            },
                                                            "visibility": {
                                                              "type": "boolean",
                                                              "example": true
                                                            },
                                                            "dataType": {
                                                              "type": "string",
                                                              "example": "ALPHANUMERIC"
                                                            },
                                                            "maxLength": {
                                                              "type": "integer"
                                                            },
                                                            "minLength": {
                                                              "type": "integer"
                                                            },
                                                            "optional": {
                                                              "type": "boolean",
                                                              "example": false
                                                            },
                                                            "paramName": {
                                                              "type": "string",
                                                              "example": "Loan Account Number"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object"
                                                        }
                                                      ]
                                                    },
                                                    "x-omitempty": true
                                                  },
                                                  "state": {
                                                    "type": "string",
                                                    "example": "TEL"
                                                  },
                                                  "enforcesSameDayFetchPay": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "x-omitempty": false
                                                  },
                                                  "logo": {
                                                    "type": "string",
                                                    "example": "logo"
                                                  },
                                                  "payWithoutFetchAllowed": {
                                                    "type": "boolean",
                                                    "description": "Flag indicating if the Biller accepts adhoc payment",
                                                    "example": true
                                                  }
                                                },
                                                "x-go-name": "CouBillerDetails"
                                              },
                                              "customerParams": {
                                                "type": "array",
                                                "description": "The bill params for fetching the bill",
                                                "items": {
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "string",
                                                      "description": "The value of the customer parameter",
                                                      "example": "1895159"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The display name of the parameter. This has to match what is sent in fields.",
                                                      "example": "Loan Number"
                                                    }
                                                  }
                                                }
                                              },
                                              "etherealTransaction": {
                                                "required": [
                                                  "amount",
                                                  "billRefId",
                                                  "refId",
                                                  "status",
                                                  "transactionId"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                  "transactionId": {
                                                    "type": "string",
                                                    "example": "Q910192192192192"
                                                  },
                                                  "amount": {
                                                    "type": "string",
                                                    "example": "100.00"
                                                  },
                                                  "billRefId": {
                                                    "type": "string",
                                                    "description": "The BBPS Ref ID",
                                                    "example": "C3SFG0O6N88R6UI7EQ"
                                                  },
                                                  "refId": {
                                                    "type": "string",
                                                    "example": "COUWL910192192192192"
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "INIT",
                                                      "SUCCESS",
                                                      "FAILURE",
                                                      "PENDING",
                                                      "UNKNOWN"
                                                    ]
                                                  }
                                                }
                                              },
                                              "timestamp": {
                                                "type": "string",
                                                "description": "Timestamp provided by partner while making payment request.",
                                                "format": "date-time",
                                                "example": "2020-12-12T13:12:00+05:30"
                                              },
                                              "transactionId": {
                                                "type": "string",
                                                "description": "Setu BillPay Transaction ID.",
                                                "example": "AS01910192192192192"
                                              },
                                              "amount": {
                                                "type": "integer"
                                              },
                                              "billerId": {
                                                "type": "string",
                                                "description": "The biller ID on BBPS",
                                                "example": "MAHI00000NATIC"
                                              },
                                              "custConvFee": {
                                                "type": "integer",
                                                "description": "Customer convenience fee in paise"
                                              },
                                              "customerId": {
                                                "type": "string",
                                                "description": "Customer Identifier"
                                              },
                                              "refId": {
                                                "type": "string",
                                                "description": "The generated Reference ID for the request."
                                              },
                                              "refundStatus": {
                                                "type": "string",
                                                "enum": [
                                                  "Required",
                                                  "Requested",
                                                  "Processed"
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "paymentRefId": {
                                                "maxLength": 35,
                                                "minLength": 6,
                                                "type": "string",
                                                "description": "Unique identifier provided by Partner for the payment request.",
                                                "example": "BD019181220291"
                                              },
                                              "mobile": {
                                                "maxLength": 22,
                                                "minLength": 6,
                                                "pattern": "^\\d{6,22}$",
                                                "type": "string",
                                                "description": "Mobile number with 6 to 22 digits are valid."
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "nextPage": {
                              "type": "string",
                              "example": "/api/bbps/disputes?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/bbps/billers": {
      "get": {
        "tags": [
          "List"
        ],
        "description": "Returns the list of billers.",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Biller category. The query parameter follows a multi instance format. Usage: categoryName=category1&categoryName=category2",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "schema": {
              "maximum": 250.0,
              "minimum": 1.0,
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pincode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coverage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentChannel",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INT",
                  "INTB",
                  "MOB",
                  "BNKBRNCH",
                  "BSC",
                  "AGT",
                  "KIOSK",
                  "ATM",
                  "MOBB",
                  "POS",
                  "MPOS"
                ]
              }
            }
          },
          {
            "name": "paymentMode",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Internet Banking",
                  "Debit Card",
                  "Credit Card",
                  "Prepaid Card",
                  "IMPS",
                  "Cash",
                  "UPI",
                  "Wallet",
                  "NEFT",
                  "AEPS",
                  "Account Transfer",
                  "Bharat QR",
                  "USSD"
                ]
              }
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Used to fetch billers updated since the given date-time in IST",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pseudoBiller",
            "in": "query",
            "description": "Filter billers based on whether they are pseudo billers.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "upmsEnabled",
            "in": "query",
            "description": "This field notifies whether a biller supports registering customers for automated bill presentments via UPMS. UPMS Create Registration requests will only be accepted for billers with `upmsEnabled` set to `true`.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "List of billers",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "billers"
                      ],
                      "type": "object",
                      "properties": {
                        "nextPage": {
                          "type": "string",
                          "example": "/api/bbps/billers?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "billers": {
                          "type": "array",
                          "items": {
                            "required": [
                              "categoryName",
                              "customerParams",
                              "exactness",
                              "fetchApiType",
                              "id",
                              "name",
                              "payWithoutFetchAllowed",
                              "paymentChannels",
                              "paymentModes",
                              "supportsPendingStatus"
                            ],
                            "type": "object",
                            "properties": {
                              "upmsEnabled": {
                                "type": "boolean",
                                "description": "This field denotes whether a biller supports registering customers for automated bill presentments via UPMS",
                                "nullable": true,
                                "example": true,
                                "x-omitempty": true
                              },
                              "customerParams": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "dataType",
                                    "maxLength",
                                    "minLength",
                                    "optional",
                                    "paramName",
                                    "regex",
                                    "values",
                                    "visibility"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "type": "string",
                                      "example": "^[a-zA-Z0-9]{7,15}"
                                    },
                                    "values": {
                                      "type": "string",
                                      "example": "CHOICE1,CHOICE2,CHOICE3"
                                    },
                                    "visibility": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "dataType": {
                                      "type": "string",
                                      "example": "ALPHANUMERIC"
                                    },
                                    "maxLength": {
                                      "type": "integer"
                                    },
                                    "minLength": {
                                      "type": "integer"
                                    },
                                    "optional": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "paramName": {
                                      "type": "string",
                                      "example": "Loan Account Number"
                                    }
                                  }
                                }
                              },
                              "paymentModes": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "maxLimit",
                                    "minLimit",
                                    "paymentMode",
                                    "supportsPendingStatus"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "maxLimit": {
                                      "type": "integer"
                                    },
                                    "minLimit": {
                                      "type": "integer"
                                    },
                                    "paymentMode": {
                                      "type": "string",
                                      "example": "Internet Banking",
                                      "enum": [
                                        "Internet Banking",
                                        "Debit Card",
                                        "Credit Card",
                                        "Prepaid Card",
                                        "IMPS",
                                        "Cash",
                                        "UPI",
                                        "Wallet",
                                        "NEFT",
                                        "AEPS",
                                        "Account Transfer",
                                        "Bharat QR",
                                        "USSD",
                                        "BHIM Aadhaar Pay"
                                      ]
                                    },
                                    "supportsPendingStatus": {
                                      "type": "boolean",
                                      "example": false
                                    }
                                  }
                                }
                              },
                              "responseType": {
                                "type": "string",
                                "nullable": true,
                                "example": "SINGLE",
                                "enum": [
                                  "SINGLE",
                                  "LIST",
                                  "SELECTIVE"
                                ],
                                "x-nullable": true,
                                "x-omitempty": false
                              },
                              "subCategoryName": {
                                "type": "string",
                                "example": "DAIRY"
                              },
                              "tags": {
                                "type": "string",
                                "example": "tags"
                              },
                              "valAddFlag": {
                                "type": "boolean",
                                "description": "Flag indicating if value added services are enabled for the biller.",
                                "example": true,
                                "x-omitempty": true
                              },
                              "country": {
                                "type": "string",
                                "example": "IND"
                              },
                              "id": {
                                "type": "string",
                                "description": "Identifier of the biller in BBPS.",
                                "example": "ADIT00000NAT0T"
                              },
                              "interchangeFee": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "feeDesc": {
                                      "type": "string",
                                      "example": "Customer Convenience Fee"
                                    },
                                    "feeDirection": {
                                      "type": "string",
                                      "example": "C2B"
                                    },
                                    "interchangeFeeDetails": {
                                      "required": [
                                        "effctvFrom",
                                        "effctvTo",
                                        "flatFee",
                                        "percentFee",
                                        "tranAmtRangeMax",
                                        "tranAmtRangeMin"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "tranAmtRangeMax": {
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "tranAmtRangeMin": {
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "effctvFrom": {
                                          "type": "string",
                                          "example": "2024-01-01"
                                        },
                                        "effctvTo": {
                                          "type": "string",
                                          "example": "2024-12-31"
                                        },
                                        "flatFee": {
                                          "type": "number",
                                          "format": "decimal",
                                          "example": 0.0
                                        },
                                        "percentFee": {
                                          "type": "number",
                                          "format": "decimal",
                                          "example": 1.0
                                        }
                                      }
                                    },
                                    "feeCode": {
                                      "type": "string",
                                      "example": "CCF1"
                                    }
                                  }
                                }
                              },
                              "pincode": {
                                "type": "string",
                                "example": "pincode"
                              },
                              "billerAdditionalInfo": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "dataType",
                                    "optional",
                                    "paramName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "dataType": {
                                      "type": "string",
                                      "example": "ALPHANUMERIC",
                                      "enum": [
                                        "ALPHANUMERIC",
                                        "NUMERIC"
                                      ]
                                    },
                                    "optional": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "paramName": {
                                      "type": "string",
                                      "example": "Package Duration"
                                    }
                                  }
                                }
                              },
                              "city": {
                                "type": "string",
                                "example": "Hyderabad"
                              },
                              "coverage": {
                                "type": "string",
                                "example": "IND-TEL-Hyderabad"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2021-11-12T13:37:04.572+05:30",
                                "x-omitempty": false
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2021-11-12T13:37:04.572+05:30",
                                "x-omitempty": false
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the biller.",
                                "example": "Umbrella Corporation"
                              },
                              "selectionType": {
                                "type": "string",
                                "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                                "nullable": true,
                                "example": "SINGLE",
                                "enum": [
                                  "SINGLE",
                                  "MULTIPLE",
                                  "ALL"
                                ],
                                "x-omitempty": false,
                                "x-nullable": true
                              },
                              "categoryName": {
                                "type": "string",
                                "description": "Biller Category",
                                "example": "loan-repayment"
                              },
                              "customerParamsGroups": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "Param 1"
                                  }
                                }
                              },
                              "exactness": {
                                "type": "string",
                                "example": "Exact",
                                "enum": [
                                  "Exact",
                                  "Exact and above",
                                  "Exact and below",
                                  "Any",
                                  "RANGE"
                                ]
                              },
                              "supportCallback": {
                                "type": "boolean",
                                "description": "Flag indicating if the biller supports callbacks.",
                                "example": true,
                                "x-omitempty": true
                              },
                              "billerAdditionalInfoPayment": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "dataType",
                                    "optional",
                                    "paramName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "dataType": {
                                      "type": "string",
                                      "example": "ALPHANUMERIC",
                                      "enum": [
                                        "ALPHANUMERIC",
                                        "NUMERIC"
                                      ]
                                    },
                                    "optional": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "paramName": {
                                      "type": "string",
                                      "example": "Package Duration"
                                    }
                                  }
                                }
                              },
                              "paymentChannels": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "maxLimit",
                                    "minLimit",
                                    "paymentChannel",
                                    "supportsPendingStatus"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "maxLimit": {
                                      "type": "integer"
                                    },
                                    "minLimit": {
                                      "type": "integer"
                                    },
                                    "paymentChannel": {
                                      "type": "string",
                                      "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                                      "example": "INT",
                                      "enum": [
                                        "INT",
                                        "INTB",
                                        "MOB",
                                        "BNKBRNCH",
                                        "BSC",
                                        "AGT",
                                        "KIOSK",
                                        "ATM",
                                        "MOBB",
                                        "POS",
                                        "MPOS"
                                      ]
                                    },
                                    "supportsPendingStatus": {
                                      "type": "boolean",
                                      "example": false
                                    }
                                  }
                                }
                              },
                              "planRequirement": {
                                "type": "string",
                                "description": "Indicates if plan selection is required for bill payments",
                                "example": "MANDATORY",
                                "enum": [
                                  "MANDATORY",
                                  "OPTIONAL",
                                  "CONDITIONAL"
                                ],
                                "x-omitempty": true
                              },
                              "supportsPendingStatus": {
                                "type": "boolean",
                                "description": "Flag indicating whether pending status is applicable for the biller or not",
                                "example": false
                              },
                              "pseudoBiller": {
                                "type": "boolean",
                                "description": "Flag indicating if the biller is a pseudo biller.",
                                "example": false,
                                "x-omitempty": true
                              },
                              "valAddCustParams": {
                                "type": "array",
                                "description": "Customer parameters for value added services.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "requestType": {
                                      "type": "string",
                                      "description": "Type of value added service request.",
                                      "example": "GetCustomerId",
                                      "enum": [
                                        "GetCustomerId",
                                        "GenerateOTP",
                                        "ValidateOTP",
                                        "GetBankMarkup",
                                        "FetchBestPrice"
                                      ]
                                    },
                                    "customerParams": {
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "dataType",
                                          "maxLength",
                                          "minLength",
                                          "optional",
                                          "paramName",
                                          "regex",
                                          "values",
                                          "visibility"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "regex": {
                                            "type": "string",
                                            "example": "^[a-zA-Z0-9]{7,15}"
                                          },
                                          "values": {
                                            "type": "string",
                                            "example": "CHOICE1,CHOICE2,CHOICE3"
                                          },
                                          "visibility": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "dataType": {
                                            "type": "string",
                                            "example": "ALPHANUMERIC"
                                          },
                                          "maxLength": {
                                            "type": "integer"
                                          },
                                          "minLength": {
                                            "type": "integer"
                                          },
                                          "optional": {
                                            "type": "boolean",
                                            "example": false
                                          },
                                          "paramName": {
                                            "type": "string",
                                            "example": "Loan Account Number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-omitempty": true
                              },
                              "bbpsUpdateTimestamp": {
                                "type": "string",
                                "description": "Last updated date-time of the Biller accurate to the nearest day.",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2021-11-12T13:37:04.572+05:30",
                                "x-omitempty": true
                              },
                              "fetchApiType": {
                                "type": "string",
                                "enum": [
                                  "BILL_FETCH",
                                  "BILL_VALIDATE",
                                  "BILL_DIRECT",
                                  "BILL_MANDATE"
                                ]
                              },
                              "mandateRequirement": {
                                "type": "string",
                                "description": "Mandate requirement for the biller.",
                                "example": "MANDATORY",
                                "x-omitempty": true
                              },
                              "upmsBillerParams": {
                                "type": "array",
                                "description": "The list of parameters that a biller requires to be passed in the `mandate.billerParams` while registering a new customer",
                                "items": {
                                  "allOf": [
                                    {
                                      "required": [
                                        "dataType",
                                        "maxLength",
                                        "minLength",
                                        "optional",
                                        "paramName",
                                        "regex",
                                        "values",
                                        "visibility"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "regex": {
                                          "type": "string",
                                          "example": "^[a-zA-Z0-9]{7,15}"
                                        },
                                        "values": {
                                          "type": "string",
                                          "example": "CHOICE1,CHOICE2,CHOICE3"
                                        },
                                        "visibility": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "dataType": {
                                          "type": "string",
                                          "example": "ALPHANUMERIC"
                                        },
                                        "maxLength": {
                                          "type": "integer"
                                        },
                                        "minLength": {
                                          "type": "integer"
                                        },
                                        "optional": {
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "paramName": {
                                          "type": "string",
                                          "example": "Loan Account Number"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object"
                                    }
                                  ]
                                },
                                "x-omitempty": true
                              },
                              "state": {
                                "type": "string",
                                "example": "TEL"
                              },
                              "enforcesSameDayFetchPay": {
                                "type": "boolean",
                                "example": true,
                                "x-omitempty": false
                              },
                              "logo": {
                                "type": "string",
                                "example": "logo"
                              },
                              "payWithoutFetchAllowed": {
                                "type": "boolean",
                                "description": "Flag indicating if the Biller accepts adhoc payment",
                                "example": true
                              }
                            },
                            "x-go-name": "CouBillerDetails"
                          }
                        }
                      }
                    },
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/upms/registrations/{upmsRegistrationRefID}": {
      "get": {
        "tags": [
          "UPMS"
        ],
        "description": "View registration",
        "operationId": "ViewUPMSRegistration",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "upmsRegistrationRefID",
            "in": "path",
            "description": "The reference ID of the UPMS registration you want to view.",
            "required": true,
            "schema": {
              "maxLength": 35,
              "minLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "biller",
                        "createdAt",
                        "customer",
                        "mandate",
                        "refId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "mandate": {
                          "type": "object",
                          "properties": {
                            "billPeriod": {
                              "type": "string",
                              "description": "Mandatory for Validation & Pay billers. Allowed values: DAILY, WEEKLY, BIMONTHLY, MONTHLY, QUARTERLY, HALFYEARLY, YEARLY\nOptional for Fetch & Pay billers. Allowed values: ASPRESENTED\n",
                              "nullable": true,
                              "example": "MONTHLY",
                              "x-omitempty": true
                            },
                            "billerParams": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Captures the name of the biller parameter to be sent as part of UPMS registration.",
                                    "example": "Low Balance Threshold"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The value of the biller parameter to be sent as part of UPMS registration.",
                                    "example": "500"
                                  }
                                },
                                "description": "Optional. Only some billers require this. Details of the biller parameter to be sent as part of UPMS registration."
                              },
                              "x-omitempty": true
                            },
                            "debitInfo": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "integer",
                                  "description": "The fixed or maximum amount set for auto-debit (value must be provided in paise).",
                                  "example": 10000
                                },
                                "currency": {
                                  "type": "integer",
                                  "description": "The currency code. Use `356` for `INR`.",
                                  "example": 356
                                },
                                "debitDate": {
                                  "type": "string",
                                  "description": "The preferred date format (`DD-MMM`) for attempting the auto-debit each cycle.",
                                  "example": "10-Feb"
                                },
                                "paymentMode": {
                                  "type": "string",
                                  "description": "The payment method intended for auto-debit, allowed values:\n - Internet Banking\n - Debit Card\n - Credit Card\n - Prepaid Card\n - IMPS\n - UPI\n - Wallet\n - NEFT\n - AEPS\n - Account Transfer\n - Bharat QR",
                                  "example": "UPI"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Specifies the debit rule. Can be `FIXED_AMOUNT` (pay the exact bill amount) or `MAX_AMOUNT` (pay up to this limit).",
                                  "example": "FIXED_AMOUNT"
                                }
                              },
                              "description": "Details for debit information (mandatory when registrationType is AUTO_PAY)"
                            },
                            "registrationType": {
                              "type": "string",
                              "description": "The type of registration (AUTO_PAY or VIEW_N_PAY)",
                              "example": "AUTO_PAY"
                            },
                            "toDate": {
                              "type": "string",
                              "description": "The UPMS registration is invalid after this date. Date format is YYYY-MM-DD",
                              "nullable": true,
                              "example": "2027-01-01",
                              "x-omitempty": true
                            }
                          }
                        },
                        "refId": {
                          "type": "string",
                          "description": "The generated Reference ID for the request."
                        },
                        "status": {
                          "type": "string",
                          "description": "A UPMS registration progresses through various states. The status field captures the current state of the registration. The possible values are: - PENDING: Initial state after a registration request is accepted but before the registration is confirmed. - SUCCESS: Registration is active; bills will be presented via callbacks. - FAILED: Registration could not be completed (e.g., invalid details). - CANCELLED: Registration permanently cancelled by user or system. - DEACTIVATED: Registration has been deactivated.",
                          "enum": [
                            "SUCCESS",
                            "FAILED",
                            "PENDING",
                            "CANCELLED",
                            "DEACTIVATED"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "Timestamp when registration was last updated",
                          "format": "date-time",
                          "example": "2024-06-16T11:22:33+05:30"
                        },
                        "biller": {
                          "required": [
                            "id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The biller ID on BBPS",
                              "example": "MAHI00000NATIC"
                            }
                          },
                          "x-go-gen-location": "models",
                          "x-go-name": "BillerDetails"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Timestamp when registration was created",
                          "format": "date-time",
                          "example": "2024-06-15T10:30:45+05:30"
                        },
                        "customer": {
                          "required": [
                            "customerParams",
                            "mobile"
                          ],
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string",
                              "description": "Customer Identifier"
                            },
                            "customerParams": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value of the customer parameter",
                                    "example": "1895159"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The display name of the parameter. This has to match what is sent in fields.",
                                    "example": "Loan Number"
                                  }
                                }
                              }
                            },
                            "mobile": {
                              "maxLength": 22,
                              "minLength": 6,
                              "pattern": "^\\d{6,22}$",
                              "type": "string",
                              "description": "Mobile number with 6 to 22 digits are valid."
                            },
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Customer name registered with the Biller.",
                              "example": "Manoj Chekuri"
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the status of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The unique traceId generated for the request",
                      "example": "CV4PE82LTNJE9O014OE0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registration not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "UPMS"
        ],
        "description": "Cancel registration",
        "operationId": "CancelUPMSRegistration",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "upmsRegistrationRefID",
            "in": "path",
            "description": "The reference ID of the UPMS registration you want to cancel.",
            "required": true,
            "schema": {
              "maxLength": 35,
              "minLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Frame-Options": {
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request.",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicator to denote whether the request is successful.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registration not found or unauthorized access",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Registration status invalid for cancellation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UPMS"
        ],
        "description": "Update registration",
        "operationId": "UpdateUPMSRegistration",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "upmsRegistrationRefID",
            "in": "path",
            "description": "The reference ID of the UPMS registration you want to update.",
            "required": true,
            "schema": {
              "maxLength": 35,
              "minLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "mandate"
                ],
                "type": "object",
                "properties": {
                  "mandate": {
                    "type": "object",
                    "properties": {
                      "debitInfo": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "maximum": 999999999,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The amount for FIXED_AMOUNT or maximum limit for MAX_AMOUNT.",
                            "nullable": true,
                            "x-omitempty": true
                          },
                          "debitDate": {
                            "pattern": "^(0[1-9]|[12][0-9]|3[01])-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$",
                            "type": "string",
                            "description": "Preferred date for debit (DD-MMM format). Valid only for billers with fetchApiType=BILL_VALIDATE.",
                            "example": "02-Jan"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of debit limit.",
                            "example": "FIXED_AMOUNT",
                            "enum": [
                              "FIXED_AMOUNT",
                              "MAX_AMOUNT"
                            ]
                          }
                        },
                        "description": "Debit details for AUTO_PAY mandate updates. Only include fields that need changing."
                      },
                      "registrationType": {
                        "type": "string",
                        "description": "Type of registration (AUTO_PAY or VIEW_N_PAY).",
                        "enum": [
                          "AUTO_PAY",
                          "VIEW_N_PAY"
                        ]
                      },
                      "toDate": {
                        "type": "string",
                        "description": "The date until which the mandate is valid (YYYY-MM-DD). Must be a future date.",
                        "format": "date",
                        "example": "2027-01-01"
                      },
                      "billPeriod": {
                        "type": "string",
                        "description": "Desired frequency for bill presentation/payment. Valid only for billers with fetchApiType=BILL_VALIDATE, except ASPRESENTED.",
                        "enum": [
                          "DAILY",
                          "WEEKLY",
                          "BIMONTHLY",
                          "MONTHLY",
                          "QUARTERLY",
                          "HALFYEARLY",
                          "YEARLY",
                          "ASPRESENTED"
                        ]
                      }
                    },
                    "description": "Details of the mandate to be updated. Only include fields that need changing."
                  }
                },
                "x-go-name": "CouAgentUpdateUPMSRegistrationRequest",
                "x-omitempty": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update request acknowledged successfully.",
            "headers": {
              "X-Frame-Options": {
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request.",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicator to denote whether the request is successful.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registration not found or unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict (e.g., trying to update a cancelled registration)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ],
        "x-codegen-request-body-name": "CouAgentUpdateUPMSRegistrationRequest"
      }
    },
    "/api/v2/bbps/billers/plans": {
      "get": {
        "tags": [
          "List"
        ],
        "description": "Returns the list of plans for a given set of billers",
        "operationId": "getBillerPlans",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "billerIds",
            "in": "query",
            "description": "Biller IDs",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of plans to return per page",
            "schema": {
              "maximum": 4000.0,
              "minimum": 1.0,
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Used to fetch plans updated since the given date-time in IST",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "List of plans for the biller",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "required": [
                        "plans"
                      ],
                      "type": "object",
                      "properties": {
                        "nextPage": {
                          "type": "string",
                          "example": "/api/bbps/billers/plans?biller_ids=BILLER_01&after=ABCC00000PTNNS"
                        },
                        "plans": {
                          "type": "array",
                          "items": {
                            "required": [
                              "Id",
                              "amountInRupees",
                              "categoryType",
                              "description",
                              "status"
                            ],
                            "type": "object",
                            "properties": {
                              "Id": {
                                "type": "string",
                                "description": "Plan ID",
                                "example": "1.0",
                                "x-order": 1.0
                              },
                              "amountInRupees": {
                                "type": "string",
                                "example": "22.0",
                                "x-order": 2.0
                              },
                              "categorySubType": {
                                "type": "object",
                                "properties": {},
                                "description": "Plan sub category as defined by the Biller.",
                                "example": {
                                  "subType": "1 Month"
                                },
                                "x-omitempty": true,
                                "x-order": 4.0
                              },
                              "additionalInfo": {
                                "minItems": 1,
                                "type": "array",
                                "description": "Plan Additional information details provided by the Biller.",
                                "example": [
                                  {
                                    "paramName": "Mobile Number",
                                    "paramValue": "Text"
                                  }
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "paramName": {
                                      "type": "string",
                                      "example": "Plan Additional information parameter name."
                                    },
                                    "paramValue": {
                                      "type": "string",
                                      "example": "Plan Additional information parameter value."
                                    }
                                  },
                                  "example": {
                                    "paramName": "Mobile Number",
                                    "paramValue": "Text"
                                  },
                                  "x-go-name": "PlanAdditionalInfoItem"
                                },
                                "x-omitempty": true
                              },
                              "description": {
                                "type": "string",
                                "description": "Plan description as defined by the Biller.",
                                "example": "Unlimited Live Sports"
                              },
                              "effectiveFrom": {
                                "type": "string",
                                "description": "Effective from date of corresponding Plan.",
                                "format": "date",
                                "nullable": true,
                                "example": "2017-07-21",
                                "x-omitempty": false
                              },
                              "status": {
                                "type": "string",
                                "description": "Effective to date of corresponding Plan.",
                                "example": "ACTIVE",
                                "enum": [
                                  "ACTIVE",
                                  "DEACTIVATED"
                                ]
                              },
                              "billerId": {
                                "type": "string",
                                "description": "Biller ID to which the plan belongs to",
                                "example": "1.0",
                                "x-order": 0.0
                              },
                              "categoryType": {
                                "type": "string",
                                "description": "Plan category as defined by the Biller.",
                                "example": "VIP",
                                "x-order": 3.0
                              },
                              "effectiveTo": {
                                "type": "string",
                                "description": "Effective to date of corresponding Plan.",
                                "format": "date",
                                "nullable": true,
                                "example": "2020-08-21",
                                "x-omitempty": false
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    },
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/bbps/transactions": {
      "get": {
        "tags": [
          "List"
        ],
        "description": "Returns the list of transactions.",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "start date of the timestamp provided by the partner while making the request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "end date of the timestamp provided by the partner while making the request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "billerId",
            "in": "query",
            "description": "Transaction BillerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Biller Category",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "billerFetchApiType",
            "in": "query",
            "description": "Biller Fetch Api Type",
            "schema": {
              "type": "string",
              "enum": [
                "BILL_FETCH",
                "BILL_VALIDATE",
                "BILL_DIRECT",
                "BILL_MANDATE"
              ]
            }
          },
          {
            "name": "months",
            "in": "query",
            "description": "Month ranges. A full-date notation as defined by 'RFC 3339, section 5.6' has to be provided but only month and year will be considered.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Transaction Status",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Processing",
                  "Success",
                  "Error"
                ]
              }
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "description": "Mobile number with 6 to 22 digits are valid.",
            "schema": {
              "maxLength": 22,
              "minLength": 6,
              "pattern": "^\\d{6,22}$",
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BILLER",
                  "ETHEREAL_TRANSACTION"
                ]
              }
            }
          },
          {
            "name": "refundStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Required",
                "Requested",
                "Processed"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "List of Txns",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "success",
                        "traceId"
                      ],
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "traceId": {
                          "type": "string",
                          "example": "C3SFG0O6N88R6UI7EQ"
                        }
                      }
                    },
                    {
                      "required": [
                        "data"
                      ],
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "nextPage": {
                                  "type": "string",
                                  "example": "/api/bbps/transactions?search=Aditya&CategoryCode=Loan+Repayment&CategoryCode=Insurance&after=ABCC00000PTNNS"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "transactions": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "example": "Success",
                                            "enum": [
                                              "Processing",
                                              "Success",
                                              "Error",
                                              "Credit_Adjustment"
                                            ]
                                          },
                                          "biller": {
                                            "required": [
                                              "categoryName",
                                              "customerParams",
                                              "exactness",
                                              "fetchApiType",
                                              "id",
                                              "name",
                                              "payWithoutFetchAllowed",
                                              "paymentChannels",
                                              "paymentModes",
                                              "supportsPendingStatus"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "upmsEnabled": {
                                                "type": "boolean",
                                                "description": "This field denotes whether a biller supports registering customers for automated bill presentments via UPMS",
                                                "nullable": true,
                                                "example": true,
                                                "x-omitempty": true
                                              },
                                              "customerParams": {
                                                "type": "array",
                                                "items": {
                                                  "required": [
                                                    "dataType",
                                                    "maxLength",
                                                    "minLength",
                                                    "optional",
                                                    "paramName",
                                                    "regex",
                                                    "values",
                                                    "visibility"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "regex": {
                                                      "type": "string",
                                                      "example": "^[a-zA-Z0-9]{7,15}"
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "example": "CHOICE1,CHOICE2,CHOICE3"
                                                    },
                                                    "visibility": {
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "dataType": {
                                                      "type": "string",
                                                      "example": "ALPHANUMERIC"
                                                    },
                                                    "maxLength": {
                                                      "type": "integer"
                                                    },
                                                    "minLength": {
                                                      "type": "integer"
                                                    },
                                                    "optional": {
                                                      "type": "boolean",
                                                      "example": false
                                                    },
                                                    "paramName": {
                                                      "type": "string",
                                                      "example": "Loan Account Number"
                                                    }
                                                  }
                                                }
                                              },
                                              "paymentModes": {
                                                "type": "array",
                                                "items": {
                                                  "required": [
                                                    "maxLimit",
                                                    "minLimit",
                                                    "paymentMode",
                                                    "supportsPendingStatus"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "maxLimit": {
                                                      "type": "integer"
                                                    },
                                                    "minLimit": {
                                                      "type": "integer"
                                                    },
                                                    "paymentMode": {
                                                      "type": "string",
                                                      "example": "Internet Banking",
                                                      "enum": [
                                                        "Internet Banking",
                                                        "Debit Card",
                                                        "Credit Card",
                                                        "Prepaid Card",
                                                        "IMPS",
                                                        "Cash",
                                                        "UPI",
                                                        "Wallet",
                                                        "NEFT",
                                                        "AEPS",
                                                        "Account Transfer",
                                                        "Bharat QR",
                                                        "USSD",
                                                        "BHIM Aadhaar Pay"
                                                      ]
                                                    },
                                                    "supportsPendingStatus": {
                                                      "type": "boolean",
                                                      "example": false
                                                    }
                                                  }
                                                }
                                              },
                                              "responseType": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "SINGLE",
                                                "enum": [
                                                  "SINGLE",
                                                  "LIST",
                                                  "SELECTIVE"
                                                ],
                                                "x-nullable": true,
                                                "x-omitempty": false
                                              },
                                              "subCategoryName": {
                                                "type": "string",
                                                "example": "DAIRY"
                                              },
                                              "tags": {
                                                "type": "string",
                                                "example": "tags"
                                              },
                                              "valAddFlag": {
                                                "type": "boolean",
                                                "description": "Flag indicating if value added services are enabled for the biller.",
                                                "example": true,
                                                "x-omitempty": true
                                              },
                                              "country": {
                                                "type": "string",
                                                "example": "IND"
                                              },
                                              "id": {
                                                "type": "string",
                                                "description": "Identifier of the biller in BBPS.",
                                                "example": "ADIT00000NAT0T"
                                              },
                                              "interchangeFee": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "feeDesc": {
                                                      "type": "string",
                                                      "example": "Customer Convenience Fee"
                                                    },
                                                    "feeDirection": {
                                                      "type": "string",
                                                      "example": "C2B"
                                                    },
                                                    "interchangeFeeDetails": {
                                                      "required": [
                                                        "effctvFrom",
                                                        "effctvTo",
                                                        "flatFee",
                                                        "percentFee",
                                                        "tranAmtRangeMax",
                                                        "tranAmtRangeMin"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "tranAmtRangeMax": {
                                                          "type": "integer",
                                                          "format": "int64"
                                                        },
                                                        "tranAmtRangeMin": {
                                                          "type": "integer",
                                                          "format": "int64"
                                                        },
                                                        "effctvFrom": {
                                                          "type": "string",
                                                          "example": "2024-01-01"
                                                        },
                                                        "effctvTo": {
                                                          "type": "string",
                                                          "example": "2024-12-31"
                                                        },
                                                        "flatFee": {
                                                          "type": "number",
                                                          "format": "decimal",
                                                          "example": 0.0
                                                        },
                                                        "percentFee": {
                                                          "type": "number",
                                                          "format": "decimal",
                                                          "example": 1.0
                                                        }
                                                      }
                                                    },
                                                    "feeCode": {
                                                      "type": "string",
                                                      "example": "CCF1"
                                                    }
                                                  }
                                                }
                                              },
                                              "pincode": {
                                                "type": "string",
                                                "example": "pincode"
                                              },
                                              "billerAdditionalInfo": {
                                                "type": "array",
                                                "items": {
                                                  "required": [
                                                    "dataType",
                                                    "optional",
                                                    "paramName"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "dataType": {
                                                      "type": "string",
                                                      "example": "ALPHANUMERIC",
                                                      "enum": [
                                                        "ALPHANUMERIC",
                                                        "NUMERIC"
                                                      ]
                                                    },
                                                    "optional": {
                                                      "type": "boolean",
                                                      "example": false
                                                    },
                                                    "paramName": {
                                                      "type": "string",
                                                      "example": "Package Duration"
                                                    }
                                                  }
                                                }
                                              },
                                              "city": {
                                                "type": "string",
                                                "example": "Hyderabad"
                                              },
                                              "coverage": {
                                                "type": "string",
                                                "example": "IND-TEL-Hyderabad"
                                              },
                                              "createdAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "nullable": true,
                                                "example": "2021-11-12T13:37:04.572+05:30",
                                                "x-omitempty": false
                                              },
                                              "modifiedAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "nullable": true,
                                                "example": "2021-11-12T13:37:04.572+05:30",
                                                "x-omitempty": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the biller.",
                                                "example": "Umbrella Corporation"
                                              },
                                              "selectionType": {
                                                "type": "string",
                                                "description": "Defined only for billers with response type as LIST. SINGLE: User can pay only one of the bills in bill fetch response. MULTIPLE: User can pay any combination of bills in bill fetch response. ALL: User has to pay all the bills in bill fetch response.",
                                                "nullable": true,
                                                "example": "SINGLE",
                                                "enum": [
                                                  "SINGLE",
                                                  "MULTIPLE",
                                                  "ALL"
                                                ],
                                                "x-omitempty": false,
                                                "x-nullable": true
                                              },
                                              "categoryName": {
                                                "type": "string",
                                                "description": "Biller Category",
                                                "example": "loan-repayment"
                                              },
                                              "customerParamsGroups": {
                                                "type": "array",
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "example": "Param 1"
                                                  }
                                                }
                                              },
                                              "exactness": {
                                                "type": "string",
                                                "example": "Exact",
                                                "enum": [
                                                  "Exact",
                                                  "Exact and above",
                                                  "Exact and below",
                                                  "Any",
                                                  "RANGE"
                                                ]
                                              },
                                              "supportCallback": {
                                                "type": "boolean",
                                                "description": "Flag indicating if the biller supports callbacks.",
                                                "example": true,
                                                "x-omitempty": true
                                              },
                                              "billerAdditionalInfoPayment": {
                                                "type": "array",
                                                "items": {
                                                  "required": [
                                                    "dataType",
                                                    "optional",
                                                    "paramName"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "dataType": {
                                                      "type": "string",
                                                      "example": "ALPHANUMERIC",
                                                      "enum": [
                                                        "ALPHANUMERIC",
                                                        "NUMERIC"
                                                      ]
                                                    },
                                                    "optional": {
                                                      "type": "boolean",
                                                      "example": false
                                                    },
                                                    "paramName": {
                                                      "type": "string",
                                                      "example": "Package Duration"
                                                    }
                                                  }
                                                }
                                              },
                                              "paymentChannels": {
                                                "type": "array",
                                                "items": {
                                                  "required": [
                                                    "maxLimit",
                                                    "minLimit",
                                                    "paymentChannel",
                                                    "supportsPendingStatus"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                    "maxLimit": {
                                                      "type": "integer"
                                                    },
                                                    "minLimit": {
                                                      "type": "integer"
                                                    },
                                                    "paymentChannel": {
                                                      "type": "string",
                                                      "description": "This is the initiating channel.\n1. `AGT`: Offline agent.\n2. `BNKBRNCH`: Bank branch.\n3. `BSC`: Business correspondent\n4. `MOB`: Mobile application\n5. `INT`: Internet portal\n6. `INTB`: Internet banking\n7. `MOBB`: Mobile banking\n8. `ATM`: ATM\n9. `KIOSK`: KIOSK\n",
                                                      "example": "INT",
                                                      "enum": [
                                                        "INT",
                                                        "INTB",
                                                        "MOB",
                                                        "BNKBRNCH",
                                                        "BSC",
                                                        "AGT",
                                                        "KIOSK",
                                                        "ATM",
                                                        "MOBB",
                                                        "POS",
                                                        "MPOS"
                                                      ]
                                                    },
                                                    "supportsPendingStatus": {
                                                      "type": "boolean",
                                                      "example": false
                                                    }
                                                  }
                                                }
                                              },
                                              "planRequirement": {
                                                "type": "string",
                                                "description": "Indicates if plan selection is required for bill payments",
                                                "example": "MANDATORY",
                                                "enum": [
                                                  "MANDATORY",
                                                  "OPTIONAL",
                                                  "CONDITIONAL"
                                                ],
                                                "x-omitempty": true
                                              },
                                              "supportsPendingStatus": {
                                                "type": "boolean",
                                                "description": "Flag indicating whether pending status is applicable for the biller or not",
                                                "example": false
                                              },
                                              "pseudoBiller": {
                                                "type": "boolean",
                                                "description": "Flag indicating if the biller is a pseudo biller.",
                                                "example": false,
                                                "x-omitempty": true
                                              },
                                              "valAddCustParams": {
                                                "type": "array",
                                                "description": "Customer parameters for value added services.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "requestType": {
                                                      "type": "string",
                                                      "description": "Type of value added service request.",
                                                      "example": "GetCustomerId",
                                                      "enum": [
                                                        "GetCustomerId",
                                                        "GenerateOTP",
                                                        "ValidateOTP",
                                                        "GetBankMarkup",
                                                        "FetchBestPrice"
                                                      ]
                                                    },
                                                    "customerParams": {
                                                      "type": "array",
                                                      "items": {
                                                        "required": [
                                                          "dataType",
                                                          "maxLength",
                                                          "minLength",
                                                          "optional",
                                                          "paramName",
                                                          "regex",
                                                          "values",
                                                          "visibility"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                          "regex": {
                                                            "type": "string",
                                                            "example": "^[a-zA-Z0-9]{7,15}"
                                                          },
                                                          "values": {
                                                            "type": "string",
                                                            "example": "CHOICE1,CHOICE2,CHOICE3"
                                                          },
                                                          "visibility": {
                                                            "type": "boolean",
                                                            "example": true
                                                          },
                                                          "dataType": {
                                                            "type": "string",
                                                            "example": "ALPHANUMERIC"
                                                          },
                                                          "maxLength": {
                                                            "type": "integer"
                                                          },
                                                          "minLength": {
                                                            "type": "integer"
                                                          },
                                                          "optional": {
                                                            "type": "boolean",
                                                            "example": false
                                                          },
                                                          "paramName": {
                                                            "type": "string",
                                                            "example": "Loan Account Number"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "x-omitempty": true
                                              },
                                              "bbpsUpdateTimestamp": {
                                                "type": "string",
                                                "description": "Last updated date-time of the Biller accurate to the nearest day.",
                                                "format": "date-time",
                                                "nullable": true,
                                                "example": "2021-11-12T13:37:04.572+05:30",
                                                "x-omitempty": true
                                              },
                                              "fetchApiType": {
                                                "type": "string",
                                                "enum": [
                                                  "BILL_FETCH",
                                                  "BILL_VALIDATE",
                                                  "BILL_DIRECT",
                                                  "BILL_MANDATE"
                                                ]
                                              },
                                              "mandateRequirement": {
                                                "type": "string",
                                                "description": "Mandate requirement for the biller.",
                                                "example": "MANDATORY",
                                                "x-omitempty": true
                                              },
                                              "upmsBillerParams": {
                                                "type": "array",
                                                "description": "The list of parameters that a biller requires to be passed in the `mandate.billerParams` while registering a new customer",
                                                "items": {
                                                  "allOf": [
                                                    {
                                                      "required": [
                                                        "dataType",
                                                        "maxLength",
                                                        "minLength",
                                                        "optional",
                                                        "paramName",
                                                        "regex",
                                                        "values",
                                                        "visibility"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                        "regex": {
                                                          "type": "string",
                                                          "example": "^[a-zA-Z0-9]{7,15}"
                                                        },
                                                        "values": {
                                                          "type": "string",
                                                          "example": "CHOICE1,CHOICE2,CHOICE3"
                                                        },
                                                        "visibility": {
                                                          "type": "boolean",
                                                          "example": true
                                                        },
                                                        "dataType": {
                                                          "type": "string",
                                                          "example": "ALPHANUMERIC"
                                                        },
                                                        "maxLength": {
                                                          "type": "integer"
                                                        },
                                                        "minLength": {
                                                          "type": "integer"
                                                        },
                                                        "optional": {
                                                          "type": "boolean",
                                                          "example": false
                                                        },
                                                        "paramName": {
                                                          "type": "string",
                                                          "example": "Loan Account Number"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object"
                                                    }
                                                  ]
                                                },
                                                "x-omitempty": true
                                              },
                                              "state": {
                                                "type": "string",
                                                "example": "TEL"
                                              },
                                              "enforcesSameDayFetchPay": {
                                                "type": "boolean",
                                                "example": true,
                                                "x-omitempty": false
                                              },
                                              "logo": {
                                                "type": "string",
                                                "example": "logo"
                                              },
                                              "payWithoutFetchAllowed": {
                                                "type": "boolean",
                                                "description": "Flag indicating if the Biller accepts adhoc payment",
                                                "example": true
                                              }
                                            },
                                            "x-go-name": "CouBillerDetails"
                                          },
                                          "customerParams": {
                                            "type": "array",
                                            "description": "The bill params for fetching the bill",
                                            "items": {
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The value of the customer parameter",
                                                  "example": "1895159"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "The display name of the parameter. This has to match what is sent in fields.",
                                                  "example": "Loan Number"
                                                }
                                              }
                                            }
                                          },
                                          "etherealTransaction": {
                                            "required": [
                                              "amount",
                                              "billRefId",
                                              "refId",
                                              "status",
                                              "transactionId"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "transactionId": {
                                                "type": "string",
                                                "example": "Q910192192192192"
                                              },
                                              "amount": {
                                                "type": "string",
                                                "example": "100.00"
                                              },
                                              "billRefId": {
                                                "type": "string",
                                                "description": "The BBPS Ref ID",
                                                "example": "C3SFG0O6N88R6UI7EQ"
                                              },
                                              "refId": {
                                                "type": "string",
                                                "example": "COUWL910192192192192"
                                              },
                                              "status": {
                                                "type": "string",
                                                "enum": [
                                                  "INIT",
                                                  "SUCCESS",
                                                  "FAILURE",
                                                  "PENDING",
                                                  "UNKNOWN"
                                                ]
                                              }
                                            }
                                          },
                                          "timestamp": {
                                            "type": "string",
                                            "description": "Timestamp provided by partner while making payment request.",
                                            "format": "date-time",
                                            "example": "2020-12-12T13:12:00+05:30"
                                          },
                                          "transactionId": {
                                            "type": "string",
                                            "description": "Setu BillPay Transaction ID.",
                                            "example": "AS01910192192192192"
                                          },
                                          "amount": {
                                            "type": "integer"
                                          },
                                          "billerId": {
                                            "type": "string",
                                            "description": "The biller ID on BBPS",
                                            "example": "MAHI00000NATIC"
                                          },
                                          "custConvFee": {
                                            "type": "integer",
                                            "description": "Customer convenience fee in paise"
                                          },
                                          "customerId": {
                                            "type": "string",
                                            "description": "Customer Identifier"
                                          },
                                          "refId": {
                                            "type": "string",
                                            "description": "The generated Reference ID for the request."
                                          },
                                          "refundStatus": {
                                            "type": "string",
                                            "enum": [
                                              "Required",
                                              "Requested",
                                              "Processed"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "paymentRefId": {
                                            "maxLength": 35,
                                            "minLength": 6,
                                            "type": "string",
                                            "description": "Unique identifier provided by Partner for the payment request.",
                                            "example": "BD019181220291"
                                          },
                                          "mobile": {
                                            "maxLength": 22,
                                            "minLength": 6,
                                            "pattern": "^\\d{6,22}$",
                                            "type": "string",
                                            "description": "Mobile number with 6 to 22 digits are valid."
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "x-go-name": "TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/upms/simulate/{billRefId}/callbacks/skip-payment": {
      "post": {
        "tags": [
          "UPMS"
        ],
        "description": "Simulate skip payment",
        "operationId": "SimulateSkipPaymentNotification",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "billRefId",
            "in": "path",
            "description": "Reference ID of the Bill",
            "required": true,
            "schema": {
              "maxLength": 35,
              "minLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Request accepted and queued for processing",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Boolean value indicating the success of the request",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "description": "The traceId generated for the request",
                      "example": "CV4PE82LTNJE9O014OE0"
                    }
                  },
                  "x-go-name": "SimulateCallbackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - operation not allowed in current environment",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bill not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    },
    "/api/v2/bbps/categories": {
      "get": {
        "tags": [
          "List"
        ],
        "description": "Returns the list of categories.",
        "parameters": [
          {
            "name": "X-PARTNER-ID",
            "in": "header",
            "description": "The Partner ID provided by Setu.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Bearer [a-zA-Z0-9\\-\\._~\\+\\/]+=*$"
            },
            "description": "Bearer token for authentication. Format: `Bearer <token>`",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "headers": {
              "X-Frame-Options": {
                "description": "X Frame options",
                "schema": {
                  "type": "string"
                }
              },
              "Strict-Transport-Security": {
                "description": "Strict transport security",
                "schema": {
                  "type": "string"
                }
              },
              "Cache-Control": {
                "description": "Cache control",
                "schema": {
                  "type": "string"
                }
              },
              "X-Content-Type-Options": {
                "description": "X Content type options",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Security-Policy": {
                "description": "Content security policy",
                "schema": {
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Pragma",
                "schema": {
                  "type": "string"
                }
              },
              "X-XSS-Protection": {
                "description": "X Xss Protection",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    },
                    "data": {
                      "required": [
                        "categories"
                      ],
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "billerCount": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string",
                                "example": "Loan Repayment"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "success",
                    "traceId"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "validation-error"
                        },
                        "message": {
                          "type": "string",
                          "example": "Input is invalid"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "traceId": {
                      "type": "string",
                      "example": "C3SFG0O6N88R6UI7EQ"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Production": [
              "bbps:partner"
            ]
          },
          {
            "Sandbox": [
              "bbps:partner"
            ]
          },
          {
            "QA": [
              "bbps:partner"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "Production": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://coudc.setu.co/api/v2/auth/token",
            "scopes": {
              "bbps:partner": "Required scope"
            }
          }
        }
      },
      "Sandbox": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sandbox-coudc.setu.co/api/v2/auth/token",
            "scopes": {
              "bbps:partner": "Required scope"
            }
          }
        }
      },
      "QA": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://qa-coudc.setu.co/api/v2/auth/token",
            "scopes": {
              "bbps:partner": "Required scope"
            }
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
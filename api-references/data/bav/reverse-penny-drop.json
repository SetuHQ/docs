{
  "openapi": "3.0.0",
  "info": {
    "title": "Data Gateway - Bank account verification (Reverse Penny drop)",
    "description": "**Bank Account Verification**\nConfirm the validity of an account from the account holderâ€™s bank, with reverse penny-drop (Get the user to penny-drop via UPI!). ",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dg-sandbox.setu.co",
      "description": "Sandbox"
    },
    {
      "url": "https://dg.setu.co",
      "description": "Production"
    }
  ],
  "paths": {
    "/api/verify/ban/reverse": {
      "post": {
        "tags": ["Reverse Penny Drop"],
        "summary": "Create RPD",
        "operationId": "CreateRPD",
        "parameters": [
          {
            "name": "x-client-id",
            "in": "header",
            "description": "Client id of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{client_id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "description": "Client secret of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{secret}}"
            }
          },
          {
            "name": "x-product-instance-id",
            "in": "header",
            "description": "Setu-rpd product instance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "your product instance id"
            }
          }
        ],
        "requestBody": {
          "description": "additionalData is optional",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRPDRequestBody"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Success10"
                    },
                    {
                      "example": {
                        "id": "81f4d2dd-6d32-48b0-8060-4976ea7acffc",
                        "shortUrl": "https://sandbox.bills.pe/4qb3gymfvq2j",
                        "status": "BAV_REVERSE_PENNY_DROP_CREATED",
                        "traceId": "1-6348f219-48d54db111bd597b588d8ebb",
                        "upiBillId": "1005098383142028542",
                        "upiLink": "upi://pay?pa=bauvatest@kaypay&pn=BauvaTest&am=1.00&tr=1005098383142028542&tn=Account%20Verification&cu=INR&mode=04",
                        "validUpto": "2022-10-14T05:25:34.087479"
                      }
                    }
                  ]
                },
                "example": {
                  "id": "81f4d2dd-6d32-48b0-8060-4976ea7acffc",
                  "shortUrl": "https://sandbox.bills.pe/4qb3gymfvq2j",
                  "status": "BAV_REVERSE_PENNY_DROP_CREATED",
                  "traceId": "1-6348f219-48d54db111bd597b588d8ebb",
                  "upiBillId": "1005098383142028542",
                  "upiLink": "upi://pay?pa=bauvatest@kaypay&pn=BauvaTest&am=1.00&tr=1005098383142028542&tn=Account%20Verification&cu=INR&mode=04",
                  "validUpto": "2022-10-14T05:25:34.087479"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Failure-BadRequest1"
                    }
                  ]
                },
                "example": {
                  "$ref": "#/components/schemas/Failure-BadRequest1/example"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError1"
                    }
                  ]
                },
                "example": {
                  "$ref": "#/components/schemas/InternalServerError1/example"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/verify/ban/reverse/mock_payment/{requestId}": {
      "post": {
        "tags": ["Reverse Penny Drop"],
        "summary": "Mock Payment",
        "operationId": "MockPayment",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID (UUID4) of the create rpd request",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{request_id}}"
            }
          },
          {
            "name": "x-client-id",
            "in": "header",
            "description": "Client id of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{client_id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "description": "Client secret of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{secret}}"
            }
          },
          {
            "name": "x-product-instance-id",
            "in": "header",
            "description": "Setu-rpd product instance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "your product instance id"
            }
          }
        ],
        "requestBody": {
          "description": "additionalData is optional",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MockPaymentRequestBody"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Success12"
                    },
                    {
                      "example": {
                        "success": true,
                        "traceId": "1-6348f340-742786432dd0e7e13bdbc7a4"
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "traceId": "1-6348f340-742786432dd0e7e13bdbc7a4"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError1"
                    }
                  ]
                },
                "example": {
                  "$ref": "#/components/schemas/InternalServerError1/example"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/verify/ban/reverse/{requestId}": {
      "get": {
        "tags": ["Reverse Penny Drop"],
        "summary": "Get Details",
        "operationId": "GetDetails",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID (UUID4) of the create rpd request",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{request_id}}"
            }
          },
          {
            "name": "x-client-id",
            "in": "header",
            "description": "Client id of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{client_id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "description": "Client secret of the customer",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{secret}}"
            }
          },
          {
            "name": "x-product-instance-id",
            "in": "header",
            "description": "Setu-rpd product instance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "your product instance id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Success13"
                    },
                    {
                      "example": {
                        "$ref": "#/components/schemas/rdp_success_response01"
                      }
                    }
                  ]
                },
                "example": {
                  "$ref": "#/components/schemas/rdp_success_response01"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Failure-NotFound1"
                    },
                    {
                      "example": {
                        "error": {
                          "code": "request_not_found",
                          "detail": "Unable to find the BAV reverse penny drop request.",
                          "traceId": "1-6348f37d-0a98296b43325b78627a65a7"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "error": {
                    "code": "request_not_found",
                    "detail": "Unable to find the BAV reverse penny drop request.",
                    "traceId": "1-6348f37d-0a98296b43325b78627a65a7"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError1"
                    }
                  ]
                },
                "example": {
                  "$ref": "#/components/schemas/InternalServerError1/example"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "CreateRPDRequestBody": {
        "title": "CreateRPDRequestBody",
        "type": "object",
        "properties": {
          "redirectionConfig": {
            "$ref": "#/components/schemas/RedirectionConfig"
          },
          "additionalData": {
            "$ref": "#/components/schemas/AdditionalData"
          }
        },
        "summary": "redirectionConfig and additionalData are optional",
        "example": {
          "redirectionConfig": {
            "redirectUrl": "https://example.com",
            "timeout": 60
          },
          "additionalData": {
            "key1": "value1",
            "key2": "value2"
          }
        }
      },
      "RedirectionConfig": {
        "title": "RedirectionConfig",
        "description": "Configuration for redirection after the penny drop",
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to redirect the user to after the penny drop"
          },
          "timeout": {
            "type": "integer",
            "description": "Time in seconds after which the penny drop request will expire"
          }
        },
        "example": {
          "redirectUrl": "https://example.com",
          "timeout": 60
        }
      },
      "AdditionalData": {
        "title": "AdditionalData",
        "description": "Any key value that the customer wants to set to this request and use it later to track the request",
        "type": "object",
        "properties": {
          "key1": {
            "type": "string"
          },
          "key2": {
            "type": "string"
          }
        },
        "example": {
          "key1": "value1",
          "key2": "value2"
        }
      },
      "Success10": {
        "title": "Success10",
        "required": [
          "id",
          "shortUrl",
          "status",
          "traceId",
          "upiBillId",
          "upiLink",
          "validUpto"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID (UUID4) of the create rpd request"
          },
          "shortUrl": {
            "type": "string",
            "description": "Short URL to be used for penny drop"
          },
          "status": {
            "type": "string",
            "description": "Status of the request",
            "enum": ["BAV_REVERSE_PENNY_DROP_CREATED", "BAV_REVERSE_PENNY_DROP_EXPIRED", "BAV_REVERSE_PENNY_DROP_PAYMENT_SUCCESSFUL", "BAV_REVERSE_PENNY_DROP_PAYMENT_FAILED", "BAV_REVERSE_PENNY_DROP_ERROR", "BAV_REVERSE_PENNY_DROP_FAILED"]
          },
          "traceId": {
            "type": "string",
            "description": "Trace id (UUID) of the api request"
          },
          "upiBillId": {
            "type": "string",
            "description": "UPI bill id for the penny drop"
          },
          "upiLink": {
            "type": "string",
            "description": "UPI link to be used for penny drop"
          },
          "validUpto": {
            "type": "string",
            "description": "Time till which the request is valid"
          }
        },
        "example": {
          "id": "81f4d2dd-6d32-48b0-8060-4976ea7acffc",
          "shortUrl": "https://sandbox.bills.pe/4qb3gymfvq2j",
          "status": "BAV_REVERSE_PENNY_DROP_CREATED",
          "traceId": "1-6348f219-48d54db111bd597b588d8ebb",
          "upiBillId": "1005098383142028542",
          "upiLink": "upi://pay?pa=bauvatest@kaypay&pn=BauvaTest&am=1.00&tr=1005098383142028542&tn=Account%20Verification&cu=INR&mode=04",
          "validUpto": "2022-10-14T05:25:34.087479"
        }
      },
      "Failure-BadRequest1": {
        "title": "Failure-BadRequest1",
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "code": "bad_request",
            "detail": "Please refer to our docs to send an appropriate request",
            "traceId": "1-641074c2-616fef3e45ac06a37b50a04a"
          }
        }
      },
      "InternalServerError1": {
        "title": "InternalServerError1",
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "code": "internal_server_error",
            "detail": "Internal Server Error",
            "traceId": "7097e53a-ba29-48a2-983d-878433b4f33e"
          }
        }
      },
      "Error": {
        "title": "Error",
        "required": ["code", "detail", "traceId"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "detail": {
            "type": "string",
            "description": "Error message"
          },
          "traceId": {
            "type": "string",
            "description": "Trace id (UUID) of the api request"
          }
        },
        "example": {
          "code": "invalid_document",
          "detail": "The document Id is already being used in a signature",
          "traceId": ""
        }
      },
      "MockPaymentRequestBody": {
        "title": "MockPaymentRequestBody",
        "type": "object",
        "properties": {
          "paymentStatus": {
            "$ref": "#/components/schemas/MockPaymentPaymentStatus"
          }
        },
        "example": {
          "paymentStatus": "successful"
        }
      },
      "MockPaymentPaymentStatus": {
        "title": "MockPaymentPaymentStatus",
        "type": "string",
        "enum": ["successful", "expired"]
      },
      "Success12": {
        "title": "Success12",
        "required": ["success", "traceId"],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "If payment is successful"
          },
          "traceId": {
            "type": "string",
            "description": "Trace id (UUID) of the api request"
          }
        },
        "example": {
          "success": true,
          "traceId": "1-6348f340-742786432dd0e7e13bdbc7a4"
        }
      },
      "Success13": {
        "title": "Success13",
        "required": [
          "additionalData",
          "data",
          "id",
          "shortUrl",
          "status",
          "traceId",
          "upiBillId",
          "upiLink",
          "validUpto"
        ],
        "type": "object",
        "properties": {
          "additionalData": {
            "$ref": "#/components/schemas/AdditionalData"
          },
          "data": {
            "$ref": "#/components/schemas/Data3"
          },
          "id": {
            "type": "string",
            "description": "ID (UUID4) of the rpd request"
          },
          "shortUrl": {
            "type": "string",
            "description": "Short URL to be used for penny drop"
          },
          "status": {
            "type": "string",
            "description": "Status of the request",
            "enum": ["BAV_REVERSE_PENNY_DROP_CREATED", "BAV_REVERSE_PENNY_DROP_EXPIRED", "BAV_REVERSE_PENNY_DROP_PAYMENT_SUCCESSFUL", "BAV_REVERSE_PENNY_DROP_PAYMENT_FAILED", "BAV_REVERSE_PENNY_DROP_ERROR", "BAV_REVERSE_PENNY_DROP_FAILED"]
          },
          "traceId": {
            "type": "string",
            "description": "Trace id (UUID) of the api request"
          },
          "upiBillId": {
            "type": "string",
            "description": "UPI bill id for the penny drop"
          },
          "upiLink": {
            "type": "string",
            "description": "UPI link to be used for penny drop"
          },
          "validUpto": {
            "type": "string",
            "description": "Time till which the request is valid"
          }
        },
        "example": {
          "additionalData": null,
          "data": {
            "accountType": "UNKNOWN",
            "bankAccountIfsc": "SETU0000012",
            "bankAccountName": "Noresh",
            "bankAccountNumber": "9009120939129",
            "ifscCrossCheck": false,
            "payerVpa": "customer@vpa"
          },
          "id": "1af36b4e-681e-48a2-a15c-3b92da00e4c4",
          "shortUrl": "https://sandbox.bills.pe/vnl056cniwrk",
          "status": "BAV_REVERSE_PENNY_DROP_PAYMENT_SUCCESSFUL",
          "traceId": "1-6348f366-55c47bbe132d78441bbe4623",
          "upiBillId": "1005100812449350916",
          "upiLink": "upi://pay?pa=bauvatest@kaypay&pn=BauvaTest&am=1.00&tr=1005100812449350916&tn=Account%20Verification&cu=INR&mode=04",
          "validUpto": "2022-10-14T05:30:23.683631"
        }
      },
      "rdp_success_response01": {
        "additionalData": {
          "key1": "value1",
          "key2": "value2"
        },
        "data": {
          "accountType": "BANK_ACCOUNT",
          "bankAccountType": "SAVINGS",
          "bankAccountIfsc": "SBIN0006813",
          "bankAccountName": "Noresh",
          "bankAccountNumber": "9009120939129",
          "ifscCrossCheck": true,
          "payerVpa": "customer@vpa",
          "ifscDetails": {
            "address": "KESHAVPURAM, DELH",
            "branch": "KESHAVPURAM",
            "center": "NEW DELHI",
            "city": "DELHI",
            "contact": "",
            "district": "NEW DELHI",
            "imps": "true",
            "iso3166": "IN-DL",
            "micr": "110002157",
            "name": "State Bank of India",
            "neft": "true",
            "rtgs": "true",
            "state": "DELHI",
            "swift": "",
            "upi": "true"
          }
        },
        "id": "1af36b4e-681e-48a2-a15c-3b92da00e4c4",
        "shortUrl": "https://sandbox.bills.pe/vnl056cniwrk",
        "status": "BAV_REVERSE_PENNY_DROP_PAYMENT_SUCCESSFUL",
        "traceId": "1-6348f366-55c47bbe132d78441bbe4623",
        "upiBillId": "1005100812449350916",
        "upiLink": "upi://pay?pa=bauvatest@kaypay&pn=BauvaTest&am=1.00&tr=1005100812449350916&tn=Account%20Verification&cu=INR&mode=04",
        "validUpto": "2022-10-14T05:30:23.683631"
      },
      "Data3": {
        "title": "Data3",
        "required": [
          "accountType",
          "bankAccountIfsc",
          "bankAccountName",
          "bankAccountNumber",
          "ifscCrossCheck",
          "payerVpa"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Type of account",
            "enum": ["BANK_ACCOUNT", "INVALID", "UNKNOWN", "PPI"]
          },
          "bankAccountIfsc": {
            "type": "string",
            "description": "IFSC code of the bank"
          },
          "bankAccountName": {
            "type": "string",
            "description": "Bank account holder's name"
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Bank account number"
          },
          "ifscCrossCheck": {
            "type": "boolean",
            "description": "Did we find ifsc code in RBI database. if not ifsc Details will be empty."
          },
          "payerVpa": {
            "type": "string",
            "description": "Payer's VPA"
          }
        },
        "example": {
          "accountType": "UNKNOWN",
          "bankAccountIfsc": "SETU0000012",
          "bankAccountName": "Noresh",
          "bankAccountNumber": "9009120939129",
          "ifscCrossCheck": false,
          "payerVpa": "customer@vpa"
        }
      },
      "Failure-NotFound1": {
        "title": "Failure-NotFound1",
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "code": "request_not_found",
            "detail": "Unable to find the BAV reverse penny drop request.",
            "traceId": "1-6348f37d-0a98296b43325b78627a65a7"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "tags": [
    {
      "name": "Reverse Penny Drop"
    },
    {
      "name": "Auth",
      "description": ""
    }
  ]
}

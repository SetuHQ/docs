{
    "openapi": "3.1.0",
    "info": {
        "title": "Setu Insights API",
        "description": "Setu's Insights API gives you actionable insights from a customer's bank statement about their income, expenditure, and financial history.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://di-uat.setu.co/",
            "description": "Sandbox"
        },
        {
            "url": "https://insights.setu.co/",
            "description": "Production"
        }
    ],
    "paths": {
        "/v3/template": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Get Templates",
                "description": "Get a list of configured templates for the FIU",
                "operationId": "get_templates_v3_template_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Template ID for which insights are needed",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "templateId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "authorization",
                            "type": "string"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "x-product-instance-id",
                            "type": "string"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-id",
                            "type": "string"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-secret",
                            "type": "string"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateGetResponseV3"
                                },
                                "examples": {
                                    "TemplateGetResponseV3": {
                                        "summary": "TemplateGetResponseV3",
                                        "value": {
                                            "status": "Success",
                                            "body": [
                                                {
                                                    "templateId": "b6418647-6397-47a8-8219-1bff5f7ddfe5",
                                                    "fiuId": "1d2a3127-53f3-4ce7-bb53-663886d330cf",
                                                    "name": "Mixed Analysis Template",
                                                    "insights": [
                                                        {
                                                            "insight": "static_fraud_flags",
                                                            "refKey": "fraud_flags",
                                                            "title": "Fraud Flags",
                                                            "description": "",
                                                            "insightId": "43b410fd-a148-4c17-80fe-6c0278965173"
                                                        },
                                                        {
                                                            "insight": "static_mutualfunds_holdings_summary",
                                                            "refKey": "mutualfunds_holdings_summary",
                                                            "title": "Mutual Funds holdings summary",
                                                            "description": "",
                                                            "insightId": "d28364e2-9f5b-4a6d-aa10-0528e2271991"
                                                        },
                                                        {
                                                            "insight": "configurable_trend_on_balances",
                                                            "refKey": "balance_analysis_monthly_max",
                                                            "title": "Balance Trend Analysis",
                                                            "description": "",
                                                            "params": {
                                                                "offsetMonths": 0,
                                                                "aggregateFunction": "MAX",
                                                                "groupBy": "MONTH"
                                                            },
                                                            "insightId": "58564db1-60c6-450f-93ba-8ca8b642c936"
                                                        }
                                                    ],
                                                    "categorisationMode": "INCLUSIVE",
                                                    "keywordMaps": [],
                                                    "isLineageRequired": false
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "auth",
                                                "message": "Unable to fetch FIU config. Please pass `x-client-id`, `x-client-secret`, `x-product-account-id` headers properly.",
                                                "details": {
                                                    "http_status": 401
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404 Template Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "TemplateNotFound": {
                                        "summary": "Template not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_template_not_found",
                                                "type": "validation",
                                                "message": "Template with id 593ee9b4-58ad-4e97-5df5-afc65a8b5970 not found",
                                                "details": {
                                                    "param": "templateId",
                                                    "error": "field not found"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ValidationError": {
                                        "summary": "Validation Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Request validation failed",
                                                "details": {
                                                    "field": "refId",
                                                    "error": "field required"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ServerError": {
                                        "summary": "Server Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Internal Server Error",
                                                "details": {
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Create Template",
                "description": "Create a template with a list Keyword Maps, Categorisation Mode and Configurable/Static Insights",
                "operationId": "create_template_v3_template_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "authorization",
                            "type": "string"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "x-product-instance-id",
                            "type": "string"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-id",
                            "type": "string"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-secret",
                            "type": "string"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_template_v3_template_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateCreateResponseV3"
                                },
                                "examples": {
                                    "TemplateCreateResponseV3": {
                                        "summary": "TemplateCreateResponseV3",
                                        "value": {
                                            "status": "Success",
                                            "body": {
                                                "templateId": "b6418647-6397-47a8-8219-1bff5f7ddfe5",
                                                "fiuId": "1d2a3127-53f3-4ce7-bb53-663886d330cf",
                                                "name": "Mixed Analysis Template",
                                                "insights": [
                                                    {
                                                        "insight": "static_fraud_flags",
                                                        "refKey": "fraud_flags",
                                                        "title": "Fraud Flags",
                                                        "description": "",
                                                        "insightId": "43b410fd-a148-4c17-80fe-6c0278965173"
                                                    },
                                                    {
                                                        "insight": "static_mutualfunds_holdings_summary",
                                                        "refKey": "mutualfunds_holdings_summary",
                                                        "title": "Mutual Funds holdings summary",
                                                        "description": "",
                                                        "insightId": "d28364e2-9f5b-4a6d-aa10-0528e2271991"
                                                    },
                                                    {
                                                        "insight": "configurable_trend_on_balances",
                                                        "refKey": "balance_analysis_monthly_max",
                                                        "title": "Balance Trend Analysis",
                                                        "description": "",
                                                        "params": {
                                                            "offsetMonths": 0,
                                                            "aggregateFunction": "MAX",
                                                            "groupBy": "MONTH"
                                                        },
                                                        "insightId": "58564db1-60c6-450f-93ba-8ca8b642c936"
                                                    }
                                                ],
                                                "categorisationMode": "INCLUSIVE",
                                                "keywordMaps": [],
                                                "isLineageRequired": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Empty Template Name": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "EmptyTemplateName": {
                                        "summary": "Empty template name",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_empty_template_name",
                                                "type": "validation",
                                                "message": "Template name cannot be empty",
                                                "details": {
                                                    "field": "name",
                                                    "error": "field required"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 No Insights Provided": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "NoInsightsProvided": {
                                        "summary": "No insights provided",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Insights must be provided in a template",
                                                "details": {
                                                    "field": "insights",
                                                    "error": "field required"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 No Valid Insights": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "NoValidInsights": {
                                        "summary": "No valid insights",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "At least one static, configurable, or aggregated insight must be provided in a template",
                                                "details": {
                                                    "field": "insights",
                                                    "error": "field required"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Duplicate Ref Key Config": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "DuplicateRefKeyConfig": {
                                        "summary": "Duplicate ref key config",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Use different ref_key for following, monthly_salary_credits config already exists: {conflicts}",
                                                "details": {
                                                    "field": "ref_key",
                                                    "error": "field duplicate"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Integrity Error": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "IntegrityError": {
                                        "summary": "Integrity error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Cannot create insights with same ref_key",
                                                "details": {
                                                    "field": "ref_key",
                                                    "error": "field duplicate"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Duplicate Ref Keys": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "DuplicateRefKeys": {
                                        "summary": "Duplicate ref keys",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_duplicate_ref_key",
                                                "type": "validation",
                                                "message": "Duplicate ref_keys found in request: {duplicate_ref_keys}",
                                                "details": {
                                                    "field": "ref_keys",
                                                    "error": "field duplicate"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Invalid Ref Key Format": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InvalidRefKeyFormat": {
                                        "summary": "Invalid ref key format",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_ref_key",
                                                "type": "validation",
                                                "message": "Invalid ref_key format: \"Monthly EOD Balance\". Must not contain spaces or special characters.",
                                                "details": {
                                                    "field": "ref_key",
                                                    "error": "invalid format"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Invalid Insight Name": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InvalidInsightName": {
                                        "summary": "Invalid insight name",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_insight_name",
                                                "type": "validation",
                                                "message": "Invalid insight name: {insight_name}. Must start with 'static_', 'configurable_', or 'aggregated_'",
                                                "details": {
                                                    "field": "insight_name",
                                                    "error": "invalid format"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },

                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "auth",
                                                "message": "Unable to fetch FIU config. Please pass `x-client-id`, `x-client-secret`, `x-product-account-id` headers properly.",
                                                "details": {
                                                    "http_status": 401
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404 Insight Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InsightNotFound": {
                                        "summary": "Insight not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_insight_not_found",
                                                "type": "validation",
                                                "message": "Insights not found (case-sensitive): {missing_insights}",
                                                "details": {
                                                    "field": "insights",
                                                    "error": "field not found"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ValidationError": {
                                        "summary": "Validation Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Request validation failed",
                                                "details": {
                                                    "total_errors": 1,
                                                    "error_message": [
                                                        "field required -> refId"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500 Insight Master Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InsightMasterNotFound": {
                                        "summary": "Insight master not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_insight_not_found",
                                                "type": "internal",
                                                "message": "Unexpected error: Insight master not found after validation: {item.insight}",
                                                "details": {
                                                    "field": "insight_master",
                                                    "error": "field not found"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500 Server Error": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ServerError": {
                                        "summary": "Server Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Internal Server Error",
                                                "details": {
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/fiData": {
            "post": {
                "tags": [
                    "Data ingestion"
                ],
                "summary": "Create FIData block with mixed types support (FIU Webhook)",
                "description": "Call this API with the data received from FIP's notification as payload, to create an FI DataBlock. Supports multiple account types in single request.",
                "operationId": "create_fi_data_v3_fiData_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Refid",
                            "type": "string"
                        },
                        "name": "refId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "authorization",
                            "type": "string"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "x-product-instance-id",
                            "type": "string"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-id",
                            "type": "string"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-secret",
                            "type": "string"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "FI Data as defined by ReBIT schema",
                                "$ref": "#/components/schemas/FIDataListV2"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FIDataBlockCreateResponse"
                                },
                                "examples": {
                                    "FIDataBlockCreateResponseV3": {
                                        "summary": "FIDataBlockCreateResponseV3",
                                        "value": {
                                            "status": "Success",
                                            "body": {
                                                "refId": "test-single-account-15",
                                                "fiSchema": [
                                                    "deposit"
                                                ],
                                                "expiryDate": "2025-07-06 07:03:12.312"
                                            }
                                        }
                                    },
                                    "FIDataBlockCreateResponseV3Multiple": {
                                        "summary": "FIDataBlockCreateResponseV3Multiple",
                                        "value": {
                                            "status": "Success",
                                            "body": {
                                                "refId": "testing_fi_data_map_105",
                                                "fiSchema": [
                                                    "deposit",
                                                    "deposit"
                                                ],
                                                "expiryDate": "2025-07-06 06:56:38.713"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Invalid Ref ID Format": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InvalidRefIdFormat": {
                                        "summary": "Invalid refId format",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_ref_id",
                                                "type": "validation",
                                                "message": "Invalid refId: must not contain spaces or special characters.",
                                                "details": {
                                                    "param": "refId",
                                                    "http_status": 400
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Missing Linked Acc Ref": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "MissingLinkedAccRef": {
                                        "summary": "Missing linked account reference",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_missing_linked_acc_ref",
                                                "type": "validation",
                                                "message": "Linked acc ref is required for each account",
                                                "details": {
                                                    "param": "linked_acc_ref",
                                                    "http_status": 400
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "auth",
                                                "message": "Unable to fetch FIU config. Please pass `x-client-id`, `x-client-secret`, `x-product-account-id` headers properly.",
                                                "details": {
                                                    "http_status": 401
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ValidationError": {
                                        "summary": "Validation Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Request validation failed",
                                                "details": {
                                                    "total_errors": 1,
                                                    "error_message": [
                                                        "field required -> refId"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500 Transaction Service Error": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "TransactionServiceError": {
                                        "summary": "Transaction service error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "{error message from service}",
                                                "details": {
                                                    "param": "service",
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500 Internal Server Error": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "UnexpectedError": {
                                        "summary": "Unexpected error",
                                        "value": {
                                            "code": "internal_error",
                                            "type": "internal",
                                            "message": "Internal Server Error",
                                            "details": {
                                                "param": "exception_type",
                                                "http_status": 500
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/insight": {
            "get": {
                "tags": [
                    "Insight generation"
                ],
                "summary": "Get Insights",
                "description": "Call this API with the report-id to get the created Insights",
                "operationId": "get_insights_v3_insight_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Report ID for which insights are needed",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "reportId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "authorization",
                            "type": "string"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "x-product-instance-id",
                            "type": "string"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-id",
                            "type": "string"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-secret",
                            "type": "string"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInsightsResponseV3"
                                },
                                "examples": {
                                    "GetInsightsResponseV3": {
                                        "summary": "GetInsightsResponseV3",
                                        "value": {
                                            "status": "Success",
                                            "version": "0.72.0",
                                            "statusDescription": null,
                                            "body": {
                                                "accounts": [
                                                    {
                                                        "accountIdentifierKey": "8a467ff9-51a5-4c8e-9cec-396d56acda13",
                                                        "insights": [
                                                            {
                                                                "indicatorName": "name",
                                                                "status": "success",
                                                                "value": "REDACTED",
                                                                "error": null,
                                                                "meta": null
                                                            },
                                                            {
                                                                "indicatorName": "bank_account_number",
                                                                "status": "error",
                                                                "value": null,
                                                                "error": {
                                                                    "code": "ins_data_missing",
                                                                    "type": "insight",
                                                                    "message": "No data available",
                                                                    "details": null
                                                                },
                                                                "meta": null
                                                            },
                                                            {
                                                                "indicatorName": "current_quarterly_average_eod_balance",
                                                                "status": "success",
                                                                "value": 83162.22222222222,
                                                                "error": null,
                                                                "meta": null
                                                            },
                                                            {
                                                                "indicatorName": "previous_quarterly_average_eod_balance",
                                                                "status": "success",
                                                                "value": 84035.55555555556,
                                                                "error": null,
                                                                "meta": null
                                                            },
                                                            {
                                                                "indicatorName": "total_credits",
                                                                "status": "success",
                                                                "value": 18,
                                                                "error": null,
                                                                "meta": null
                                                            },
                                                            {
                                                                "indicatorName": "total_debits",
                                                                "status": "success",
                                                                "value": 14,
                                                                "error": null,
                                                                "meta": null
                                                            }
                                                        ],
                                                        "status": "success",
                                                        "reason": "NA",
                                                        "fiType": "deposit"
                                                    }
                                                ],
                                                "aggregatedInsights": [
                                                    {
                                                        "indicatorName": "trend_on_balances",
                                                        "status": "success",
                                                        "value": [
                                                            {
                                                                "year": 2024,
                                                                "month": 1,
                                                                "value": 0.0
                                                            },
                                                            {
                                                                "year": 2024,
                                                                "month": 2,
                                                                "value": -3500.0
                                                            },
                                                            {
                                                                "year": 2024,
                                                                "month": 3,
                                                                "value": -6700.0
                                                            },
                                                            {
                                                                "year": 2024,
                                                                "month": 4,
                                                                "value": 3500.0
                                                            },
                                                            {
                                                                "year": 2024,
                                                                "month": 5,
                                                                "value": -39550.0
                                                            },
                                                            {
                                                                "year": 2024,
                                                                "month": 6,
                                                                "value": 90450.0
                                                            }
                                                        ],
                                                        "error": null,
                                                                "meta": {
                                                            "refKey": "trend_on_balances",
                                                            "lastNMonths": null,
                                                                    "offsetMonths": 0,
                                                            "aggregateFunction": null,
                                                            "transactionType": null,
                                                            "transactionMode": null,
                                                            "transactionCategory": null,
                                                            "transactionSubcategory": null,
                                                            "transactionCategoryExclusions": null,
                                                            "transactionSubcategoryExclusions": null,
                                                            "startDate": null,
                                                            "endDate": null,
                                                            "periodicity": null,
                                                            "minAmount": null,
                                                                    "groupBy": "MONTH",
                                                            "day": 1,
                                                            "top": null,
                                                            "salaryType": null,
                                                            "amountVarianceThreshold": 0.2,
                                                            "dateVarianceDays": 7,
                                                            "minRecurringMonths": 4,
                                                            "internalIndicatorName": "trend_on_balances"
                                                        },
                                                        "aggregatedInsightMeta": null
                                                    },
                                                    {
                                                        "indicatorName": "opening_balance",
                                                        "status": "error",
                                                        "value": null,
                                                        "error": {
                                                            "code": "ins_data_missing",
                                                            "type": "insight",
                                                            "message": "No data available",
                                                            "details": null
                                                        },
                                                        "meta": null,
                                                        "aggregatedInsightMeta": null
                                                    }
                                                ],
                                                "additionalInfo": {
                                                    "id": 123456
                                                }
                                            }
                                        }
                                    },
                                    "GetInsightsResponseV3Queued": {
                                        "summary": "GetInsightsResponseV3Queued",
                                        "value": {
                                            "status": "Success",
                                            "version": "0.72.0",
                                            "statusDescription": null,
                                            "body": {
                                                "reportId": "0d37eba5-d86c-4ef9-94dd-4894e7f9c961",
                                                "status": "queued",
                                                "reason": "NA"
                                            }
                                        }
                                    },
                                    "GetInsightsResponseV3InProgress": {
                                        "summary": "GetInsightsResponseV3InProgress",
                                        "value": {
                                            "status": "Success",
                                            "version": "0.72.0",
                                            "statusDescription": null,
                                            "body": {
                                                "reportId": "0d37eba5-d86c-4ef9-94dd-4894e7f9c961",
                                                "status": "in-progress",
                                                "reason": "NA"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Invalid Report Id": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InvalidReportId": {
                                        "summary": "Invalid report ID",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_ref_id",
                                                "type": "validation",
                                                "message": "Invalid report id",
                                                "details": {
                                                    "param": "reportId",
                                                    "http_status": 400
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "auth",
                                                "message": "Unable to fetch FIU config. Please pass `x-client-id`, `x-client-secret`, `x-product-account-id` headers properly.",
                                                "details": {
                                                    "http_status": 401
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404 Report Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ReportNotFound": {
                                        "summary": "Report not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_report_not_found",
                                                "type": "validation",
                                                "message": "Unable to find report with id: 293ee9b4-58ad-4e97-9df5-afc65a8b5970",
                                                "details": {
                                                    "param": "reportId",
                                                    "http_status": 404
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                   "ValidationError": {
                                        "summary": "Validation Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Request validation failed",
                                                "details": {
                                                    "total_errors": 1,
                                                    "error_message": [
                                                        "field required -> refId"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ServerError": {
                                        "summary": "Server Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Internal Server Error",
                                                "details": {
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Insight generation"
                ],
                "summary": "Create Insights",
                "description": "Call this API with the template-id received from Setu along with a refId, to trigger an Report generation job. The created Report will be shared via a notification to the endpoint configured by the FIU.This API will respond with a report-id, which can also be used to fetch the generated Report.",
                "operationId": "process_insights_v3_insight_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/QueueBindingKey",
                            "default": "priority"
                        },
                        "name": "x-request-type",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "authorization",
                            "type": "string"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "x-product-instance-id",
                            "type": "string"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-id",
                            "type": "string"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "x-client-secret",
                            "type": "string"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_process_insights_v3_insight_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportJobCreateResponse"
                                },
                                "examples": {
                                    "ReportJobCreateResponseV3": {
                                        "summary": "ReportJobCreateResponseV3",
                                        "value": {
                                            "status": "Success",
                                            "body": {
                                                "reportId": "05a5a389-b922-4197-be03-b309cdcc575a",
                                                "status": "queued",
                                                "reason": "NA"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "auth",
                                                "message": "Unable to fetch FIU config. Please pass `x-client-id`, `x-client-secret`, `x-product-account-id` headers properly.",
                                                "details": {
                                                    "http_status": 401
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                   "ValidationError": {
                                        "summary": "Validation Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "Request validation failed",
                                                "details": {
                                                    "total_errors": 1,
                                                    "error_message": [
                                                        "field required -> refId"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ServerError": {
                                        "summary": "Server Error",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Internal Server Error",
                                                "details": {
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400 Invalid RefId Format": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "InvalidRefIdFormat": {
                                        "summary": "Invalid refId format",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_ref_id",
                                                "type": "validation",
                                                "message": "Invalid refId: must not contain spaces or special characters.",
                                                "details": {
                                                    "param": "refId",
                                                    "http_status": 400
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404 RefId Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "RefIdNotFound": {
                                        "summary": "Ref ID not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_ref_id_not_found",
                                                "type": "validation",
                                                "message": "Unable to find refId: 293ee9b4-58ad-4e97-9df5-afc65a8b5970",
                                                "details": {
                                                    "param": "refId",
                                                    "http_status": 404
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404 Template Not Found": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "TemplateNotFound": {
                                        "summary": "Template not found",
                                        "value": {
                                            "timestamp": "2025-08-20 11:02:49.657",
                                            "version": "0.78.1",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_template_not_found",
                                                "type": "validation",
                                                "message": "Unable to find template with id: 453ee9b4-58ad-4e97-9df5-afc65a8b5970",
                                                "details": {
                                                    "param": "templateId",
                                                    "http_status": 404
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/pdfData/supported_banks": {
            "get": {
                "tags": [
                    "Fi Data Ingestion (PDF)"
                ],
                "summary": "Get supported banks for PDF processing",
                "description": "Retrieve a list of banks supported for PDF statement processing",
                "operationId": "get_supported_banks_v2_pdf_supported_banks_get",
                "parameters": [
                    {
                        "name": "x-client-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-client-secret",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-product-instance-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "SupportedBanksResponse": {
                                        "summary": "SupportedBanksResponse",
                                        "value": [
                                            "HDFC Bank",
                                            "ICICI Bank",
                                            "Kotak Mahindra Bank"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/pdfData": {
            "post": {
                "tags": [
                    "Fi Data Ingestion (PDF)"
                ],
                "summary": "Upload PDF bank statement for processing",
                "description": "Call this API to upload a PDF bank statement for processing and data extraction",
                "operationId": "upload_pdf_statement_v2_pdf_post",
                "parameters": [
                    {
                        "name": "refId",
                        "in": "query",
                        "description": "Reference ID for tracking the PDF upload",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-client-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-client-secret",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-product-instance-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "bankName": {
                                        "type": "string",
                                        "description": "Name of the bank that issued the statement"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password for the PDF if it's encrypted"
                                    },
                                    "dataFile": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "PDF bank statement file"
                                    }
                                },
                                "required": [
                                    "bankName",
                                    "dataFile"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "PDF uploaded and processing started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FIDataBlockCreateResponse"
                                },
                                "examples": {
                                    "PDFUploadSuccessResponse": {
                                        "summary": "PDFUploadSuccessResponse",
                                        "value": {
                                            "status": "Success",
                                            "body": {
                                                "dataId": "57ee04ae-6540-4ba9-a314-082c9f9cd793",
                                                "fiSchema": "pdf",
                                                "expiryDate": "2023-03-11T06:52:36.457745"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid PDF or unsupported bank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/purge": {
            "delete": {
                "tags": [
                    "Purge"
                ],
                "summary": "Purge data by reference ID",
                "description": "Call this API to delete all data associated with a specific reference ID (refId). This operation cannot be undone.",
                "operationId": "purge_data_v2_purge_delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Reference ID"
                        },
                        "name": "refId",
                        "in": "query",
                        "description": "The reference ID for which data should be purged"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "authorization"
                        },
                        "name": "authorization",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "x-product-instance-id"
                        },
                        "name": "x-product-instance-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "x-client-id"
                        },
                        "name": "x-client-id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "x-client-secret"
                        },
                        "name": "x-client-secret",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Purge",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurgeSuccessResponse"
                                },
                                "examples": {
                                    "PurgeSuccessResponse": {
                                        "summary": "PurgeSuccessResponse",
                                        "value": {
                                            "status": "Success",
                                            "version": "0.72.0",
                                            "statusDescription": null,
                                            "body": {
                                                "insight_reports": 1,
                                                "depositTransactions": 1,
                                                "equitiesTransactions": 0,
                                                "etfTransactions": 0,
                                                "mutualFundsTransactions": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "RefIdMissingError": {
                                        "summary": "RefIdMissingError",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_ref_id_not_found",
                                                "type": "validation",
                                                "message": "ref_id parameter is null/empty/missing",
                                                "details": {
                                                    "ref_id": null,
                                                    "http_status": 400,
                                                    "param": "refId"
                                                }
                                            }
                                        }
                                    },
                                    "InvalidRefIdError": {
                                        "summary": "InvalidRefIdError",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_invalid_ref_id",
                                                "type": "validation",
                                                "message": "ref_id contains invalid characters",
                                                "details": {
                                                    "ref_id": "invalid@ref#id",
                                                    "http_status": 400,
                                                    "param": "refId"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "AuthenticationError": {
                                        "summary": "Authentication Error",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "auth_unauthorized",
                                                "type": "authentication",
                                                "message": "Authentication failure",
                                                "details": {
                                                    "http_status": 401,
                                                    "required_headers": ["x-client-id", "x-client-secret"]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "RefId Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "RefIdNotFound": {
                                        "summary": "Unable to find ref_id",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_ref_id_not_found",
                                                "type": "validation",
                                                "message": "Unable to find ref_id: 8c1adc7c-dfa8-4f57-8378-29fe07cfe81",
                                                "details": {
                                                    "ref_id": "8c1adc7c-dfa8-4f57-8378-29fe07cfe81",
                                                    "http_status": 404,
                                                    "param": "refId"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "ValidationErrorResponse": {
                                        "summary": "ValidationErrorResponse",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "api_validation_error",
                                                "type": "validation",
                                                "message": "FastAPI validation error",
                                                "details": {
                                                    "http_status": 422,
                                                    "validation_errors": ["field required"]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "RefIdValidationError": {
                                        "summary": "RefIdValidationError",
                                        "value": {
                                            "timestamp": "2025-08-19 15:40:02.161",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Error validating ref_id: Connection timeout",
                                                "details": {
                                                    "ref_id": "64881e41-217f-4a94-af93-bad9b4221bd2",
                                                    "http_status": 500,
                                                    "param": "refId"
                                                }
                                            }
                                        }
                                    },
                                    "RepositoryPurgeError": {
                                        "summary": "RepositoryPurgeError",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Database repository purge error",
                                                "details": {
                                                    "http_status": 500,
                                                    "operation": "repository_purge"
                                                }
                                            }
                                        }
                                    },
                                    "GeneralServerError": {
                                        "summary": "GeneralServerError",
                                        "value": {
                                            "timestamp": "2025-08-20 06:48:20.058",
                                            "version": "0.83.0",
                                            "txnid": "",
                                            "error": {
                                                "code": "internal_error",
                                                "type": "internal",
                                                "message": "Unhandled exceptions",
                                                "details": {
                                                    "http_status": 500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/deposit/transactions": {
        "post": {
          "description": "List deposit transactions",
          "tags": ["List transactions"],
          "summary": "List deposit transactions",
          "operationId": "list-deposit-transactions",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requests.ListDepositTransactionsRequest"
                }
              }
            },
            "description": "Query details",
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responses.ListDepositTransactionsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/responses.Error" }
                }
              }
            }
          }
        }
        },
        "/v1/equities/transactions": {
        "post": {
          "description": "List equities transactions",
          "tags": ["List transactions"],
          "summary": "List equities transactions",
          "operationId": "list-equities-transactions",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requests.ListEquitiesTransactionsRequest"
                }
              }
            },
            "description": "Query details",
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responses.ListEquitiesTransactionsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/responses.Error" }
                }
              }
            }
          }
        }
        },
        "/v1/etf/transactions": {
        "post": {
          "description": "List etf transactions",
          "tags": ["List transactions"],
          "summary": "List etf transactions",
          "operationId": "list-etf-transactions",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requests.ListETFTransactionsRequest"
                }
              }
            },
            "description": "Query details",
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responses.ListETFTransactionsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/responses.Error" }
                }
              }
            }
          }
        }
        },
        "/v1/mutual-funds/transactions": {
        "post": {
          "description": "List mutual-funds transactions",
          "tags": ["List transactions"],
          "summary": "List mutual-funds transactions",
          "operationId": "list-mutual-funds-transactions",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requests.ListMutualFundsTransactionsRequest"
                }
              }
            },
            "description": "Query details",
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responses.ListMutualFundsTransactionsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/responses.Error" }
                }
              }
            }
          }
        }
        }
    },
    "components": {
      "schemas": {
          "AccountInsight": {
              "title": "AccountInsight",
              "required": [
                  "indicatorName"
              ],
              "type": "object",
              "properties": {
                  "indicatorName": {
                      "title": "Indicatorname",
                      "type": "string"
                  },
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "enum": ["success", "error"]
                  },
                  "value": {
                      "title": "Value",
                      "type": "object",
                      "nullable": true,
                      "description": "The computed insight value, null when status is error"
                  },
                  "error": {
                      "title": "Error",
                      "type": "object",
                      "nullable": true,
                      "description": "Error details when status is error, null when status is success",
                      "properties": {
                          "code": {
                              "type": "string",
                              "enum": ["ins_data_missing", "ins_insufficient_history", "ins_invalid_format", "ins_computation_error"],
                              "description": "Error code indicating the type of error"
                          },
                          "type": {
                              "type": "string",
                              "enum": ["insight"],
                              "description": "Error type classification"
                          },
                          "message": {
                              "type": "string",
                              "description": "Human-readable error message"
                          },
                          "details": {
                              "type": "object",
                              "nullable": true,
                              "description": "Additional error details"
                          }
                      }
                  },
                  "meta": {
                      "title": "Meta",
                      "type": "object",
                      "nullable": true,
                      "description": "Additional metadata for the insight"
                  }
              }
          },
          "AccountInsights": {
              "title": "AccountInsights",
              "required": [
                  "accountIdentifierKey",
                  "insights"
              ],
              "type": "object",
              "properties": {
                  "accountIdentifierKey": {
                      "title": "Accountidentifierkey",
                      "type": "string"
                  },
                  "insights": {
                      "title": "Insights",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountInsight"
                      }
                  },
                  "status": {
                      "title": "Status",
                      "type": "string"
                  },
                  "reason": {
                      "title": "Reason",
                      "type": "string"
                  },
                  "fiType": {
                      "title": "Fitype",
                      "type": "string"
                  }
              }
          },
          "AccountTS": {
              "title": "AccountTS",
              "required": [
                  "linkedAccRef",
                  "version"
              ],
              "type": "object",
              "properties": {
                  "profile": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Profile"
                  },
                  "summary": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Summary"
                  },
                  "transactions": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Transactions"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "maskedAccNumber": {
                      "title": "Maskedaccnumber",
                      "type": "string"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string"
                  },
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "default": "etf"
                  }
              }
          },
          "AccountType": {
              "title": "AccountType",
              "enum": [
                  "SAVINGS",
                  "CURRENT"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "AggregatedInsight": {
              "title": "AggregatedInsight",
              "required": [
                  "indicatorName"
              ],
              "type": "object",
              "properties": {
                  "indicatorName": {
                      "title": "Indicatorname",
                      "type": "string"
                  },
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "enum": ["success", "error"]
                  },
                  "value": {
                      "title": "Value",
                      "type": "object",
                      "nullable": true,
                      "description": "The computed aggregated insight value, null when status is error"
                  },
                  "error": {
                      "title": "Error",
                      "type": "object",
                      "nullable": true,
                      "description": "Error details when status is error, null when status is success",
                      "properties": {
                          "code": {
                              "type": "string",
                              "enum": ["ins_data_missing", "ins_insufficient_history", "ins_invalid_format", "ins_computation_error"],
                              "description": "Error code indicating the type of error"
                          },
                          "type": {
                              "type": "string",
                              "enum": ["insight"],
                              "description": "Error type classification"
                          },
                          "message": {
                              "type": "string",
                              "description": "Human-readable error message"
                          },
                          "details": {
                              "type": "object",
                              "nullable": true,
                              "description": "Additional error details"
                          }
                      }
                  },
                  "meta": {
                      "$ref": "#/components/schemas/AggregatedInsightMeta"
                  }
              }
          },
          "AggregatedInsightMeta": {
              "title": "AggregatedInsightMeta",
              "required": [
                  "totalAccountsProcessed",
                  "failedAccounts",
                  "accountsProcessed",
                  "status",
                  "message"
              ],
              "type": "object",
              "properties": {
                  "totalAccountsProcessed": {
                      "title": "Totalaccountsprocessed",
                      "type": "integer"
                  },
                  "failedAccounts": {
                      "title": "Failedaccounts",
                      "type": "integer"
                  },
                  "accountsProcessed": {
                      "title": "Accountsprocessed",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "status": {
                      "title": "Status",
                      "type": "string"
                  },
                  "message": {
                      "title": "Message",
                      "type": "string"
                  }
              }
          },
          "AggregationFunctions": {
              "title": "AggregationFunctions",
              "enum": [
                  "MIN",
                  "MAX",
                  "AVG",
                  "SUM",
                  "SD",
                  "COUNT",
                  "CV",
                  "AVG_RATIO",
                  "INC",
                  "DEC",
                  "COUNT_LT_10",
                  "MEDIAN"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "Body_create_template_v3_template_post": {
              "title": "Body_create_template_v3_template_post",
              "required": [
                  "name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "keywordMaps": {
                      "title": "List of ids of keyword category maps to be included in the template",
                      "type": "array",
                      "items": {
                          "type": "integer"
                      },
                      "default": []
                  },
                  "categorisationMode": {
                      "title": "Categorisation Mode to use client provided maps strictly or inclusively",
                      "$ref": "#/components/schemas/CategorisationMode",
                      "default": "INCLUSIVE"
                  },
                  "insights": {
                      "title": "List of insights to be included in the template",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/InsightRequestV3"
                      },
                      "default": []
                  },
                  "isLineageRequired": {
                      "title": "Islineagerequired",
                      "type": "boolean",
                      "default": false
                  }
              }
          },
          "Body_process_insights_v3_insight_post": {
              "title": "Body_process_insights_v3_insight_post",
              "required": [
                  "templateId"
              ],
              "type": "object",
              "properties": {
                  "templateId": {
                      "title": "Template ID for which insights are needed",
                      "type": "string",
                      "format": "uuid"
                  },
                  "refId": {
                      "title": "Refid",
                      "type": "string"
                  },
                  "additionalInfo": {
                      "title": "Additionalinfo",
                      "type": "object",
                      "additionalProperties": {
                          "anyOf": [
                              {
                                  "type": "string"
                              },
                              {
                                  "type": "integer"
                              },
                              {
                                  "type": "number"
                              }
                          ]
                      }
                  },
                  "filters": {
                      "title": "Filters for PFM",
                      "$ref": "#/components/schemas/CreateInsightsFilters",
                      "default": {}
                  }
              }
          },
          "CategorisationMode": {
              "title": "CategorisationMode",
              "enum": [
                  "STRICT",
                  "STRICT_W_SALARY",
                  "KW_INCLUSIVE",
                  "INCLUSIVE"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "Category": {
              "title": "Category",
              "enum": [
                  "Cash Deposit",
                  "Cash Withdrawal",
                  "Bounced Cheque",
                  "Salary",
                  "Bank Charges",
                  "Credit Card",
                  "Dividend",
                  "Education",
                  "Entertainment",
                  "Food & Drinks",
                  "Health",
                  "Investments",
                  "Jewellery",
                  "Loan",
                  "Pension",
                  "Reimbursement",
                  "Shopping",
                  "Sports",
                  "Subsidy",
                  "Tax",
                  "Travel and Transport",
                  "Utility Payments",
                  "Others",
                  "Gifts, Celebrations",
                  "Charity",
                  "Business Expense",
                  "Interest",
                  "Transfer",
                  "Transfer to Individual",
                  "Cash Withdrawals",
                  "Rent",
                  "Vehicle",
                  "Groceries",
                  "Transportation",
                  "Insurance",
                  "Refunds",
                  "Professional Services",
                  "Counseling",
                  "Donations",
                  "Fines",
                  "Bonus",
                  "Business Income",
                  "Cheque",
                  "Bill",
                  "Gaming",
                  "Other Bank Charge",
                  "Fund Transfer",
                  "Account Verification",
                  "Self Transfer",
                  "ECS Bounces",
                  "Penalties"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "CreateInsightsFilters": {
              "title": "CreateInsightsFilters",
              "type": "object",
              "properties": {
                  "dateRange": {
                      "$ref": "#/components/schemas/DateRangeFilter"
                  },
                  "accounts": {
                      "title": "Accounts",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "DateRangeFilter": {
              "title": "DateRangeFilter",
              "required": [
                  "startDate",
                  "endDate"
              ],
              "type": "object",
              "properties": {
                  "startDate": {
                      "title": "Startdate",
                      "type": "string",
                      "format": "date"
                  },
                  "endDate": {
                      "title": "Enddate",
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "DepositData": {
              "title": "DepositData",
              "required": [
                  "account"
              ],
              "type": "object",
              "properties": {
                  "account": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Account"
                  }
              }
          },
          "ETFData": {
              "title": "ETFData",
              "required": [
                  "account"
              ],
              "type": "object",
              "properties": {
                  "account": {
                      "title": "Account",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Account"
                          },
                          {
                              "$ref": "#/components/schemas/AccountTS"
                          }
                      ]
                  }
              }
          },
          "EquitiesData": {
              "title": "EquitiesData",
              "required": [
                  "account"
              ],
              "type": "object",
              "properties": {
                  "account": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Account"
                  }
              }
          },
          "EquityCategory": {
              "title": "EquityCategory",
              "enum": [
                  "EQUITY"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "ErrorResponse": {
              "title": "ErrorResponse",
              "required": [
                  "timestamp",
                  "version",
                  "txnid",
                  "error"
              ],
              "type": "object",
              "properties": {
                  "timestamp": {
                      "title": "Timestamp",
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the error occurred"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "description": "API version"
                  },
                  "txnid": {
                      "title": "Transaction ID",
                      "type": "string",
                      "description": "Transaction identifier"
                  },
                  "error": {
                      "title": "Error",
                      "type": "object",
                      "required": [
                          "code",
                          "type",
                          "message"
                      ],
                      "properties": {
                          "code": {
                              "title": "Error Code",
                              "$ref": "#/components/schemas/ErrorCode",
                              "description": "Unique identifier for specific error conditions"
                          },
                          "type": {
                              "title": "Error Type",
                              "$ref": "#/components/schemas/ErrorType",
                              "description": "Category of the error"
                          },
                          "message": {
                              "title": "Error Message",
                              "type": "string",
                              "description": "Human-readable description of the error"
                          },
                          "details": {
                              "title": "Error Details",
                              "type": "object",
                              "description": "Additional error context",
                              "additionalProperties": true
                          }
                      }
                  }
              }
          },

          "FIDataBlockCreateResponse": {
              "title": "FIDataBlockCreateResponse",
              "required": [
                  "body"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "Success"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "0.74.0"
                  },
                  "statusDescription": {
                      "title": "Statusdescription",
                      "type": "string"
                  },
                  "body": {
                      "$ref": "#/components/schemas/FIDataBlockResponse"
                  }
              }
          },
          "FIDataBlockResponse": {
              "title": "FIDataBlockResponse",
              "required": [
                  "fiSchema"
              ],
              "type": "object",
              "properties": {
                  "dataId": {
                      "title": "Dataid",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "uuid"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "refId": {
                      "title": "Refid",
                      "type": "string"
                  },
                  "fiSchema": {
                      "title": "Fischema",
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              }
                          }
                      ]
                  },
                  "expiryDate": {
                      "title": "Expirydate",
                      "type": "string",
                      "format": "date-time"
                  }
              }
          },
          "FIDataListV2": {
              "title": "FIDataListV2",
              "anyOf": [
                  {
                      "$ref": "#/components/schemas/DepositData"
                  },
                  {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DepositData"
                      }
                  },
                  {
                      "$ref": "#/components/schemas/MutualFundsData"
                  },
                  {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/MutualFundsData"
                      }
                  },
                  {
                      "$ref": "#/components/schemas/EquitiesData"
                  },
                  {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/EquitiesData"
                      }
                  },
                  {
                      "$ref": "#/components/schemas/ETFData"
                  },
                  {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ETFData"
                      }
                  },
                  {
                      "type": "array",
                      "items": {
                          "anyOf": [
                              {
                                  "$ref": "#/components/schemas/DepositData"
                              },
                              {
                                  "$ref": "#/components/schemas/MutualFundsData"
                              },
                              {
                                  "$ref": "#/components/schemas/EquitiesData"
                              },
                              {
                                  "$ref": "#/components/schemas/ETFData"
                              }
                          ]
                      }
                  }
              ]
          },
          "FIUConfig": {
              "title": "FIUConfig",
              "required": [
                  "fiuId",
                  "account_ids_path"
              ],
              "type": "object",
              "properties": {
                  "fiuId": {
                      "title": "Fiuid",
                      "type": "string"
                  },
                  "notificationEndpoint": {
                      "title": "Notificationendpoint",
                      "type": "string"
                  },
                  "webhookId": {
                      "title": "Webhookid",
                      "type": "string"
                  },
                  "expiryDelta": {
                      "title": "Expirydelta",
                      "type": "integer",
                      "default": 30
                  },
                  "bertSalaryEnabled": {
                      "title": "Bertsalaryenabled",
                      "type": "boolean",
                      "default": true
                  },
                  "account_ids_path": {
                      "title": "Account Ids Path",
                      "type": "string"
                  },
                  "webhookAuthMechanism": {
                      "title": "Webhookauthmechanism",
                      "type": "string",
                      "default": "None"
                  },
                  "webhookAuthParams": {
                      "title": "Webhookauthparams",
                      "type": "object",
                      "default": {}
                  },
                  "isVLLMInferenceEnabled": {
                      "title": "Isvllminferenceenabled",
                      "type": "boolean",
                      "default": false
                  },
                  "transactionTTLDays": {
                      "title": "Transactionttldays",
                      "type": "integer"
                  },
                  "isCounterpartyEnabled": {
                      "title": "Iscounterpartyenabled",
                      "type": "boolean",
                      "default": true
                  },
                  "vpaCategorisationEnabled": {
                      "title": "Vpacategorisationenabled",
                      "type": "boolean",
                      "default": true
                  }
              }
          },
          "GetInsightsResponseBodyV3": {
              "title": "GetInsightsResponseBodyV3",
              "required": [
                  "accounts"
              ],
              "type": "object",
              "properties": {
                  "accounts": {
                      "title": "Accounts",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountInsights"
                      }
                  },
                  "aggregatedInsights": {
                      "title": "Aggregatedinsights",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AggregatedInsight"
                      }
                  },
                  "additionalInfo": {
                      "title": "Additional Information",
                      "type": "object",
                      "description": "Flexible JSON object containing additional metadata or information"
                  }
              }
          },
          "GetInsightsResponseV3": {
              "title": "GetInsightsResponseV3",
              "required": [
                  "body"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "Success"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "0.74.0"
                  },
                  "statusDescription": {
                      "title": "Statusdescription",
                      "type": "string"
                  },
                  "body": {
                      "$ref": "#/components/schemas/GetInsightsResponseBodyV3"
                  }
              }
          },
          "GroupBy": {
              "title": "GroupBy",
              "enum": [
                  "DAY",
                  "MONTH",
                  "YEAR",
                  "QUARTER",
                  "HALF_YEAR"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "HTTPValidationError": {
              "title": "HTTPValidationError",
              "type": "object",
              "properties": {
                  "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ValidationError"
                      }
                  }
              }
          },
          "HoldersType": {
              "title": "HoldersType",
              "enum": [
                  "SINGLE",
                  "JOINT",
                  "PROPRIETOR",
                  "OTHERS"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "InsightParam": {
              "title": "InsightParam",
              "type": "object",
              "properties": {
                  "refKey": {
                      "title": "Refkey",
                      "type": "string"
                  },
                  "lastNMonths": {
                      "title": "Lastnmonths",
                      "type": "integer"
                  },
                  "offsetMonths": {
                      "title": "Offsetmonths",
                      "type": "integer",
                      "default": 0
                  },
                  "aggregateFunction": {
                      "$ref": "#/components/schemas/AggregationFunctions"
                  },
                  "transactionType": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__TransactionType"
                  },
                  "transactionMode": {
                      "title": "Transactionmode",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/TransferMode"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/TransferMode"
                              }
                          }
                      ]
                  },
                  "transactionCategory": {
                      "title": "Transactioncategory",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/Category"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/Category"
                              }
                          }
                      ]
                  },
                  "transactionSubcategory": {
                      "title": "Transactionsubcategory",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SubCategory"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/SubCategory"
                              }
                          }
                      ]
                  },
                  "transactionCategoryExclusions": {
                      "title": "Transactioncategoryexclusions",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/Category"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/Category"
                              }
                          }
                      ]
                  },
                  "transactionSubcategoryExclusions": {
                      "title": "Transactionsubcategoryexclusions",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SubCategory"
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/SubCategory"
                              }
                          }
                      ]
                  },
                  "startDate": {
                      "title": "Startdate",
                      "type": "string",
                      "format": "date"
                  },
                  "endDate": {
                      "title": "Enddate",
                      "type": "string",
                      "format": "date"
                  },
                  "periodicity": {
                      "$ref": "#/components/schemas/Periodicity"
                  },
                  "minAmount": {
                      "title": "Minamount",
                      "type": "number"
                  },
                  "groupBy": {
                      "$ref": "#/components/schemas/GroupBy"
                  },
                  "day": {
                      "title": "Day",
                      "type": "integer"
                  },
                  "top": {
                      "title": "Top",
                      "type": "integer"
                  },
                  "salaryType": {
                      "$ref": "#/components/schemas/SalaryType"
                  },
                  "amountVarianceThreshold": {
                      "title": "Amountvariancethreshold",
                      "type": "number",
                      "default": 0.2
                  },
                  "dateVarianceDays": {
                      "title": "Datevariancedays",
                      "type": "integer",
                      "default": 7
                  }
              }
          },
          "InsightRequestV3": {
              "title": "InsightRequestV3",
              "required": [
                  "insight",
                  "refKey"
              ],
              "type": "object",
              "properties": {
                  "insight": {
                      "title": "Insight",
                      "type": "string",
                      "description": "Insight name, must start with 'static_' or 'configurable_'"
                  },
                  "refKey": {
                      "title": "Refkey",
                      "type": "string",
                      "description": "Reference key for the insight"
                  },
                  "title": {
                      "title": "Title",
                      "type": "string",
                      "description": "Title for the insight",
                      "default": ""
                  },
                  "description": {
                      "title": "Description",
                      "type": "string",
                      "description": "Description for the insight",
                      "default": ""
                  },
                  "params": {
                      "title": "Params",
                      "type": "object",
                      "description": "Parameters for configurable insights",
                      "default": {}
                  }
              }
          },
          "InsightResponseV3": {
              "title": "InsightResponseV3",
              "required": [
                  "insight",
                  "refKey",
                  "title",
                  "insightId"
              ],
              "type": "object",
              "properties": {
                  "insight": {
                      "title": "Insight",
                      "type": "string",
                      "description": "Full insight name with prefix"
                  },
                  "refKey": {
                      "title": "Refkey",
                      "type": "string",
                      "description": "Reference key for the insight"
                  },
                  "title": {
                      "title": "Title",
                      "type": "string",
                      "description": "Title for the insight"
                  },
                  "description": {
                      "title": "Description",
                      "type": "string",
                      "description": "Description for the insight",
                      "default": ""
                  },
                  "params": {
                      "title": "Params",
                      "$ref": "#/components/schemas/InsightParam",
                      "description": "Parameters for configurable insights"
                  },
                  "insightId": {
                      "title": "Insightid",
                      "type": "string",
                      "description": "Insight master ID",
                      "format": "uuid"
                  }
              }
          },
          "KeywordMap": {
              "title": "KeywordMap",
              "required": [
                  "name",
                  "map"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Id",
                      "type": "integer"
                  },
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "map": {
                      "title": "Map",
                      "type": "object",
                      "additionalProperties": {
                          "anyOf": [
                              {
                                  "type": "array",
                                  "items": {
                                      "anyOf": [
                                          {
                                              "type": "string"
                                          },
                                          {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              }
                                          }
                                      ]
                                  }
                              },
                              {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      }
                                  }
                              }
                          ]
                      }
                  }
              }
          },
          "MutualFundsData": {
              "title": "MutualFundsData",
              "required": [
                  "account"
              ],
              "type": "object",
              "properties": {
                  "account": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Account"
                  }
              }
          },
          "NotificationSchema": {
              "title": "NotificationSchema",
              "required": [
                  "type",
                  "reportId"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "description": "Type of the notification"
                  },
                  "timestamp": {
                      "title": "Timestamp",
                      "type": "string",
                      "description": "Timestamp of sending the notification",
                      "format": "date-time"
                  },
                  "reportId": {
                      "title": "Reportid",
                      "type": "string",
                      "description": "Reference ID of the insights generation report",
                      "format": "uuid"
                  },
                  "success": {
                      "title": "Success",
                      "type": "boolean",
                      "description": "Signifies whether the notification is a successful one or not",
                      "default": true
                  },
                  "data": {
                      "title": "Data",
                      "type": "object",
                      "description": "Data for the notification"
                  },
                  "error": {
                      "title": "Error",
                      "type": "object",
                      "description": "Error for the notification"
                  }
              }
          },
          "Pending": {
              "title": "Pending",
              "required": [
                  "amount"
              ],
              "type": "object",
              "properties": {
                  "transactionType": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__TransactionType"
                  },
                  "amount": {
                      "title": "Amount",
                      "type": "number"
                  }
              }
          },
          "Periodicity": {
              "title": "Periodicity",
              "enum": [
                  "MONTHLY",
                  "DAILY"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "QueueBindingKey": {
              "title": "QueueBindingKey",
              "enum": [
                  "batch",
                  "priority"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "ReportJobCreateResponse": {
              "title": "ReportJobCreateResponse",
              "required": [
                  "body"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "Success"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "0.74.0"
                  },
                  "statusDescription": {
                      "title": "Statusdescription",
                      "type": "string"
                  },
                  "body": {
                      "$ref": "#/components/schemas/ReportJobResponseBody"
                  }
              }
          },
          "ReportJobStatus": {
              "title": "ReportJobStatus",
              "enum": [
                  "in-progress",
                  "complete",
                  "failed",
                  "queued",
                  "pdf_in_progress"
              ],
              "type": "string",
              "description": "Status of the report generation job"
          },
          "ReportJobResponseBody": {
              "title": "ReportJobResponseBody",
              "required": [
                  "reportId",
                  "status"
              ],
              "type": "object",
              "properties": {
                  "reportId": {
                      "title": "Reportid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "status": {
                      "title": "Status",
                      "$ref": "#/components/schemas/ReportJobStatus"
                  },
                  "reason": {
                      "title": "Reason",
                      "type": "string",
                      "default": "NA"
                  }
              }
          },
          "SalaryType": {
              "title": "SalaryType",
              "enum": [
                  "TRUESALARY",
                  "PREDICTEDSALARY",
                  "ANY"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SchemeCategory": {
              "title": "SchemeCategory",
              "enum": [
                  "MULTI_CAP_FUND",
                  "LARGE_CAP_FUND",
                  "LARGE_and_MID_CAP_FUND",
                  "MIDCAP_FUND",
                  "SMALL_CAP_FUND",
                  "DIVIDEND_YIELD_FUND",
                  "VALUE_FUND",
                  "CONTRA_FUND",
                  "FOCUSED_FUND",
                  "SECTORAL_OR_THEMATIC",
                  "ELSS",
                  "OVERNIGHT_FUND",
                  "LIQUID_FUND",
                  "ULTRA_SHORT_DURATION_FUND",
                  "LOW_DURATION_FUND",
                  "MONEY_MARKET_FUND",
                  "SHORT_DURATION_FUND",
                  "MEDIUM_DURATION_FUND",
                  "MEDIUM_TO_LONG_DURATION_FUND",
                  "LONG_DURATION_FUND",
                  "DYNAMIC_BOND",
                  "CORPORATE_BOND_FUND",
                  "CREDIT_RISK_FUND",
                  "BANKING_AND_PSU_FUND",
                  "GILT_FUND",
                  "GILT_FUND_WITH_10_YEAR_CONSTANT_DURATION",
                  "FLOATER_FUND",
                  "CONSERVATIVE_HYBRID_FUND",
                  "BALANCED_HYBRID_FUND",
                  "AGGRESSIVE_HYBRID_FUND",
                  "DYNAMIC_ASSET_ALLOCATION_OR_BALANCED_ADVANTAGE",
                  "MULTI_ASSET_ALLOCATION",
                  "ARBITRAGE_FUND",
                  "EQUITY_SAVINGS",
                  "RETIREMENT_FUND",
                  "CHILDREN'S_FUND",
                  "INDEX_FUNDS_OR_ETFS",
                  "FOFS_OVERSEAS_OR_DOMESTIC"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SchemeOption": {
              "title": "SchemeOption",
              "enum": [
                  "REINVEST",
                  "PAYOUT",
                  "GROWTH_TYPE"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SchemePlan": {
              "title": "SchemePlan",
              "enum": [
                  "DIRECT",
                  "REGULAR"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SchemeTypes": {
              "title": "SchemeTypes",
              "enum": [
                  "EQUITY_SCHEMES",
                  "DEBT_SCHEMES",
                  "HYBRID_SCHEMES",
                  "SOLUTION_ORIENTED_SCHEMES",
                  "OTHER_SCHEMES"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "StatusTypes": {
              "title": "StatusTypes",
              "enum": [
                  "ACTIVE",
                  "INACTIVE"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SubCategory": {
              "title": "SubCategory",
              "enum": [
                  "Gaming",
                  "Vacation",
                  "Food",
                  "Alcohol",
                  "Medical",
                  "Personal Care",
                  "Bank Interest",
                  "Bonds",
                  "Fixed Deposit",
                  "Crypto",
                  "Equities",
                  "Insurance",
                  "Mutual Fund",
                  "Apparel",
                  "Electronics",
                  "Electricity",
                  "Water",
                  "Groceries",
                  "Household",
                  "Rent Payment",
                  "Vehicle",
                  "Fuel",
                  "Handhelds",
                  "Cable",
                  "Internet",
                  "Subscriptions",
                  "Recreation, Vacation",
                  "Concerts",
                  "Public Transportation",
                  "Parking",
                  "Hotels",
                  "Salary Received",
                  "Salary Paid",
                  "P2P Inward",
                  "P2P Outward",
                  "P2M Inward",
                  "P2M Outward",
                  "P2A Inward",
                  "P2A Outward",
                  "Wallet",
                  "Inward Bounce Charges",
                  "Outward Bounce Charges",
                  "Inward Reversal",
                  "Outward Reversal",
                  "Loan",
                  "CreditCardSettlement",
                  "Education",
                  "Movie",
                  "Drinks",
                  "Travel",
                  "Hospital",
                  "Insurance Debit",
                  "Stationery",
                  "Sports",
                  "Tax Liability",
                  "Hotels and Stays",
                  "Tolls",
                  "Cab",
                  "Bus",
                  "Train",
                  "Flight",
                  "Courier",
                  "Rental",
                  "Purchase",
                  "Phone Recharge",
                  "Gas",
                  "Internet and DTH",
                  "Rent Paid",
                  "Vehicle Maintenance Expense",
                  "Professional Services",
                  "Cleaning Services",
                  "Charity Donation",
                  "Religious Donation",
                  "Political Donation",
                  "Fines",
                  "Loan EMI Paid",
                  "Loan Credit",
                  "Outward ECS Bounce Charges",
                  "Inward ECS Bounce Charges",
                  "Inward ECS Reversal",
                  "Outward ECS Reversal",
                  "Insufficient Balance Charges",
                  "Minimum Balance Charges"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "SummaryFacility": {
              "title": "SummaryFacility",
              "enum": [
                  "OD",
                  "CC",
                  "CURRENT",
                  "SAVING"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "TemplateCreateResponseV3": {
              "title": "TemplateCreateResponseV3",
              "required": [
                  "body"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "Success"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "0.74.0"
                  },
                  "statusDescription": {
                      "title": "Statusdescription",
                      "type": "string"
                  },
                  "body": {
                      "$ref": "#/components/schemas/TemplateV3"
                  }
              }
          },
          "TemplateGetResponseV3": {
              "title": "TemplateGetResponseV3",
              "required": [
                  "body"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "Success"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "0.74.0"
                  },
                  "statusDescription": {
                      "title": "Statusdescription",
                      "type": "string"
                  },
                  "body": {
                      "title": "Body",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/TemplateV3"
                      }
                  }
              }
          },
          "TemplateV3": {
              "title": "TemplateV3",
              "required": [
                  "templateId",
                  "fiuId",
                  "name",
                  "insights"
              ],
              "type": "object",
              "properties": {
                  "templateId": {
                      "title": "Templateid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "fiuId": {
                      "title": "Fiuid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "insights": {
                      "title": "Insights",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/InsightResponseV3"
                      }
                  },
                  "categorisationMode": {
                      "$ref": "#/components/schemas/CategorisationMode"
                  },
                  "keywordMaps": {
                      "title": "Keywordmaps",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/KeywordMap"
                      }
                  },
                  "isLineageRequired": {
                      "title": "Islineagerequired",
                      "type": "boolean",
                      "default": false
                  },
                  "task": {
                      "title": "Task",
                      "type": "string"
                  },
                  "model": {
                      "title": "Model",
                      "type": "string"
                  }
              }
          },
          "TransactionMode": {
              "title": "TransactionMode",
              "enum": [
                  "CASH",
                  "ATM",
                  "CARD",
                  "UPI",
                  "FT",
                  "OTHERS",
                  "NEFT",
                  "IMPS",
                  "ONLINE",
                  "CHEQUE",
                  "BRANCH",
                  "INB",
                  "CARD_PAYMENT"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "TransactionSymbol": {
              "title": "TransactionSymbol",
              "enum": [
                  "BSE",
                  "NSE",
                  "OTHERS"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "TransactionTS": {
              "title": "TransactionTS",
              "required": [
                  "txnId",
                  "companyName",
                  "txnDateTime",
                  "isin",
                  "equityCategory",
                  "type",
                  "units"
              ],
              "type": "object",
              "properties": {
                  "txnId": {
                      "title": "Txnid",
                      "type": "string"
                  },
                  "orderId": {
                      "title": "Orderid",
                      "type": "string"
                  },
                  "companyName": {
                      "title": "Companyname",
                      "type": "string"
                  },
                  "txnDateTime": {
                      "title": "Txndatetime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "exchange": {
                      "$ref": "#/components/schemas/TransactionSymbol"
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "equityCategory": {
                      "$ref": "#/components/schemas/EquityCategory"
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "exchangeRate": {
                      "title": "Exchangerate",
                      "type": "string"
                  },
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__TransactionType"
                  },
                  "units": {
                      "title": "Units",
                      "type": "integer"
                  }
              }
          },
          "TransactionWithTSDetails": {
              "title": "TransactionWithTSDetails",
              "required": [
                  "type",
                  "mode",
                  "amount",
                  "currentBalance",
                  "transactionTimestamp",
                  "txnId"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__TransactionType"
                  },
                  "mode": {
                      "$ref": "#/components/schemas/TransactionMode"
                  },
                  "amount": {
                      "title": "Amount",
                      "type": "number"
                  },
                  "currentBalance": {
                      "title": "Currentbalance",
                      "type": "string"
                  },
                  "transactionTimestamp": {
                      "title": "Transactiontimestamp",
                      "type": "string",
                      "format": "date-time"
                  },
                  "valueDate": {
                      "title": "Valuedate",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "date"
                          },
                          {
                              "type": "string",
                              "format": "date-time"
                          }
                      ]
                  },
                  "txnId": {
                      "title": "Txnid",
                      "type": "string"
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "reference": {
                      "title": "Reference",
                      "type": "string"
                  },
                  "id": {
                      "title": "Id",
                      "type": "string"
                  },
                  "fipId": {
                      "title": "Fipid",
                      "type": "string"
                  },
                  "categoryL1": {
                      "title": "Categoryl1",
                      "type": "string"
                  },
                  "categoryL2": {
                      "title": "Categoryl2",
                      "type": "string"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "transactionMode": {
                      "title": "Transactionmode",
                      "type": "string"
                  },
                  "refId": {
                      "title": "Refid",
                      "type": "string"
                  },
                  "categoryManual": {
                      "title": "Categorymanual",
                      "type": "string"
                  },
                  "counterparty": {
                      "title": "Counterparty",
                      "type": "string"
                  }
              }
          },
          "TransferMode": {
              "title": "TransferMode",
              "enum": [
                  "ACH",
                  "CASH",
                  "CHEQUE",
                  "CMS",
                  "ECS",
                  "IMPS",
                  "NEFT",
                  "RTGS",
                  "TPT",
                  "UPI",
                  "POS",
                  "OTHERS",
                  "ONLINE"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "ValidationError": {
              "title": "ValidationError",
              "required": [
                  "loc",
                  "msg",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "loc": {
                      "title": "Location",
                      "type": "array",
                      "items": {
                          "anyOf": [
                              {
                                  "type": "string"
                              },
                              {
                                  "type": "integer"
                              }
                          ]
                      }
                  },
                  "msg": {
                      "title": "Message",
                      "type": "string"
                  },
                  "type": {
                      "title": "Error Type",
                      "type": "string"
                  }
              }
          },
          "VaultSecret": {
              "title": "VaultSecret",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/VaultSecretData"
                  }
              }
          },
          "VaultSecretData": {
              "title": "VaultSecretData",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/FIUConfig"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__Account": {
              "title": "Account",
              "required": [
                  "maskedAccNumber"
              ],
              "type": "object",
              "properties": {
                  "profile": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Profile"
                  },
                  "summary": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Summary"
                  },
                  "transactions": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Transactions"
                  },
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "default": "deposit"
                  },
                  "maskedAccNumber": {
                      "title": "Maskedaccnumber",
                      "type": "string"
                  },
                  "masked_account_number": {
                      "title": "Masked Account Number",
                      "type": "string"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "fipId": {
                      "title": "Fipid",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__Holder": {
              "title": "Holder",
              "required": [
                  "name",
                  "ckycCompliance"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "dob": {
                      "title": "Dob",
                      "type": "string",
                      "format": "date"
                  },
                  "mobile": {
                      "title": "Mobile",
                      "type": "string"
                  },
                  "nominee": {
                      "title": "Nominee",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__HoldingNominee"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "landline": {
                      "title": "Landline",
                      "type": "string"
                  },
                  "address": {
                      "title": "Address",
                      "type": "string"
                  },
                  "email": {
                      "title": "Email",
                      "type": "string"
                  },
                  "pan": {
                      "title": "Pan",
                      "type": "string"
                  },
                  "ckycCompliance": {
                      "title": "Ckyccompliance",
                      "type": "boolean"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__Holders": {
              "title": "Holders",
              "required": [
                  "holder"
              ],
              "type": "object",
              "properties": {
                  "holder": {
                      "title": "Holder",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Holder"
                      }
                  },
                  "type": {
                      "$ref": "#/components/schemas/HoldersType"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__HoldingNominee": {
              "title": "HoldingNominee",
              "enum": [
                  "REGISTERED",
                  "NOT-REGISTERED"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__deposit__Profile": {
              "title": "Profile",
              "type": "object",
              "properties": {
                  "holders": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Holders"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__Summary": {
              "title": "Summary",
              "required": [
                  "currentBalance"
              ],
              "type": "object",
              "properties": {
                  "pending": {
                      "$ref": "#/components/schemas/Pending"
                  },
                  "currentBalance": {
                      "title": "Currentbalance",
                      "type": "string"
                  },
                  "currency": {
                      "title": "Currency",
                      "type": "string"
                  },
                  "exchgeRate": {
                      "title": "Exchgerate",
                      "type": "string"
                  },
                  "balanceDateTime": {
                      "title": "Balancedatetime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "type": {
                      "$ref": "#/components/schemas/AccountType"
                  },
                  "branch": {
                      "title": "Branch",
                      "type": "string"
                  },
                  "facility": {
                      "$ref": "#/components/schemas/SummaryFacility"
                  },
                  "ifscCode": {
                      "title": "Ifsccode",
                      "type": "string"
                  },
                  "micrCode": {
                      "title": "Micrcode",
                      "type": "string"
                  },
                  "openingDate": {
                      "title": "Openingdate",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "date"
                          },
                          {
                              "type": "string",
                              "format": "date-time"
                          }
                      ]
                  },
                  "currentODLimit": {
                      "title": "Currentodlimit",
                      "type": "string"
                  },
                  "drawingLimit": {
                      "title": "Drawinglimit",
                      "type": "string"
                  },
                  "status": {
                      "$ref": "#/components/schemas/StatusTypes"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__Transaction": {
              "title": "Transaction",
              "required": [
                  "type",
                  "mode",
                  "amount",
                  "currentBalance",
                  "transactionTimestamp",
                  "txnId"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__TransactionType"
                  },
                  "mode": {
                      "$ref": "#/components/schemas/TransactionMode"
                  },
                  "amount": {
                      "title": "Amount",
                      "type": "number"
                  },
                  "currentBalance": {
                      "title": "Currentbalance",
                      "type": "string"
                  },
                  "transactionTimestamp": {
                      "title": "Transactiontimestamp",
                      "type": "string",
                      "format": "date-time"
                  },
                  "valueDate": {
                      "title": "Valuedate",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "date"
                          },
                          {
                              "type": "string",
                              "format": "date-time"
                          }
                      ]
                  },
                  "txnId": {
                      "title": "Txnid",
                      "type": "string"
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "reference": {
                      "title": "Reference",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__deposit__TransactionType": {
              "title": "TransactionType",
              "enum": [
                  "CREDIT",
                  "DEBIT",
                  "REVERSAL"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__deposit__Transactions": {
              "title": "Transactions",
              "type": "object",
              "properties": {
                  "transaction": {
                      "title": "Transaction",
                      "anyOf": [
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/TransactionWithTSDetails"
                              }
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/amon_amarth__schema__rebit__deposit__Transaction"
                              }
                          }
                      ]
                  },
                  "startDate": {
                      "title": "Startdate",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "date"
                          },
                          {
                              "type": "string",
                              "format": "date-time"
                          }
                      ]
                  },
                  "endDate": {
                      "title": "Enddate",
                      "anyOf": [
                          {
                              "type": "string",
                              "format": "date"
                          },
                          {
                              "type": "string",
                              "format": "date-time"
                          }
                      ]
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Account": {
              "title": "Account",
              "required": [
                  "linkedAccRef",
                  "version"
              ],
              "type": "object",
              "properties": {
                  "profile": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Profile"
                  },
                  "summary": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Summary"
                  },
                  "transactions": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Transactions"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "maskedDematId": {
                      "title": "Maskeddematid",
                      "type": "string"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string"
                  },
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "default": "equities"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Holder": {
              "title": "Holder",
              "required": [
                  "name",
                  "mobile",
                  "dematId"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "dob": {
                      "title": "Dob",
                      "type": "string",
                      "format": "date"
                  },
                  "mobile": {
                      "title": "Mobile",
                      "type": "integer"
                  },
                  "nominee": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__HoldingNominee"
                  },
                  "dematId": {
                      "title": "Dematid",
                      "type": "string"
                  },
                  "landline": {
                      "title": "Landline",
                      "type": "string"
                  },
                  "address": {
                      "title": "Address",
                      "type": "string"
                  },
                  "email": {
                      "title": "Email",
                      "type": "string"
                  },
                  "pan": {
                      "title": "Pan",
                      "type": "string"
                  },
                  "kycCompliance": {
                      "title": "Kyccompliance",
                      "type": "boolean"
                  },
                  "brokerName": {
                      "title": "Brokername",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Holders": {
              "title": "Holders",
              "required": [
                  "holder"
              ],
              "type": "object",
              "properties": {
                  "holder": {
                      "title": "Holder",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Holder"
                      }
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Holding": {
              "title": "Holding",
              "required": [
                  "isin",
                  "units"
              ],
              "type": "object",
              "properties": {
                  "issuerName": {
                      "title": "Issuername",
                      "type": "string"
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "units": {
                      "title": "Units",
                      "type": "integer"
                  },
                  "lastTradedPrice": {
                      "title": "Lasttradedprice",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__HoldingMode": {
              "title": "HoldingMode",
              "enum": [
                  "DEMAT",
                  "PHYSICAL"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__equities__HoldingNominee": {
              "title": "HoldingNominee",
              "enum": [
                  "REGISTERED",
                  "NOT-REGISTERED"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__equities__Holdings": {
              "title": "Holdings",
              "required": [
                  "holding"
              ],
              "type": "object",
              "properties": {
                  "holding": {
                      "title": "Holding",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Holding"
                      }
                  },
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__HoldingMode"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Investment": {
              "title": "Investment",
              "required": [
                  "holdings"
              ],
              "type": "object",
              "properties": {
                  "holdings": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Holdings"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Profile": {
              "title": "Profile",
              "required": [
                  "holders"
              ],
              "type": "object",
              "properties": {
                  "holders": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Holders"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Summary": {
              "title": "Summary",
              "required": [
                  "investment"
              ],
              "type": "object",
              "properties": {
                  "investment": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Investment"
                  },
                  "currentValue": {
                      "title": "Currentvalue",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__Transaction": {
              "title": "Transaction",
              "required": [
                  "txnId",
                  "companyName",
                  "transactionDateTime",
                  "isin",
                  "equityCategory",
                  "type",
                  "units"
              ],
              "type": "object",
              "properties": {
                  "txnId": {
                      "title": "Txnid",
                      "type": "string"
                  },
                  "orderId": {
                      "title": "Orderid",
                      "type": "string"
                  },
                  "companyName": {
                      "title": "Companyname",
                      "type": "string"
                  },
                  "transactionDateTime": {
                      "title": "Transactiondatetime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "exchange": {
                      "$ref": "#/components/schemas/TransactionSymbol"
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "equityCategory": {
                      "$ref": "#/components/schemas/EquityCategory"
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "rate": {
                      "title": "Rate",
                      "type": "string"
                  },
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__TransactionType"
                  },
                  "units": {
                      "title": "Units",
                      "type": "integer"
                  }
              }
          },
          "amon_amarth__schema__rebit__equities__TransactionType": {
              "title": "TransactionType",
              "enum": [
                  "BUY",
                  "SELL",
                  "BONUS",
                  "SPLIT",
                  "DIVIDEND",
                  "RIGHTS",
                  "OTHERS"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__equities__Transactions": {
              "title": "Transactions",
              "required": [
                  "startDate",
                  "endDate"
              ],
              "type": "object",
              "properties": {
                  "transaction": {
                      "title": "Transaction",
                      "anyOf": [
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/amon_amarth__schema__rebit__equities__Transaction"
                              }
                          },
                          {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/TransactionTS"
                              }
                          }
                      ]
                  },
                  "startDate": {
                      "title": "Startdate",
                      "type": "string",
                      "format": "date"
                  },
                  "endDate": {
                      "title": "Enddate",
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Account": {
              "title": "Account",
              "required": [
                  "linkedAccRef",
                  "version"
              ],
              "type": "object",
              "properties": {
                  "profile": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Profile"
                  },
                  "summary": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Summary"
                  },
                  "transactions": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Transactions"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "maskedDematId": {
                      "title": "Maskeddematid",
                      "type": "string"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string"
                  },
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "default": "etf"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Holder": {
              "title": "Holder",
              "required": [
                  "dematId",
                  "name",
                  "pan",
                  "address",
                  "mobile"
              ],
              "type": "object",
              "properties": {
                  "dematId": {
                      "title": "Dematid",
                      "type": "string"
                  },
                  "name": {
                      "title": "Name",
                      "type": "string"
                  },
                  "pan": {
                      "title": "Pan",
                      "type": "string"
                  },
                  "dob": {
                      "title": "Dob",
                      "type": "string",
                      "format": "date"
                  },
                  "landline": {
                      "title": "Landline",
                      "type": "string"
                  },
                  "address": {
                      "title": "Address",
                      "type": "string"
                  },
                  "nominee": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__HoldingNominee"
                  },
                  "email": {
                      "title": "Email",
                      "type": "string"
                  },
                  "mobile": {
                      "title": "Mobile",
                      "type": "string"
                  },
                  "kycCompliance": {
                      "title": "Kyccompliance",
                      "type": "boolean"
                  },
                  "brokerName": {
                      "title": "Brokername",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Holders": {
              "title": "Holders",
              "required": [
                  "holder"
              ],
              "type": "object",
              "properties": {
                  "holder": {
                      "title": "Holder",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Holder"
                      }
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Holding": {
              "title": "Holding",
              "required": [
                  "units",
                  "isin",
                  "isinDescription"
              ],
              "type": "object",
              "properties": {
                  "folioNo": {
                      "title": "Foliono",
                      "type": "string"
                  },
                  "units": {
                      "title": "Units",
                      "type": "integer"
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "nav": {
                      "title": "Nav",
                      "type": "string"
                  },
                  "lastNavDate": {
                      "title": "Lastnavdate",
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__HoldingNominee": {
              "title": "HoldingNominee",
              "enum": [
                  "REGISTERED",
                  "NOT-REGISTERED"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__etf__Holdings": {
              "title": "Holdings",
              "required": [
                  "holding"
              ],
              "type": "object",
              "properties": {
                  "holding": {
                      "title": "Holding",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Holding"
                      }
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Investment": {
              "title": "Investment",
              "type": "object",
              "properties": {
                  "holdings": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Holdings"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Profile": {
              "title": "Profile",
              "required": [
                  "holders"
              ],
              "type": "object",
              "properties": {
                  "holders": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Holders"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Summary": {
              "title": "Summary",
              "required": [
                  "investment",
                  "currentValue"
              ],
              "type": "object",
              "properties": {
                  "investment": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Investment"
                  },
                  "currentValue": {
                      "title": "Currentvalue",
                      "type": "number"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__Transaction": {
              "title": "Transaction",
              "required": [
                  "txnId",
                  "isin",
                  "isinDescription",
                  "transactionDateTime",
                  "units",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "txnId": {
                      "title": "Txnid",
                      "type": "string"
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "transactionDateTime": {
                      "title": "Transactiondatetime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "units": {
                      "title": "Units",
                      "type": "number"
                  },
                  "amount": {
                      "title": "Amount",
                      "type": "number"
                  },
                  "nav": {
                      "title": "Nav",
                      "type": "number"
                  },
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__TransactionType"
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "brokerCode": {
                      "title": "Brokercode",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__etf__TransactionType": {
              "title": "TransactionType",
              "enum": [
                  "BUY",
                  "SELL",
                  "BOUNS",
                  "SPLIT",
                  "OTHERS"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__etf__Transactions": {
              "title": "Transactions",
              "required": [
                  "startDate",
                  "endDate"
              ],
              "type": "object",
              "properties": {
                  "transaction": {
                      "title": "Transaction",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__etf__Transaction"
                      },
                      "default": []
                  },
                  "startDate": {
                      "title": "Startdate",
                      "type": "string",
                      "format": "date"
                  },
                  "endDate": {
                      "title": "Enddate",
                      "type": "string",
                      "format": "date"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Account": {
              "title": "Account",
              "required": [
                  "linkedAccRef"
              ],
              "type": "object",
              "properties": {
                  "profile": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Profile"
                  },
                  "summary": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Summary"
                  },
                  "transactions": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Transactions"
                  },
                  "linkedAccRef": {
                      "title": "Linkedaccref",
                      "type": "string"
                  },
                  "version": {
                      "title": "Version",
                      "type": "string",
                      "default": "1.0.0"
                  },
                  "type": {
                      "title": "Type",
                      "type": "string",
                      "default": "mutualfunds"
                  },
                  "maskedDematID": {
                      "title": "Maskeddematid",
                      "type": "string",
                      "description": "Demat ID assigned or issued to investor"
                  },
                  "maskedFolioNo": {
                      "title": "Maskedfoliono",
                      "type": "string",
                      "description": "Folio Number of Investor"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Holder": {
              "title": "Holder",
              "required": [
                  "name",
                  "address",
                  "pan"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Name",
                      "type": "string",
                      "description": "Name of primary holder operating the account"
                  },
                  "dob": {
                      "title": "Dob",
                      "type": "string",
                      "description": "Date of birth of primary account holder",
                      "format": "date"
                  },
                  "mobile": {
                      "title": "Mobile",
                      "type": "string",
                      "description": "Primary mobile number of account holder"
                  },
                  "nominee": {
                      "title": "Nominee",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__HoldingNominee"
                          },
                          {
                              "type": "string"
                          }
                      ],
                      "description": "This field will indicate whether a nominee is registered"
                  },
                  "dematId": {
                      "title": "Dematid",
                      "type": "string",
                      "description": "Demat ID assigned or issued to investor"
                  },
                  "folioNo": {
                      "title": "Foliono",
                      "type": "string",
                      "description": "Folio Number of Investor"
                  },
                  "landline": {
                      "title": "Landline",
                      "type": "string",
                      "description": "Landline number of primary account holder"
                  },
                  "address": {
                      "title": "Address",
                      "type": "string",
                      "description": "Address of primary account holder"
                  },
                  "email": {
                      "title": "Email",
                      "type": "string",
                      "description": "Email ID of primary account holder"
                  },
                  "pan": {
                      "title": "Pan",
                      "type": "string",
                      "description": "PAN number of primary account holder"
                  },
                  "kycCompliance": {
                      "title": "Kyccompliance",
                      "type": "string",
                      "description": "KYC status whether its completed or pending"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Holders": {
              "title": "Holders",
              "required": [
                  "holder"
              ],
              "type": "object",
              "properties": {
                  "holder": {
                      "title": "Holder",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Holder"
                      }
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Holding": {
              "title": "Holding",
              "required": [
                  "amc",
                  "registrar",
                  "closingUnits",
                  "lienUnits",
                  "nav",
                  "navDate",
                  "lockinUnits"
              ],
              "type": "object",
              "properties": {
                  "amc": {
                      "title": "Amc",
                      "type": "string",
                      "description": "Name of asset management company associated with investment"
                  },
                  "registrar": {
                      "title": "Registrar",
                      "type": "string",
                      "description": "Trust or institution registering and maintaining the detailed records"
                  },
                  "schemeCode": {
                      "title": "Schemecode",
                      "type": "string",
                      "description": "Code of scheme chosen by person for the investment"
                  },
                  "schemeOption": {
                      "title": "Schemeoption",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SchemeOption"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "schemeTypes": {
                      "title": "Schemetypes",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SchemeTypes"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "schemeCategory": {
                      "title": "Schemecategory",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SchemeCategory"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string",
                      "description": "International Securities Identification Number"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string",
                      "description": "Long Name of ISIN"
                  },
                  "ucc": {
                      "title": "Ucc",
                      "type": "string",
                      "description": "Unique Client Code generated by Stock Exchanges"
                  },
                  "amfiCode": {
                      "title": "Amficode",
                      "type": "string",
                      "description": "AMFI code associated with investment"
                  },
                  "folioNo": {
                      "title": "Foliono",
                      "type": "string",
                      "description": "Unique folio number associated with investment"
                  },
                  "FatcaStatus": {
                      "title": "Fatcastatus",
                      "type": "string",
                      "description": "FATCA compliance status"
                  },
                  "closingUnits": {
                      "title": "Closingunits",
                      "type": "string",
                      "description": "Units allotted in folio till date"
                  },
                  "lienUnits": {
                      "title": "Lienunits",
                      "type": "string",
                      "description": "The number of units which have been marked as Lien"
                  },
                  "nav": {
                      "title": "Nav",
                      "type": "number",
                      "description": "NAV is current market rate of security held as on date"
                  },
                  "navDate": {
                      "title": "Navdate",
                      "type": "string",
                      "description": "Last Available NAV date for the scheme of investment",
                      "format": "date"
                  },
                  "lockinUnits": {
                      "title": "Lockinunits",
                      "type": "string",
                      "description": "Units which are locked and not available for sale"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__HoldingMode": {
              "title": "HoldingMode",
              "enum": [
                  "DEMAT",
                  "PHYSICAL"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__mutual_funds__HoldingNominee": {
              "title": "HoldingNominee",
              "enum": [
                  "REGISTERED",
                  "NOT-REGISTERED"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__mutual_funds__Holdings": {
              "title": "Holdings",
              "type": "object",
              "properties": {
                  "holding": {
                      "title": "Holding",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Holding"
                      }
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Investment": {
              "title": "Investment",
              "required": [
                  "holdings"
              ],
              "type": "object",
              "properties": {
                  "holdings": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Holdings"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Profile": {
              "title": "Profile",
              "required": [
                  "holders"
              ],
              "type": "object",
              "properties": {
                  "holders": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Holders"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Summary": {
              "title": "Summary",
              "required": [
                  "investment"
              ],
              "type": "object",
              "properties": {
                  "investment": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Investment"
                  },
                  "costValue": {
                      "title": "Costvalue",
                      "type": "string",
                      "description": "Principal or Actual amount of investment"
                  },
                  "currentValue": {
                      "title": "Currentvalue",
                      "type": "string",
                      "description": "Current value of investment as on date"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__Transaction": {
              "title": "Transaction",
              "required": [
                  "txnId",
                  "amc",
                  "registrar",
                  "nav",
                  "navDate",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "txnId": {
                      "title": "Txnid",
                      "type": "string",
                      "description": "Transaction ID recorded or captured for investment made"
                  },
                  "amc": {
                      "title": "Amc",
                      "type": "string",
                      "description": "Asset Management company which is operating the fund"
                  },
                  "registrar": {
                      "title": "Registrar",
                      "type": "string"
                  },
                  "schemeCode": {
                      "title": "Schemecode",
                      "type": "string"
                  },
                  "schemePlan": {
                      "title": "Schemeplan",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/SchemePlan"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "isin": {
                      "title": "Isin",
                      "type": "string"
                  },
                  "amfiCode": {
                      "title": "Amficode",
                      "type": "string"
                  },
                  "ucc": {
                      "title": "Ucc",
                      "type": "string"
                  },
                  "amount": {
                      "title": "Amount",
                      "type": "string"
                  },
                  "nav": {
                      "title": "Nav",
                      "type": "number"
                  },
                  "navDate": {
                      "title": "Navdate",
                      "type": "string",
                      "format": "date"
                  },
                  "type": {
                      "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__TransactionType"
                  },
                  "lockInFlag": {
                      "title": "Lockinflag",
                      "type": "string"
                  },
                  "lockInDays": {
                      "title": "Lockindays",
                      "type": "string"
                  },
                  "mode": {
                      "title": "Mode",
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__HoldingMode"
                          },
                          {
                              "type": "string"
                          }
                      ]
                  },
                  "narration": {
                      "title": "Narration",
                      "type": "string"
                  },
                  "isinDescription": {
                      "title": "Isindescription",
                      "type": "string"
                  },
                  "units": {
                      "title": "Units",
                      "type": "string"
                  },
                  "transactionDate": {
                      "title": "Transactiondate",
                      "type": "string"
                  }
              }
          },
          "amon_amarth__schema__rebit__mutual_funds__TransactionType": {
              "title": "TransactionType",
              "enum": [
                  "BUY",
                  "SELL",
                  "OTHERS"
              ],
              "type": "string",
              "description": "An enumeration."
          },
          "amon_amarth__schema__rebit__mutual_funds__Transactions": {
              "title": "Transactions",
              "required": [
                  "startDate",
                  "endDate"
              ],
              "type": "object",
              "properties": {
                  "transaction": {
                      "title": "Transaction",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/amon_amarth__schema__rebit__mutual_funds__Transaction"
                      },
                      "default": []
                  },
                  "startDate": {
                      "title": "Startdate",
                      "type": "string",
                      "description": "The date from which the Financial Information was requested",
                      "format": "date"
                  },
                  "endDate": {
                      "title": "Enddate",
                      "type": "string",
                      "description": "The date till which the Financial Information was requested",
                      "format": "date"
                  }
              }
          },
          "PurgeSuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "default": "Success"
                },
                "version": {
                    "type": "string"
                },
                "statusDescription": {
                    "type": "string",
                    "nullable": true
                },
                "body": {
                    "$ref": "#/components/schemas/PurgeResultBody"
                }
            },
            "required": [
                "status",
                "body"
            ],
            "title": "PurgeSuccessResponse"
          },
          "PurgeResultBody": {
            "type": "object",
            "properties": {
                "insight_reports": {
                    "type": "integer",
                    "minimum": 0
                },
                "depositTransactions": {
                    "type": "integer",
                    "minimum": 0
                },
                "equitiesTransactions": {
                    "type": "integer",
                    "minimum": 0
                },
                "etfTransactions": {
                    "type": "integer",
                    "minimum": 0
                },
                "mutualFundsTransactions": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": [
                "insight_reports",
                "depositTransactions",
                "equitiesTransactions",
                "etfTransactions",
                "mutualFundsTransactions"
            ],
            "title": "PurgeResultBody"
          },
            "requests.ListDepositTransactionsRequest": {
                "type": "object",
                "properties": {
                  "limit": { "type": "integer" },
                  "offset": { "type": "integer" },
                  "orderBy": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListDepositTransactionsOrderBy" }
                  },
                  "refIds": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "where": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListDepositTransactionsWhere" }
                  }
                }
              },
              "requests.ListDepositTransactionsOrderBy": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "order": { "type": "string" }
                }
              },
              "requests.ListDepositTransactionsWhere": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "amount_gte": { "type": "number" },
                  "amount_lte": { "type": "number" },
                  "categoryL1": { "type": "string" },
                  "categoryL1_list": { "type": "array", "items": { "type": "string" } },
                  "categoryL2": { "type": "string" },
                  "categoryL2_list": { "type": "array", "items": { "type": "string" } },
                  "categoryManual": { "type": "string" },
                  "categoryManual_list": { "type": "array", "items": { "type": "string" } },
                  "currentBalance": { "type": "number" },
                  "narration": { "type": "string" },
                  "reference": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnMode": { "type": "string" },
                  "txnTimestamp": { "type": "string" },
                  "txnTimestamp_gte": { "type": "string" },
                  "txnTimestamp_lte": { "type": "string" },
                  "txnType": { "type": "string" },
                  "txnValueDate": { "type": "string" }
                }
              },
              "responses.ListDepositTransactionsResponse": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/responses.ListDepositTransactionsData" }
                  },
                  "totalCount": { "type": "integer" }
                }
              },
              "responses.ListDepositTransactionsData": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "categoryL1": { "type": "string" },
                  "categoryL2": { "type": "string" },
                  "categoryManual": { "type": "string" },
                  "consentId": { "type": "string" },
                  "currentBalance": { "type": "number" },
                  "dataId": { "type": "string" },
                  "fipId": { "type": "string" },
                  "id": { "type": "string" },
                  "linkedAccRef": { "type": "string" },
                  "narration": { "type": "string" },
                  "refId": { "type": "string" },
                  "reference": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnMode": { "type": "string" },
                  "txnTimestamp": { "type": "string" },
                  "txnType": { "type": "string" },
                  "txnValueDate": { "type": "string" }
                }
              },
              "requests.ListEquitiesTransactionsRequest": {
                "type": "object",
                "properties": {
                  "limit": { "type": "integer" },
                  "offset": { "type": "integer" },
                  "orderBy": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListEquitiesTransactionsOrderBy" }
                  },
                  "refIds": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "where": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListEquitiesTransactionsWhere" }
                  }
                }
              },
              "requests.ListEquitiesTransactionsOrderBy": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "order": { "type": "string" }
                }
              },
              "requests.ListEquitiesTransactionsWhere": {
                "type": "object",
                "properties": {
                  "companyName": { "type": "string" },
                  "dematId": { "type": "string" },
                  "equityCategory": { "type": "string" },
                  "exchange": { "type": "string" },
                  "exchangeRate": { "type": "number" },
                  "exchangeRate_gte": { "type": "number" },
                  "exchangeRate_lte": { "type": "number" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "narration": { "type": "string" },
                  "orderId": { "type": "string" },
                  "transactionDateTime_gte": { "type": "string" },
                  "transactionDateTime_lte": { "type": "string" },
                  "txnDateTime": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnType": { "type": "string" },
                  "units": { "type": "number" },
                  "units_gte": { "type": "number" },
                  "units_lte": { "type": "number" }
                }
              },
              "responses.ListEquitiesTransactionsResponse": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/responses.ListEquitiesTransactionsData" }
                  },
                  "totalCount": { "type": "integer" }
                }
              },
              "responses.ListEquitiesTransactionsData": {
                "type": "object",
                "properties": {
                  "companyName": { "type": "string" },
                  "consentId": { "type": "string" },
                  "dataId": { "type": "string" },
                  "dematId": { "type": "string" },
                  "equityCategory": { "type": "string" },
                  "exchange": { "type": "string" },
                  "exchangeRate": { "type": "number" },
                  "fipId": { "type": "string" },
                  "id": { "type": "string" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "linkedAccRef": { "type": "string" },
                  "narration": { "type": "string" },
                  "orderId": { "type": "string" },
                  "refId": { "type": "string" },
                  "txnDateTime": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnType": { "type": "string" },
                  "units": { "type": "number" }
                }
              },
              "requests.ListETFTransactionsRequest": {
                "type": "object",
                "properties": {
                  "limit": { "type": "integer" },
                  "offset": { "type": "integer" },
                  "orderBy": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListETFTransactionsOrderBy" }
                  },
                  "refIds": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "where": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListETFTransactionsWhere" }
                  }
                }
              },
              "requests.ListETFTransactionsOrderBy": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "order": { "type": "string" }
                }
              },
              "requests.ListETFTransactionsWhere": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "amount_gte": { "type": "number" },
                  "amount_lte": { "type": "number" },
                  "brokerCode": { "type": "string" },
                  "dematId": { "type": "string" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "narration": { "type": "string" },
                  "nav": { "type": "number" },
                  "nav_gte": { "type": "number" },
                  "nav_lte": { "type": "number" },
                  "transactionDateTime": { "type": "string" },
                  "transactionDateTime_gte": { "type": "string" },
                  "transactionDateTime_lte": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnType": { "type": "string" },
                  "units": { "type": "number" },
                  "units_gte": { "type": "number" },
                  "units_lte": { "type": "number" }
                }
              },
              "responses.ListETFTransactionsResponse": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/responses.ListETFTransactionsData" }
                  },
                  "totalCount": { "type": "integer" }
                }
              },
              "responses.ListETFTransactionsData": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "brokerCode": { "type": "string" },
                  "consentId": { "type": "string" },
                  "dataId": { "type": "string" },
                  "dematId": { "type": "string" },
                  "fipId": { "type": "string" },
                  "id": { "type": "string" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "linkedAccRef": { "type": "string" },
                  "narration": { "type": "string" },
                  "nav": { "type": "number" },
                  "refId": { "type": "string" },
                  "transactionDateTime": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnType": { "type": "string" },
                  "units": { "type": "number" }
                }
              },
              "requests.ListMutualFundsTransactionsRequest": {
                "type": "object",
                "properties": {
                  "limit": { "type": "integer" },
                  "offset": { "type": "integer" },
                  "orderBy": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListMutualFundsTransactionsOrderBy" }
                  },
                  "refIds": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "where": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/requests.ListMutualFundsTransactionsWhere" }
                  }
                }
              },
              "requests.ListMutualFundsTransactionsOrderBy": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "order": { "type": "string" }
                }
              },
              "requests.ListMutualFundsTransactionsWhere": {
                "type": "object",
                "properties": {
                  "amc": { "type": "string" },
                  "amcFullName": { "type": "string" },
                  "amfiCode": { "type": "string" },
                  "amount": { "type": "number" },
                  "amount_gte": { "type": "number" },
                  "amount_lte": { "type": "number" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "lockInDays": { "type": "string" },
                  "lockInFlag": { "type": "string" },
                  "mutualFundName": { "type": "string" },
                  "narration": { "type": "string" },
                  "nav": { "type": "number" },
                  "navDate": { "type": "string" },
                  "nav_gte": { "type": "number" },
                  "nav_lte": { "type": "number" },
                  "registrar": { "type": "string" },
                  "schemeCode": { "type": "string" },
                  "schemePlan": { "type": "string" },
                  "txnDate": { "type": "string" },
                  "txnDate_gte": { "type": "string" },
                  "txnDate_lte": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnMode": { "type": "string" },
                  "txnType": { "type": "string" },
                  "ucc": { "type": "string" },
                  "units": { "type": "number" },
                  "units_gte": { "type": "number" },
                  "units_lte": { "type": "number" }
                }
              },
              "responses.ListMutualFundsTransactionsResponse": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/responses.ListMutualFundsTransactionsData" }
                  },
                  "totalCount": { "type": "integer" }
                }
              },
              "responses.ListMutualFundsTransactionsData": {
                "type": "object",
                "properties": {
                  "amc": { "type": "string" },
                  "amcFullName": { "type": "string" },
                  "amfiCode": { "type": "string" },
                  "amount": { "type": "number" },
                  "consentId": { "type": "string" },
                  "dataId": { "type": "string" },
                  "fipId": { "type": "string" },
                  "id": { "type": "string" },
                  "isin": { "type": "string" },
                  "isinDescription": { "type": "string" },
                  "linkedAccRef": { "type": "string" },
                  "lockInDays": { "type": "string" },
                  "lockInFlag": { "type": "string" },
                  "mutualFundName": { "type": "string" },
                  "narration": { "type": "string" },
                  "nav": { "type": "number" },
                  "navDate": { "type": "string" },
                  "refId": { "type": "string" },
                  "registrar": { "type": "string" },
                  "schemeCode": { "type": "string" },
                  "schemePlan": { "type": "string" },
                  "txnDate": { "type": "string" },
                  "txnId": { "type": "string" },
                  "txnMode": { "type": "string" },
                  "txnType": { "type": "string" },
                  "ucc": { "type": "string" },
                  "units": { "type": "number" }
                }
              },
              "responses.Error": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              },
              "ErrorCode": {
                "title": "ErrorCode",
                "type": "string",
                "enum": [
                  "api_validation_error",
                  "api_invalid_request",
                  "api_empty_template_name",
                  "api_template_not_found",
                  "api_report_not_found",
                  "api_ref_id_not_found",
                  "api_invalid_ref_id",
                  "api_template_conflict",
                  "api_missing_linked_acc_ref",
                  "api_duplicate_ref_key",
                  "api_invalid_ref_key",
                  "api_invalid_insight_name",
                  "api_insight_not_found",
                  "ins_data_missing",
                  "ins_insufficient_history",
                  "ins_invalid_format",
                  "ins_computation_error",
                  "auth_unauthorized",
                  "auth_forbidden",
                  "rate_limit_exceeded",
                  "upstream_error",
                  "internal_error",
                  "business_error"
                ],
                "description": "API-level error codes for v3 endpoints"
              },
              "ErrorType": {
                "title": "ErrorType",
                "type": "string",
                "enum": [
                  "auth",
                  "validation",
                  "rate_limit",
                  "upstream",
                  "internal",
                  "business",
                  "insight",
                  "config"
                ],
                "description": "Error type categories"
              }
      }
    }
  }